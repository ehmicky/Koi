
                  
   GITHUB_ACTIONS  
                  



TODO:
  https://github.com/actions
  https://github.com/actions/checkout
  https://github.com/sdras/awesome-actions


WORKFLOW                          #.github/workflows/WORKFLOW.y[a]ml
                                  #There can be several per repository

LIMITS ==>                        #  - 20 runs in parallel at once
                                  #  - 20 jobs in parallel at once per repository
                                  #  - 6 hours timeout per job
                                  #  - 1000 API requests per hour per repository

ORDER ==>                         #  - run: set of jobs in parallel or in order
                                  #  - job: set of steps serially. Each run in own environment
                                  #  - step: set of commands|actions serially

WORKFLOW.name                     #'WORKFLOW_NAME'. Shown in Web UI.
                                  #Def: filename

WORKFLOW.on                       #EVENT[_TYPE][_ARR] triggering this workflow.
                                  #Not recursive, i.e. workflow cannot trigger another workflow.
EVENT                             #{ EVENT_TYPE: OPTS,... }
                                  #OPTS:
                                  #  - types STR_ARR:
                                  #     - filter to only those sub-types
                                  #     - def to all sub-types unless indicated otherwise
                                  #  - branches 'LBRANCH'_ARR
                                  #  - tags 'TAG'_ARR
                                  #  - paths 'GLOB'_ARR (relative to root directory): only for for files
                                  #Possible EVENT_TYPEs:
                                  #  - check_run:
                                  #     - types: created rerequested completed requested_action
                                  #  - check_suite:
                                  #     - types: completed requested rerequested
                                  #  - commit_comment:
                                  #  - create:
                                  #  - delete:
                                  #  - deployment:
                                  #  - deployment_status:
                                  #  - fork:
                                  #  - gollum:
                                  #  - issue_comment:
                                  #     - types: created edited deleted
                                  #  - issues:
                                  #     - types: opened edited deleted transferred pinned unpinned closed reopened assigned unassigned labeled unlabeled locked unlocked milestoned demilestoned
                                  #  - label:
                                  #     - types: created edited deleted
                                  #  - member:
                                  #     - types: added edited deleted
                                  #  - milestone:
                                  #     - types: created closed opened edited deleted
                                  #  - page_build:
                                  #  - project:
                                  #     - types: created updated closed reopened edited deleted
                                  #  - project_card:
                                  #     - types: created moved converted edited deleted
                                  #  - project_column:
                                  #     - types: created updated moved deleted
                                  #  - public:
                                  #  - pull_request:
                                  #     - types (def: opened synchronize reopened): assigned unassigned labeled unlabeled opened edited closed reopened
                                  #       synchronize ready_for_review locked unlocked review_requested review_request_removed
                                  #  - pull_request_review:
                                  #     - types: submitted edited dismissed
                                  #  - pull_request_review_comment:
                                  #     - types: created edited deleted
                                  #  - push:
                                  #  - release:
                                  #     - types: published unpublished created edited deleted prereleased
                                  #  - status:
                                  #  - watch:
                                  #     - types: started
                                  #Special EVENT_TYPEs (with different OPTS):
                                  #  - schedule:
                                  #     - regular intervals
                                  #     - OPTS_ARR:
                                  #        - cron STR (e.g. '0 * * * *')

FORKED REPOSITORY ==>             #Do not trigger any workflows, unless enabled in web UI.
                                  #If enabled, GITHUB_TOKEN only allow read actions, not write
                                  #Never trigger any workflows for private repositories.

WORKFLOW.jobs.JOB_NAME            #JOB
JOB.name                          #'JOB_NAME'
JOB.runs-on                       #STR

JOB.steps                         #STEP_ARR
STEP.id                           #'STEP_ID'
STEP.name                         #'STEP_NAME'
STEP.uses                         #Action to use among:
                                  #  - 'USER/REPO[@BRANCH|VERSION|COMMIT]':
                                  #      - repository with a top-level action.yml
                                  #      - not private repository
                                  #  - 'PATH' to a DIR with an action.yml. Relative to root directory.
                                  #  - 'docker://IMAGE': public Docker image
STEP.with                         #ACTION_OPTS
STEP.run                          #'BASH_COMMAND'

${{VARR}}                         #Can be used inside:
                                  #  - STEP.run
                                  #  - STEP.runs-on
                                  #VARR can be:
                                  #  - steps.STEP_ID.**
                                  #  - matrix.VAR
WORKFLOW.strategy.matrix          #Custom OBJ.
                                  #Values must be ARR
                                  #Meant to be used by ${{VARR}}
                                  #  - this will expand to several values

STATUS BADGE ==>                  #https://github.com/USER/REPO/workflows/WORKFLOW_NAME|FILENAME/badge.svg

CANCEL|RE-RUN ==>                 #Done through web UI

LOGS ==>                          #Can be seen through web UI
SECRET ACTIONS_RUNNER_DEBUG=true  #Add debug information about environment and execution order
SECRET ACTIONS_STEP_DEBUG=true    #Add debug information about jobs

DOWNLOAD ARTIFACTS ==>            #Done through web UI
