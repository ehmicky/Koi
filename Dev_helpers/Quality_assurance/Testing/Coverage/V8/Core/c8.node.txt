
      
   C8  
      



ALTERNATIVES ==>                  #  - c8 (prefered): run it with NODE_V8_COVERAGE
                                  #  - eywek v8-coverage:
                                  #     - run it using INSPECTOR core module
                                  #     - does almost same otherwise

VERSION ==>                       #7.0.1

CONFIG ==>                        #Either:
                                  #  - CLI --OPT
                                  #  - PACKAGE.c8 OBJ
                                  #  - [.../].c8rc[.json]

c8 ...                            #Do:
                                  #  - create v8 coverage files by running Node with ENVVAR NODE_V8_COVERAGE
                                  #  - merge all v8 coverage files
                                  #  - convert to ISTANBUL_FILECOV (with V8-TO-ISTANBUL)
                                  #     - translate positions using source maps
                                  #  - convert to ISTANBUL_COVEMAP (with ISTANBUL-LIB-COVERAGE)
                                  #  - run reporters (with ISTANBUL-LIB-REPORT)
                                  #  - check coverage
--reporter|r 'FORMAT'
--report[s]-dir|o 'DIR'
--exclude|x 'GLOB'
--include|n 'GLOB'
--all                             #Like nyc|Istanbul, including defaults

--temp-directory PATH             #Def: --report-dir
--[no-]clean                      #BOOL (def: true). Remove temp-directory after run.
--resolve DIR                     #Base directory for files
--[no-]omit-relative              #Def: true

--check-coverage                  #Exit code 1 if fails. Does report too.
--lines|functions|branches|
 statements NUM                   #
--per-file                        #Def: false

--wrapper-length NUM              #Size of header injected by either require() (62, def) or import() (0)

c8 report                         #Same but without running and instrumenting Node.js first

c8 check-coverage                 #Report + check-coverage.


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        V8-TO-ISTANBUL         :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


VERSION ==>                       #4.0.1

V8-TO-ISTANBUL('./SOURCE_FILE'    #NUM is like --wrapper-length of c8 (def: 62)
 [, NUM][, OPTS])->CSCRIPT        #  - used to shift position offsets
                                  #Apply source maps if available:
                                  #  - either inline or external source map:
                                  #     - using CONVERT-SOURCE-MAP.fromSource|fromMapFileSource (see its doc)
                                  #  - cannot have multiple SOURCE_MAP.sources per SOURCE_MAP
                                  #Adds line-wise coverage (V8 otherwise is only branch-wise and file-wise)
                                  #OPTS
                                  #  - source STR, originalSource STR, sourceMap.sourcemap SOURCEMAP: otherwise, use fs.readFileSync()
CSCRIPT.load()->PROMISE           #Must be done before applyCoverage()
CSCRIPT.applyCoverage(V8_FILECOV) #
CSCRIPT.toIstanbul()
 ->ISTANBUL_FILECOV               #

/* c8 ignore next [NUM] */        #Comment to disable next line|branch
