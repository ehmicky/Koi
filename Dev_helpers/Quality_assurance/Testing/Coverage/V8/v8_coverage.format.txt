
               
   V8_COVERAGE  
               



GOAL ==>                          #Code instrumentation to produce coverage.
                                  #Done on V8 bytecode.

MODES ==>                         #Either:
                                  #  - "precise coverage": slow
                                  #  - "best efforts coverage": faster but imprecise (can lose information if function is
                                  #    out-of-scope and garbage collected)

DETAILS ==>                       #Includes:
                                  #  - function and branch hits, but not line hits
                                  #  - branches that were not hit
                                  #  - internal Node.js code
                                  #  - child processes, but not worker threads


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            FORMAT             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


COVERAGE                          #Content of the coverage file, as JSON
COVERAGE.result                   #FILECOV_ARR, ordered by load start

FILECOV                           #Coverage of a special file
FILECOV.scriptId                  #Unique ID, incrementing 'INT'
FILECOV.url                       #'PATH'
FILECOV.functions                 #FUNCCOV_ARR

FUNCCOV                           #Coverage of a specific function
FUNCCOV.functionName              #FUNC.name
                                  #Can be '', including for top-level scope
FUNCCOV.ranges                    #BRANCHCOV_ARR
FUNCCOV.isBlockCoverage           #BOOL. If false, branch covers the whole function, i.e. FUNCCOV.ranges === 1
                                  #Note that on the other hand, sometimes FUNCCOV.ranges === 1 but FUNCCOV.isBlockCoverage === true

BRANCHCOV                         #Coverage of a specific branch
BRANCHCOV.startOffset|endOffset   #Bytes offset inside the file
BRANCHCOV.count                   #NUM of times it was hit. Can be 0


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:        INSTRUMENTATION        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


INSPECTOR PROTOCOL ==>            #Must use inspector protocol to do it.

ENVVAR NODE_V8_COVERAGE=DIR       #Record "precise coverage" information and save to DIR/coverage-PID-TIMESTAMP.json
                                  #For Node.js only, >= 10.12
                                  #Does it by using the inspector protocol under the hood
