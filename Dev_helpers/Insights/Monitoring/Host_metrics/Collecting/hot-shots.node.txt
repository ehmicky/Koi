
             
   HOT-SHOTS  
             



ALTERNATIVES ==>                  #See statsd-client

NATIVE MODULE ==>                 #A native module is installed as optionalDependencies for UDS support

new HotShots([OPTS])->CLIENT      #

OPTS.prefix                       #STR (def: '')
OPTS.suffix                       #STR (def: '')
OPTS.mock                         #
OPTS.globalTags                   #Either:
                                  #  - 'KEY:VAL'_ARR
                                  #  - OBJ:
                                  #     - use each KEY|VAL
                                  #     - replace any :|,@ with _
                                  #        - if OPTS.telegrah true, does not replace @
                                  #If ENVVAR DD_ENTITY_ID set, add "dd.internal.entity_id:DD_ENTITY_ID" to them
OPTS.telegraf                     #BOOL (def: false)
OPTS.tagPrefix                    #STR (def: '#')
OPTS.tagSeparator                 #STR (def: ',')
OPTS.maxBufferSize                #NUM (def: 0)
OPTS.sampleRate                   #NUM (def: 1)
OPTS.bufferFlushInterval          #NUM (def: 1000)
OPTS.udsGracefulErrorHandling     #BOOL (def: true)

OPTS.protocol                     #'udp' (def), 'uds', 'tcp' or 'stream'
                                  #statsd server protocol
OPTS.host                         #STR (def: ENVVAR DD_AGENT_HOST, or 'localhost') (for UDP|UDS|TCP)
OPTS.useDefaultRoute              #BOOL (def: false).
                                  #Set OPTS.host to machine's IP (e.g. "192.168.1.1" on my machine).
                                  #Uses /proc/net/route, finding one with destination 00000000
OPTS.port                         #STR (def: ENVVAR DD_DOGSTATSD_PORT, or 8125) (for UDP|UDS|TCP)
OPTS.path                         #Socket 'PATH' (UDS only) (def: '/var/run/datadog/dsd.socket')
OPTS.cacheDns                     #BOOL (def: false) (UDP only)
                                  #Caches DNS lookup of host
OPTS.cacheDnsTtl                  #NUM (in ms, def: 1 minute)
                                  #How long to cache DNS
OPTS.stream                       #STREAM with BUFFER chunks receiving events and packages ('stream' only)
OPTS.errorHandler(ERROR)          #Fired on transport ERROR

OPTS.globalize                    #BOOL (def: false). Sets global.statsd = CLIENT
