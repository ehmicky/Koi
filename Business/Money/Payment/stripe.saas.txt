
          
   STRIPE  
          



TODO:
  - https://stripe.com/docs/api
  - go through each endpoint and see the difference between the full resource and the endpoint's request and response
     - find a notation in this doc to show differences
     - including GET query parameters
  - go through each attribute, edit and try to make sense of them without going in guides yet
  - https://stripe.com/docs/api/errors
     - including CHARGE.failure_code|message
  - https://github.com/stripe/stripe-node
  - https://stripe.com/docs
  - difference Connect custom vs express vs standard
     - including in API it sometimes shows "Custom only" or "Custom and Express only"
  - pricing
  - go through Stripe dashboard
  - compare with other providers like PayPal


VERSION ==>                       #2019-03-14

ENDPOINT ==>                      #https://api.stripe.com/v1/

MIME ==>                          #Request body: x-www-form-urlencoded
                                  #Response body: JSON

AUTHENTICATION ==>                #4 keys by default:
                                  #  - either production and one testing:
                                  #     - separate data
                                  #     - payments not processed by providers
                                  #     - simpler steps for some flows
                                  #     - fewer retries
                                  #     - RESOURCE.livemode BOOL on all RESOURCEs
                                  #  - either secret or public ("publishable")
                                  #Can create|delete more:
                                  #  - can be revoked
                                  #     - including with a timeout of 12 hours
                                  #  - can be scoped to:
                                  #     - specific endpoints
                                  #     - read/write, read-only, none

GET /RESOURCES?limit=NUM          #Pagination size (def: 10). Min 1, max 100.
GET /RESOURCES
 ?starting_after|ending_before
 =RESOURCE.id                     #Cursor pagination

LIST                              #Paginated response
LIST.data                         #OBJ_ARR
LIST.has_more                     #BOOL
LIST.total_count                  #NUM
LIST.url                          #'/v1/...'

?expand=VARR,...                  #Populate attribute
                                  #Max depth 4

?idempotency_key=RANDOM           #Memoize using:
                                  #  - RANDOM
                                  #  - request parameters (including body)
                                  #  - response's status code (including 4**|5**)
                                  #Error is same RANDOM but others two are different.
                                  #Allows for safe retries.
                                  #Only for 24 hours.
                                  #Only memoize requests that passed input validation layer.
                                  #Only for `POST`

RESOURCE.id                       #STR
RESOURCE.object                   #Either:
                                  #  - 'list': for list endpoints
                                  #  - 'RESOURCE_NAME' (e.g. 'balance_transaction')
RESOURCE.metadata                 #Custom OBJ
                                  #Max 50 properties, max KEY length 40 bytes, max value length 500 bytes.

RESOURCE.created                  #DATE_NUM
GET /RESOURCES?created=OBJ        #Filters by OBJ: gt[e]|lt[e] DATE_NUM

Request-Id [S]                    #Request/response ID, for debugging

NOTATION ==>                     ?#Optional field
                               *CU#Required on create|update
                               =CU#Updatable on create|update

OPTIONAL FIELDS ==>               #Are null if not present

MONEY                             #INT. In the currency's smallest unit (e.g. cents for USD).
                                  #Can be negative.
PMONEY                            #Like MONEY but >= 0
RESOURCE.currency                 #Always as a sibling on OBJ with MONEY.
                                  #Also present on CUSTOMER|CARD|BANK_ACCOUNT|SKU
                                  #STR (ISO 4217) (e.g. 'usd')
DATE_NUM                          #Unix timestamp in seconds.
COUNTRY                           #STR (2-letters ISO code)

BILL_DETAILS.address              #ADDRESS
BILL_DETAILS.email                #STR.
BILL_DETAILS.name                 #STR. Recipient name.
BILL_DETAILS.phone                #STR. Includes country extension
SHIPPING                          #Like ADDRESS with extra fields:
SHIPPING.carrier                  #STR. Delivery service like 'Fedex', 'UPS', 'USPS', etc.
SHIPPING.tracking_number          #'STR,...'.
PRECISE_SHIPPING                  #Like SHIPPING with extra fields:
PRECISE_SHIPPING.tracking_url     #'URL'
PRECISE_SHIPPING.status           #STR among 'pending', 'shipped', 'delivered', 'returned', 'failure', 'canceled'.
PRECISE_SHIPPING.eta              #DATE_NUM
VERIFIED_BILL_DETAILS             #Like ADDRESS with extra fields:
VERIFIED_BILL_DETAILS.verified_*  #Like ADDRESS.* but verified by provider.

ADDRESS                           #
ADDRESS.country                   #COUNTRY
ADDRESS.state                     #STR
ADDRESS.city                      #STR
ADDRESS.postal_code               #STR
ADDRESS.line1                     #STR (e.g. street)
ADDRESS.line2                     #STR (e.g. appt)

GET /balance                      #BALANCE
                                  #Current Stripe "aggregated bank account".
BALANCE.available                 #BALANCE_SUB_ARR. Money available.
BALANCE.pending                   #BALANCE_SUB_ARR. Money not available yet due to 7-day rolling pay cycle.
BALANCE.connect_reserved          #BALANCE_SUB_ARR. Money held.
BALANCE_SUB                       #Subdivision of BALANCE for each currency and bank account
BALANCE_SUB.amount                #MONEY
BALANCE_SUB.source_types.TYPE     #INT. How amount is divided between account TYPE:
                                  #  - 'bank_account'
                                  #  - 'bitcoin_receiver'
                                  #  - 'card'

GET /balance/history[/ID]         #BALANCE_TRANSACTION.
                                  #BALANCE's single transaction
BALANCE_TRANSACTION.amount        #PMONEY paid by sender
BALANCE_TRANSACTION.fee           #PMONEY paid to Stripe or taxes
BALANCE_TRANSACTION.fee_details   #FEE_DETAILS
FEE_DETAILS.application           #CONNECT_ACCOUNT.id
FEE_DETAILS.amount                #PMONEY
FEE_DETAILS.description           #STR
FEE_DETAILS.type                  #Can be: 'application_fee', 'stripe_fee' or 'tax'
BALANCE_TRANSACTION.net           #amount - fee
BALANCE_TRANSACTION.exchange_rate #NUM
BALANCE_TRANSACTION.available_on  #DATE_NUM. When will be 'available' in BALANCE. Until then is 'pending'
BALANCE_TRANSACTION.status        #'pending' or 'available'
BALANCE_TRANSACTION.type          #Can be:
                                  #  - adjustment
                                  #  - advance
                                  #  - advance_funding
                                  #  - application_fee
                                  #  - charge
                                  #  - connect_collection_transfer
                                  #  - issuing_authorization_hold
                                  #  - issuing_authorization_release
                                  #  - issuing_transaction
                                  #  - payment
                                  #  - payout
                                  #  - refund
                                  #  - reserve_transaction
                                  #  - reserved_funds
                                  #  - stripe_fee
                                  #  - stripe_fx_fee
                                  #  - tax_fee
                                  #  - topup
                                  #  - topup_reversal
                                  #  - transfer
                                  #  - *_refund: for application_fee|payment|payment_failure|transfer
                                  #  - *_cancel: for payout|transfer
                                  #  - *_failure: for payout|refund|transfer
BALANCE_TRANSACTION.source        #Related RESOURCE.id
BALANCE_TRANSACTION.description   #STR

GET /charges[/ID]                 #CHARGE
POST /charges[/ID]                #Credit|debit card's charge.
POST /charges[/ID]/capture        #Two-steps payment flow:
                                  #  - first create with CHARGE.captured false
                                  #  - then set to true with this method
PAYLOAD.capture                   #BOOL
CHARGE.captured                   #BOOL
GET /charges?customer=CUSTOMER.id
GET /charges?transfer_group=STR   #Filters
CHARGE.balance_transaction        #BALANCE_TRANSACTION.id
CHARGE.application                #CONNECT_ACCOUNT.id
CHARGE.on_behalf_of               #CONNECT_ACCOUNT.id
                                  #When one made transaction of another's behalf
CHARGE.application_fee            #CONNECT_ACCOUNT_FEE.id
CHARGE.customer                   #CUSTOMER.id
CHARGE.dispute                    #DISPUTE.id
CHARGE.invoice                    #INVOICE.id
CHARGE.order                      #ORDER.id
CHARGE.payment_intent             #PAYMENTINTENT.id
CHARGE.payment_method             #PAYMENT_METHOD.id
CHARGE.review                     #REVIEW.id
CHARGE.transfer                   #TRANSFER.id. Only applicable if the charge was created using the destination parameter.
CHARGE.source_transfer            #TRANSFER.id. Only present if the charge came from another Stripe account.
CHARGE.amount                     #PMONEY
CHARGE.amount_refunded            #PMONEY refunded, if any, or 0.
CHARGE.application_fee_amount     #PMONEY
CHARGE.paid                       #BOOL for success
CHARGE.status                     #STR among 'succeeded', 'pending', 'failed'.
CHARGE.receipt_email              #'EMAIL' receipt was sent to. null until sent.
CHARGE.receipt_number             #STR.
CHARGE.receipt_url                #STR. Kept up-to-date.
CHARGE.source                     #METHOD_DETAILS
CHARGE.payment_method_details     #PAYMENT_METHOD_DETAILS
CHARGE.billing_details            #BILL_DETAILS.
CHARGE.shipping                   #SHIPPING.
CHARGE.fraud_details              #FRAUD_DETAILS
FRAUD_DETAILS.stripe_report       #'fraudulent' (set by Stripe)
FRAUD_DETAILS.user_report         #'fraudulent|safe' (set by current user)
CHARGE.outcome                    #OUTCOME. Whether payment was accepted.
OUTCOME.network_status            #STR among:
                                  #  - 'approved_by_network'
                                  #  - 'declined_by_network'
                                  #  - 'not_sent_to_network'
                                  #  - 'reversed_after_approval': bank authorized, but Stripe blocked
OUTCOME.reason                    #STR among:
                                  #  - 'highest|elevated_risk_level': blocked by Radar
                                  #  - 'rule': blocked by custom rule
OUTCOME.risk_level                #STR among:
                                  #  - 'normal', 'elevated', 'highest'
                                  #  - 'not_assessed': non-card payments
                                  #  - 'unknown'
OUTCOME.risk_score                #0-100
                                  #Undefined for non-card payments
OUTCOME.rule                      #Radar's rule ID
OUTCOME.seller_message            #STR. Explanation.
OUTCOME.type                      #STR among 'authorized', 'manual_review', 'issuer_declined', 'blocked', 'invalid'.
CHARGE.refunded                   #BOOL. False if not refunded or partially refunded.
CHARGE.refunds                    #REFUND_LIST. Refunds that have been applied.
CHARGE.statement_descriptor       #STR. Extra information to show to customer's bank transaction statement.
CHARGE.description                #STR
CHARGE.transfer_data              #TRANSFER_DATA.
TRANSFER_DATA.amount              #MONEY (def: CHARGE.amount).
TRANSFER_DATA.destination         #STR. Stripe account to transfer funds to if CHARGE.transfer_data was defined.
CHARGE.transfer_group             #STR.

GET /customers[/ID]
POST /customers[/ID]
DELETE /customers/ID              #
CUSTOMER.account_balance          #integer Current balance, if any, being stored on the customer’s account.
                                  #If negative, the customer has credit to apply to the next invoice.
                                  #If positive, the customer has an amount owed that will be added to the next invoice.
                                  #The balance does not refer to any unpaid invoices; it solely takes into account amounts that have yet to be successfully applied to any invoice.
                                  #This balance is only taken into account as invoices are finalized. Note that the balance does not include unpaid invoices.
CUSTOMER.default_source           #string EXPANDABLE ID of the default payment source for the customer.
CUSTOMER.delinquent               #boolean When the customer’s latest invoice is billed by charging automatically, delinquent is true if the invoice’s latest charge is failed.
                                  #When the customer’s latest invoice is billed by sending an invoice, delinquent is true if the invoice is not paid by its due date.
CUSTOMER.description              #string An arbitrary string attached to the object. Often useful for displaying to users.
CUSTOMER.discount                 #DISCOUNT
CUSTOMER.email                    #string The customer’s email address.
CUSTOMER.invoice_prefix           #string The prefix for the customer used to generate unique invoice numbers.
CUSTOMER.invoice_settings         #INVOICE_SETTINGS. The customer’s default invoice settings.
INVOICE_SETTINGS.custom_fields
INVOICE_SETTINGS.footer           #Like INVOICE.*
CUSTOMER.shipping                 #BILL_DETAILS Mailing and shipping address for the customer. Appears on invoices emailed to this customer.
CUSTOMER.sources                  #LIST The customer’s payment sources, if any.
CUSTOMER.subscriptions            #LIST The customer’s current subscriptions, if any.
CUSTOMER.tax_info                 #TAX_INFO. The customer’s tax information. Appears on invoices emailed to this customer.
TAX_INFO.tax_id                   #string The customer’s tax ID number.
TAX_INFO.type                     #string The type of ID number.
CUSTOMER.tax_info_verification    #TAX_INFO_VERIFICATION. Describes the status of looking up the tax ID provided in tax_info.
TAX_INFO_VERIFICATION.status      #string The state of verification for this customer. Possible values are unverified, pending, or verified.
TAX_INFO_VERIFICATIN.verified_name#string The official name associated with the tax ID returned from the external provider.

GET /disputes[/ID]
POST /disputes/ID                 #
POST /disputes/ID/close           #Change DISPUTE.status from 'needs_response' to 'lost'
DISPUTE                           #When a CUSTOMER questions our CHARGE.
DISPUTE.amount                    #MONEY Disputed amount. Usually the amount of the charge, but can differ (usually because of currency fluctuation or because only part of the order is disputed).
DISPUTE.balance_transactions      #BALANCE_TRANSACTION_ARR List of zero, one, or two balance transactions that show funds withdrawn and reinstated to your Stripe account as a result of this dispute.
DISPUTE.charge                    #CHARGE.id of the charge that was disputed.
DISPUTE.evidence                  #EVIDENCE. Evidence provided to respond to a dispute. Updating any field in the hash will submit all fields in the hash for review.
DISPUTE.evidence_details          #EVIDENCE_DETAILS. Information about the evidence submission.
EVIDENCE_DETAILS.due_by           #DATE_NUM Date by which evidence must be submitted in order to successfully challenge dispute.
                                  #Will be null if the customer’s bank or credit card company doesn’t allow a response for this particular dispute.
EVIDENCE_DETAILS.has_evidence     #boolean Whether evidence has been staged for this dispute.
EVIDENCE_DETAILS.past_due         #boolean Whether the last evidence submission was submitted past the due date.
                                  #Defaults to false if no evidence submissions have occurred.
                                  #If true, then delivery of the latest evidence is not guaranteed.
EVIDENCE_DETAILS.submission_count #integer The number of times evidence has been submitted. Typically, you may only submit evidence once.
DISPUTE.is_charge_refundable      #boolean If true, it is still possible to refund the disputed payment.
                                  #Once the payment has been fully refunded, no further funds will be withdrawn from your Stripe account as a result of this dispute.
DISPUTE.reason                    #string Reason given by cardholder for dispute. Possible values are bank_cannot_process, check_returned, credit_not_processed, customer_initiated, debit_not_authorized,
                                  #duplicate, fraudulent, general, incorrect_account_details, insufficient_funds, product_not_received, product_unacceptable, subscription_canceled, or unrecognized.
                                  #Read more about dispute reasons.
DISPUTE.status                    #string Current status of dispute.
                                  #Possible values are warning_needs_response, warning_under_review, warning_closed, needs_response, under_review, charge_refunded, won, or lost.

EVIDENCE.access_activity_log      #string Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product.
                                  #This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.
EVIDENCE.billing_address          #string The billing address provided by the customer.
EVIDENCE.cancellation_policy      #FILE.id Your subscription cancellation policy, as shown to the customer.
EVIDENCE.
 cancellation_policy_disclosure   #string An explanation of how and when the customer was shown your refund policy prior to purchase.
EVIDENCE.cancellation_rebuttal    #string A justification for why the customer’s subscription was not canceled.
EVIDENCE.customer_communication   #FILE.id Any communication with the customer that you feel is relevant to your case.
                                  #Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service.
EVIDENCE.customer_email_address   #string The email address of the customer.
EVIDENCE.customer_name            #string The name of the customer.
EVIDENCE.customer_purchase_ip     #string The IP address that the customer used when making the purchase.
EVIDENCE.customer_signature       #FILE.id A relevant document or contract showing the customer’s signature.
EVIDENCE.                         #FILE.id Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc.
 duplicate_charge_documentation   #This document should be paired with a similar document from the disputed payment that proves the two payments are separate.
EVIDENCE.
 duplicate_charge_explanation     #string An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.
EVIDENCE.duplicate_charge_id      #string The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.
EVIDENCE.product_description      #string A description of the product or service that was sold.
EVIDENCE.receipt                  #FILE.id Any receipt or message sent to the customer notifying them of the charge.
EVIDENCE.refund_policy            #FILE.id Your refund policy, as shown to the customer.
EVIDENCE.refund_policy_disclosure #string Documentation demonstrating that the customer was shown your refund policy prior to purchase.
EVIDNCE.refund_refusal_explanation#string A justification for why the customer is not entitled to a refund.
EVIDENCE.service_date             #string The date on which the customer received or began receiving the purchased service, in a clear human-readable format.
EVIDENCE.service_documentation    #FILE.id Documentation showing proof that a service was provided to the customer.
                                  #This could include a copy of a signed contract, work order, or other form of written agreement.
EVIDENCE.shipping_address         #string The address to which a physical product was shipped. You should try to include as complete address information as possible.
EVIDENCE.shipping_carrier         #string The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
                                  #If multiple carriers were used for this purchase, please separate them with commas.
EVIDENCE.shipping_date            #string The date on which a physical product began its route to the shipping address, in a clear human-readable format.
EVIDENCE.shipping_documentation   #FILE.id Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you.
                                  #This could include a copy of the shipment receipt, shipping label, etc. It should show the customer’s full shipping address, if possible.
EVIDENCE.shipping_tracking_number #string The tracking number for a physical product, obtained from the delivery service.
                                  #If multiple tracking numbers were generated for this purchase, please separate them with commas.
EVIDENCE.uncategorized_file       #FILE.id Any additional evidence or statements.
EVIDENCE.uncategorized_text       #string Any additional evidence or statements.

GET /events[/ID]                  #
EVENT                             #Generic event of some API resource.
EVENT.api_version                 #string The Stripe API version used to render data. Note: This property is populated only for events on or after October 31, 2014.
EVENT.data                        #EVENT_DATA. Object containing data associated with the event.
EVENT_DATA.object                 #OBJ containing the API resource relevant to the event. For example, an invoice.created event will have a full invoice object as the value of the object key.
EVENT_DATA.previous_attributes    #OBJ containing the names of the attributes that have changed, and their previous values (sent along only with *.updated events).
EVENT.pending_webhooks            #positive integer or zero Number of webhooks that have yet to be successfully delivered (i.e., to return a 20x response) to the URLs you’ve specified.
EVENT.request                     #EVENT_REQUEST. Information on the API request that instigated the event.
EVENT_REQUEST.id                  #string ID of the API request that caused the event.
                                  #If null, the event was automatic (e.g., Stripe’s automatic subscription handling).
                                  #Request logs are available in the dashboard, but currently not in the API.
EVENT_REQUEST.idempotency_key     #string The idempotency key transmitted during the request, if any. Note: This property is populated only for events on or after May 23, 2017.
EVENT.type                        #string Description of the event (e.g., invoice.created or charge.refunded).

GET /files[/ID]
POST /files                       #Endpoint is https://files.stripe.com for POST
FILE                              #Any file
FILE.filename                     #string A filename for the file, suitable for saving to a filesystem.
FILE.links                        #FILE_LINK_LIST
FILE.purpose                      #string The purpose of the file.
                                  #Possible values are business_icon, business_logo, customer_signature, dispute_evidence, finance_report_run, identity_document, pci_document, sigma_scheduled_query,
                                  #or tax_document_user_upload.
FILE.size                         #integer The size in bytes of the file object.
FILE.title                        #string A user friendly title for the document.
FILE.type                         #string The type of the file returned (e.g., csv, pdf, jpg, or png).
FILE.url                          #string The URL from which the file can be downloaded using your live secret API key.

GET /file_links[/ID]
POSt /file_links[/ID]             #Link sharing a FILE publicly.
FILE_LINK.expired                 #boolean Whether this link is already expired.
FILE_LINK.expires_at              #timestamp Time at which the link expires.
FILE_LINK.file                    #FILE.id The file object this link points to.
FILE_LINK.url                     #string The publicly accessible URL to download the file.

GET /payment_intents[/ID]
POST /payment_intents[/ID]        #
POST /payment_intents/ID/confirm  #Set payment's method and start payment.
                                  #If additional authentication required, set PINTENT.status to 'requires_action' and use PINTENT.next_action
                                  #If failure, set PINTENT.status 'requires_payment_method'
                                  #If success, set PINTENT.status 'succeeded' (or 'requires_capture' if PINTENT.capture_methd 'manual')
                                  #Payload attributes: client_secret, payment_method, receipt_email, return_url, shipping, source, save_payment_method
PAYLOAD.save_payment_method       #Set to true to save the PaymentIntent’s payment method (either source or payment_method) to the associated customer.
                                  #If the payment method is already attached, this parameter does nothing.
                                  #This parameter defaults to false and applies to the payment method passed in the same request or the current payment method attached to the PaymentIntent and must be
                                  #specified again if a new payment method is added.
POST /payment_intents/ID/capture  #Gets money if PINTENT.status 'requires_capture'
                                  #Payload attributes: amount_to_capture MONEY, application_fee_amount
POST /payment_intents/ID/cancel   #From PINTENT.status 'requires*' to 'canceled'.
                                  #If PINTENT.status 'requires_capture', PINTENT.amount_capturable is refunded.
                                  #Payload attributes: cancellation_reason
PINTENT                           #Ongoing flow to pay by a CUSTOMER.
PINTENT.amount                    #MONEY Amount intended to be collected by this PaymentIntent.
PINTENT.amount_capturable         #MONEY Amount that can be captured from this PaymentIntent.
PINTENT.amount_received           #MONEY Amount that was collected by this PaymentIntent.
PINTENT.application               #CONNECT_ACCOUNT.id ID of the Connect application that created the PaymentIntent.
PINTENT.application_fee_amount    #integer The amount of the application fee (if any) for the resulting payment. See the PaymentIntents Connect usage guide for details.
PINTENT.canceled_at               #timestamp Populated when status is canceled, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.
PINTENT.cancellation_reason       #string User-given reason for cancellation of this PaymentIntent, one of duplicate, fraudulent, requested_by_customer, or failed_invoice.
PINTENT.capture_method            #string Capture method of this PaymentIntent, one of automatic or manual.
PINTENT.charges                   #CHARGE_LIST
PINTENT.client_secret             #string The client secret of this PaymentIntent.
                                  #Used for client-side retrieval using a publishable key.
                                  #Please refer to dynamic authentication guide on how client_secret should be handled.
PINTENT.confirmation_method       #string Confirmation method of this PaymentIntent, one of manual or automatic.
PINTENT.customer                  #CUSTOMER.id ID of the Customer this PaymentIntent is for if one exists.
PINTENT.description               #string An arbitrary string attached to the object. Often useful for displaying to users.
PINTENT.invoice                   #INVOICE.id ID of the invoice that created this PaymentIntent, if it exists.
PINTENT.last_payment_error        #LPERROR. The payment error encountered in the previous PaymentIntent confirmation.
LPERROR.type                      #string The type of error returned.
                                  #One of api_connection_error, api_error, authentication_error, card_error, idempotency_error, invalid_request_error, or rate_limit_error
LPERROR.charge                    #CHARGE.id For card errors
LPERROR.code                      #string For some errors that could be handled programmatically, a short string indicating the error code reported.
LPERROR.decline_code              #string For card errors resulting from a card issuer decline, a short string indicating the card issuer’s reason for the decline if they provide one.
LPERROR.doc_url                   #string A URL to more information about the error code reported.
LPERROR.message                   #string A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.
LPERROR.param                     #string If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.
LPERROR.payment_intent            #PINTENT The PaymentIntent object for errors returned on a request involving a PaymentIntent.
LPERROR.payment_method            #PAYMENT_METHOD
LPERROR.source                    #SOURCE
PINTENT.next_action               #NEXT_ACTION. If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.
NEXT_ACTION.redirect_to_url       #REDIRECT_TO_URL. Contains instructions for authenticating a payment by redirecting your customer to another page or application.
REDIRECT_TO_URL.return_url        #string If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.
REDIRECT_TO_URL.url               #string The URL you must redirect your customer to in order to authenticate the payment.
NEXT_ACTION.type                  #string Type of the next action to perform, one of redirect_to_url or use_stripe_sdk.
NEXT_ACTION.use_stripe_sdk        #OBJ. When confirming a PaymentIntent with Stripe.js, Stripe.js depends on the contents of this object to invoke authentication flows.
                                  #The shape of the contents is subject to change and is only intended to be used by Stripe.js.
PINTENT.on_behalf_of              #string The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents Connect usage guide for details.
PINTENT.payment_method            #PAYMENT_METHOD.id
PINTENT.payment_method_types      #array containing strings The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.
PINTENT.receipt_email             #string Email address that the receipt for the resulting payment will be sent to.
PINTENT.review                    #REVIEW.id
PINTENT.shipping                  #SHIPPING
PINTENT.source                    #CARD|BANK_ACCOUNT|SOURCE.id
PINTENT.statement_descriptor      #string Extra information about a PaymentIntent. This will appear on your customer’s statement when this PaymentIntent succeeds in creating a charge.
PINTENT.status                    #string Status of this PaymentIntent, one of requires_payment_method, requires_confirmation, requires_action, processing, requires_authorization, requires_capture,
                                  #canceled, or succeeded.
PINTENT.transfer_data             #TRANSFER_DATA. The data with which to automatically create a Transfer when the payment is finalized. See the PaymentIntents Connect usage guide for details.
PINTENT.transfer_group            #string A string that identifies the resulting payment as part of a group. See the PaymentIntents Connect usage guide for details.

GET /payouts[/ID]
POST /payouts[/ID]                #
POST /payouts/ID/cancel           #Set PAYOUT.status to 'in_transit' then 'canceled'
PAYOUT                            #Transfer money from CONNECT_ACCOUNT to bank account
PAYOUT.amount                     #MONEY Amount to be transferred to your bank account or debit card.
PAYOUT.arrival_date               #timestamp Date the payout is expected to arrive in the bank. This factors in delays like weekends or bank holidays.
PAYOUT.automatic                  #boolean Returns true if the payout was created by an automated payout schedule, and false if it was requested manually.
PAYOUT.balance_transaction        #BALANCE_TRANSACTION.id Impact of this payout on your account balance.
PAYOUT.description                #string An arbitrary string attached to the object. Often useful for displaying to users.
PAYOUT.destination                #CARD|BANK_ACCOUNT.id Where it was sent to.
PAYOUT.failure_balance_transaction#BALANCE_TRANSACTION.id If the payout failed or was canceled, this will be the ID of the balance transaction that reversed the initial balance transaction, and puts the
                                  #funds from the failed payout back in your balance.
PAYOUT.failure_code               #STR among:
                                  #  - account_closed The bank account has been closed.
                                  #  - account_frozen The bank account has been frozen.
                                  #  - bank_account_restricted The bank account has restrictions on either the type, or the number, of payouts allowed.
                                  #    This normally indicates that the bank account is a savings or other non-checking account.
                                  #  - bank_ownership_changed The destination bank account is no longer valid because its branch has changed ownership.
                                  #  - could_not_process The bank could not process this payout.
                                  #  - debit_not_authorized Debit transactions are not approved on the bank account. (Stripe requires bank accounts to be set up for both credit and debit payouts.)
                                  #  - declined The bank has declined this transfer. Please contact the bank before retrying.
                                  #  - insufficient_funds Your Stripe account has insufficient funds to cover the payout.
                                  #  - invalid_account_number The routing number seems correct, but the account number is invalid.
                                  #  - incorrect_account_holder_name Your bank notified us that the bank account holder name on file is incorrect.
                                  #  - invalid_currency The bank was unable to process this payout because of its currency.
                                  #    This is probably because the bank account cannot accept payments in that currency.
                                  #  - no_account The bank account details on file are probably incorrect. No bank account could be located with those details.
                                  #  - unsupported_card The bank no longer supports payouts to this card.
PAYOUT.failure_message            #string Message to user further explaining reason for payout failure if available.
PAYOUT.method                     #string The method used to send this payout, which can be standard or instant.
                                  #instant is only supported for payouts to debit cards. (See Instant payouts for marketplaces for more information.)
PAYOUT.source_type                #string The source balance this payout came from. One of card or bank_account.
PAYOUT.statement_descriptor       #string Extra information about a payout to be displayed on the user’s bank statement.
PAYOUT.status                     #string Current status of the payout (paid, pending, in_transit, canceled or failed).
                                  #A payout will be pending until it is submitted to the bank, at which point it becomes in_transit.
                                  #It will then change to paid if the transaction goes through. If it does not go through successfully, its status will change to failed or canceled.
PAYOUT.type                       #string Can be bank_account or card.

GET /products[/ID]
POST /products[/ID]
DELETE /products/ID               #
PRODUCT                           #Products being sold
PRODUCT.active                    #boolean Whether the product is currently available for purchase.
PRODUCT.attributes                #array containing strings A list of up to 5 attributes that each SKU can provide values for (e.g., ["color", "size"]). Only applicable to products of type=good.
PRODUCT.caption                   #string A short one-line description of the product, meant to be displayable to the customer. Only applicable to products of type=good.
PRODUCT.deactivate_on             #array containing strings An array of connect application identifiers that cannot purchase this product. Only applicable to products of type=good.
PRODUCT.description               #string The product’s description, meant to be displayable to the customer. Only applicable to products of type=good.
PRODUCT.images                    #array containing strings A list of up to 8 URLs of images for this product, meant to be displayable to the customer. Only applicable to products of type=good.
PRODUCT.name                      #string The product’s name, meant to be displayable to the customer. Applicable to both service and good types.
PRODUCT.package_dimensions        #PACKAGE_DIMENSIONS. The dimensions of this product for shipping purposes.
                                  #A SKU associated with this product can override this value by having its own package_dimensions.
                                  #Only applicable to products of type=good.
PACKAGE_DIMENSIONS.
 height|length|weight|width       #NUM (inches)
PRODUCT.shippable                 #boolean Whether this product is a shipped good. Only applicable to products of type=good.
PRODUCT.statement_descriptor      #string Extra information about a product which will appear on your customer’s credit card statement.
                                  #In the case that multiple products are billed at once, the first statement descriptor will be used.
                                  #Only available on products of type=service.
PRODUCT.type                      #string The type of the product.
                                  #The product is either of type good, which is eligible for use with Orders and SKUs, or service, which is eligible for use with Subscriptions and Plans.
PRODUCT.unit_label                #string A label that represents units of this product, such as seat(s), in Stripe and on customers’ receipts and invoices. Only available on products of type=service.
PRODUCT.updated                   #timestamp
PRODUCT.url                       #string A URL of a publicly-accessible webpage for this product. Only applicable to products of type=good.

GET /refunds[/ID]
POST /refunds[/ID]                #
REFUND                            #Reverting a CHARGE
REFUND.amount                     #MONEY
REFUND.balance_transaction        #BALANCE_TRANSACTION.id Balance transaction that describes the impact on your account balance.
REFUND.charge                     #CHARGE.id that was refunded.
REFUND.description                #string An arbitrary string attached to the object. Often useful for displaying to users. (Available on non-card refunds only)
REFUND.failure_balance_transaction#BALANCE_TRANSACTION.id
                                  #If the refund failed, this balance transaction describes the adjustment made on your account balance that reverses the initial balance transaction.
REFUND.failure_reason             #string If the refund failed, the reason for refund failure if known. Possible values are lost_or_stolen_card, expired_or_canceled_card, or unknown.
REFUND.reason                     #string Reason for the refund. If set, possible values are duplicate, fraudulent, and requested_by_customer.
REFUND.receipt_number             #string This is the transaction number that appears on email receipts sent for this refund.
REFUND.source_transfer_reversal   #TRAVERSAL.id The transfer reversal that is associated with the refund.
                                  #Only present if the charge came from another Stripe account.
                                  #See the Connect documentation for details.
REFUND.status                     #string Status of the refund. For credit card refunds, this can be succeeded or failed.
                                  #For other types of refunds, it can be pending, succeeded, failed, or canceled. Refer to our refunds documentation for more details.
REFUND.transfer_reversal          #TRAVERSAL.id If the accompanying transfer was reversed, the transfer reversal object. Only applicable if the charge was created using the destination parameter.

GET /tokens/ID
POST /tokens                      #
TOKEN                             #Representation of a card or bank account information.
                                  #Goal is to avoid leaking those information by using a TOKEN instead.
                                  #One-time usage.
TOKEN.card                        #CARD
TOKEN.bank_account                #BANK_ACCOUNT
TOKEN.client_ip                   #string IP address of the client that generated the token.
TOKEN.type                        #string Type of the token: account, bank_account, card, or pii.
TOKEN.used                        #boolean Whether this token has already been used (tokens can be used only once).

PAYMENT_METHOD_DETAILS            #Several ways to pay of a CUSTOMER.
PAYMENT_METHOD_DETAILS.type 'TYPE'#Payment provider among:
                                  #  - 'ach_credit_transfer'
                                  #  - 'ach_debit'
                                  #  - 'alipay'
                                  #  - 'bancontact'
                                  #  - 'card'
                                  #  - 'card_present'
                                  #  - 'eps'
                                  #  - 'giropay'
                                  #  - 'ideal'
                                  #  - 'multibanco'
                                  #  - 'p24'
                                  #  - 'sepa_debit'
                                  #  - 'sofort'
                                  #  - 'stripe_account'
                                  #  - 'wechat'
PAYMENT_METHOD_DETAILS.TYPE       #METHOD_DETAILS. Each TYPE has its own attributes, but some are shared.
METHOD_DETAILS.reference          #STR. Unique reference for this payment.
                                  #Only with multibanco|p24.
METHOD_DETAILS.verified_name      #STR. Owner's full name according to provider.
                                  #Only with bancontact|eps|giropay|ideal|p24|sofort.
METHOD_DETAILS.country            #Bank account's COUNTRY.
                                  #Only with ach_debit|card|card_present|sofort.
METHOD_DETAILS.account_holder_type#STR. Whether bank account holder is 'individual' or 'company'.
                                  #Only with ach_debit.
METHOD_DETAILS.preferred_language #STR. Customer's preferred language among 'en', 'de', 'fr', 'nl'.
                                  #Only with bancontact.
METHOD_DETAILS.entity             #STR. Entity number.
                                  #Only with multibanco.
METHOD_DETAILS.account_number     #STR. Account number to transfer funds to.
                                  #Only with ach_credit_transfer.
METHOD_DETAILS.routing_number     #STR. Routing transit number of the destination bank account.
                                  #Only with ach_credit_transfer|ach_debit.
METHOD_DETAILS.fingerprint        #STR. Checksum|fingerprint of the bank account or card number.
                                  #Only with ach_debit|card|card_present.
METHOD_DETAILS.last4              #STR. Last four digits of the bank account or card number.
                                  #Only with ach_debit|card|card_present.
METHOD_DETAILS.iban_last4         #STR. Last four characters of the IBAN.
                                  #Only with bancontact|ideal|sofort.
METHOD_DETAILS.bank               #STR. Bank name among 'abn_amro', 'asn_bank', 'bunq', 'handelsbanken', 'ing', 'knab',
                                  #'moneyou', 'rabobank', 'regiobank', 'sns_bank', 'triodos_bank', 'van_lanschot'.
                                  #Only with ideal.
METHOD_DETAILS.bank_name          #STR. E.g. 'WELLS FARGO'
                                  #Only with ach_credit_transfer|ach_debit|bancontact|giropay|sofort.
METHOD_DETAILS.bank_code          #STR. Code of the bank.
                                  #Only with bancontact|giropay|sofort.
METHOD_DETAILS.bic                #STR. Bank Identifier Code.
                                  #Only with bancontact|giropay|ideal|sofort.
METHOD_DETAILS.swift_code         #STR. Bank's SWIFT code.
                                  #Only with ach_credit_transfer.
METHOD_DETAILS.brand              #STR. Card brand among 'amex', 'diners', 'discover', 'jcb', 'mastercard', 'unionpay', 'visa', 'unknown'.
                                  #Only with card|card_present.
METHOD_DETAILS.exp_month          #INT. Card's expiration month (1-12)
                                  #Only with card|card_present.
METHOD_DETAILS.exp_year           #INT. Card's expiration year.
                                  #Only with card|card_present.
METHOD_DETAILS.funding            #STR. Card funding type among 'credit', 'debit', 'prepaid', 'unknown'.
                                  #Only with card|card_present.
METHOD_DETAILS.checks             #Check results and CVC with OBJ:
                                  #Only with card.
                                  #  - address_line1_check STR: 'pass', 'failed', 'unavailable', 'unchecked' (if address line1 was defined)
                                  #  - address_postal_code_check STR: same for postal_code
                                  #  - cvc_check STR: same for cvc
METHOD_DETAILS.read_method        #STR. How card was read among 'contact_emv', 'contactless_emv', 'magnetic_stripe_fallback', 'magnetic_stripe_track2', 'contactless_magstripe_mode'
                                  #Only with card_present.
METHOD_DETAILS.generated_card    ?#CARD.id
                                  #Only with card_present.
METHOD_DETAILS.three_d_secure    ?#Populated if this transaction used 3D Secure authentication. OBJ:
                                  #  - supported BOOL
                                  #Only with card.
METHOD_DETAILS.emv_auth_data      #STR. Authorization response cryptogram.
                                  #Only with card_present.
METHOD_DETAILS.wallet             ?#WALLET. Card's wallet.
                                  #Only with card.
WALLET.type                       #STR. 'amex_express_checkout', 'apple_pay', 'google_pay', 'masterpass', 'samsung_pay', 'visa_checkout'
WALLET.dynamic_last4              #STR. For tokenized numbers only. The last four digits of the device account number.
WALLET.TYPE.billing_address       #ADDRESS. For 'masterpass', 'visa_checkout' only.
WALLET.TYPE.shipping_address      #ADDRESS. For 'masterpass', 'visa_checkout' only.
WALLET.TYPE.email                 #STR. For 'masterpass', 'visa_checkout' only
WALLET.TYPE.name                  #STR. Owner's name. For 'masterpass', 'visa_checkout' only
METHOD_DETAILS.receipt            #OBJ. Fields to print on receipts. Only required for EMV transactions.
                                  #Only with card_present.

GET /payment_methods[/ID]
POST /payment_methods[/ID]        #
POST /payment_methods/ID/attach
POST /payment_methods/ID/detach   #Set|unset PAYMENT_METHOD.customer and CUSTOMER.sources
PAYMENT_METHOD                    #Single payment method of a CUSTOMER, by credit card.
                                  #Same properties as METHOD_DETAILS for type 'card[_present]', with extra properties:
PAYMENT_METHOD.TYPE.generated_from#GENERATED
GENERATED.charge                  #CHARGE.id
GENERATED.payment_method_details  #PAYMENT_METHOD_DETAILS
PAYMENT_METHOD.billing_details    #BILL_DETAILS
PAYMENT_METHOD.customer           #CUSTOMER.id

GET /sources/ID
POST /sources[/ID]
POST /customers/ID/sources        #Set SOURCE.customer and CUSTOMER.sources
DELETE /customers/ID/sources/ID   #Inverse.
SOURCE                            #Abstraction of CARD and BANK_ACCOUNT.
                                  #Same properties as PAYMENT_METHOD_DETAILS, with extra properties:
SOURCE.amount                     #PMONEY This is the amount for which the source will be chargeable once ready. Required for single_use sources.
SOURCE.client_secret              #string The client secret of the source. Used for client-side retrieval using a publishable key.
SOURCE.code_verification          #CODE_VERIF. Information related to the code verification flow. Present if the source is authenticated by a verification code (flow is code_verification).
CODE_VERIF.attempts_remaining     #integer The number of attempts remaining to authenticate the source object with a verification code.
CODE_VERIF.status                 #string The status of the code verification, either pending (awaiting verification, attempts_remaining should be greater than 0), succeeded (successful verification) or
                                  #failed (failed verification, cannot be verified anymore as attempts_remaining should be 0).
SOURCE.customer                   #CUSTOMER.id This will not be present when the source has not been attached to a customer.
SOURCE.flow                       #string The authentication flow of the source. flow is one of redirect, receiver, code_verification, none.
SOURCE.receiver                   #RECEIVER. Information related to the receiver flow. Present if the source is a receiver (flow is receiver).
RECEIVER.address                  #string The address of the receiver source. This is the value that should be communicated to the customer to send their funds to.
RECEIVER.amount_charged           #integer The total amount that was charged by you. The amount charged is expressed in the source’s currency.
RECEIVER.amount_received          #integer The total amount received by the receiver source.
                                  #amount_received = amount_returned + amount_charged is true at all time.
                                  #The amount received is expressed in the source’s currency.
RECEIVER.amount_returned          #integer The total amount that was returned to the customer. The amount returned is expressed in the source’s currency.
RECEIVER.refund_attributes_method #string Type of refund attribute method, one of email, manual, or none.
RECEIVER.refund_attributes_status #string Type of refund attribute status, one of missing, requested, or available.
SOURCE.redirect                   #REDIRECT. Information related to the redirect flow. Present if the source is authenticated by a redirect (flow is redirect).
REDIRECT.failure_reason           #string The failure reason for the redirect, either user_abort (the customer aborted or dropped out of the redirect flow), declined (the authentication failed or the
                                  #transaction was declined), or processing_error (the redirect failed due to a technical error).
                                  #Present only if the redirect status is failed.
REDIRECT.return_url               #string The URL you provide to redirect the customer to after they authenticated their payment.
REDIRECT.status                   #string The status of the redirect, either pending (ready to be used by your customer to authenticate the transaction), succeeded (succesful authentication, cannot be
                                  #reused) or not_required (redirect should not be used) or failed (failed authentication, cannot be reused).
REDIRECT.url                      #string The URL provided to you to redirect a customer to as part of a redirect authentication flow.
SOURCE.statement_descriptor       #string Extra information about a source. This will appear on your customer’s statement every time you charge the source.
SOURCE.status                     #string The status of the source, one of canceled, chargeable, consumed, failed, or pending. Only chargeable sources can be used to create a charge.
SOURCE.usage                      #string Either reusable or single_use.
                                  #Whether this source should be reusable or not.
                                  #Some source types may or may not be reusable by construction, while others may leave the option at creation.
                                  #If an incompatible value is passed, an error will be returned.

GET /customers/ID/sources/ID
GET /customers/ID/sources?object=
 card
POST /customers/ID/sources[/ID]
DELETE /customers/ID/sources/ID   #
CARD                              #Single payment method of a CUSTOMER, by credit card.
                                  #Same properties as METHOD_DETAILS for type 'card', with extra properties:
CARD.name                         #string Cardholder name.
CARD.account                      #CONNECT_ACCOUNT.id This attribute will not be in the card object if the card belongs to a customer or recipient instead.
CARD.customer                     #CUSTOMER.id This attribute will not be in the card object if the card belongs to an account or recipient instead.
CARD.recipient                    #CUSTOMER.id This attribute will not be in the card object if the card belongs to a customer or account instead.
CARD.address_city                 #string City/District/Suburb/Town/Village.
CARD.address_country              #string Billing address country, if provided when creating card.
CARD.address_line1                #string Address line 1 (Street address/PO Box/Company name).
CARD.address_line2                #string Address line 2 (Apartment/Suite/Unit/Building).
CARD.address_state                #string State/County/Province/Region.
CARD.address_zip                  #string ZIP or postal code.
CARD.address_line1_check          #string If address_line1 was provided, results of the check: pass, fail, unavailable, or unchecked.
CARD.address_zip_check            #string If address_zip was provided, results of the check: pass, fail, unavailable, or unchecked.
CARD.cvc_check                    #string If a CVC was provided, results of the check: pass, fail, unavailable, or unchecked.
CARD.available_payout_methods     #array containing strings A set of available payout methods for this card.
                                  #Will be either ["standard"] or ["standard", "instant"].
                                  #Only values from this set should be passed as the method when creating a transfer.
CARD.tokenization_method          #Same as WALLET.type
CARD.dynamic_last4                #Same as WALLET.dynamic_last4

GET /customers/ID/sources/ID
GET /customers/ID/sources?object=
 bank_account
POST /customers/ID/sources[/ID]
DELETE /customers/ID/sources/ID   #
POST
 /customers/ID/sources/ID/verify  #Set BANK_ACCOUNT.status to 'verified'
BANK_ACCOUNT                      #Single payment method of a CUSTOMER, by bank account.
BANK_ACCOUNT.account_holder_type
BANK_ACCOUNT.bank_name
BANK_ACCOUNT.country
BANK_ACCOUNT.fingerprint
BANK_ACCOUNT.last4
BANK_ACCOUNT.routing_number       #Like METHOD_DETAILS.*
BANK_ACCOUNT.account              #CONNECT_ACCOUNT.id
BANK_ACCOUNT.account_holder_name  #string The name of the person or business that owns the bank account.
BANK_ACCOUNT.customer             #CUSTOMER.id
BANK_ACCOUNT.status               #string For bank accounts, possible values are new, validated, verified, verification_failed, or errored.
                                  #A bank account that hasn’t had any activity or validation performed is new.
                                  #If Stripe can determine that the bank account exists, its status will be validated.
                                  #Note that there often isn’t enough information to know (e.g., for smaller credit unions), and the validation is not always run.
                                  #If customer bank account verification has succeeded, the bank account status will be verified.
                                  #If the verification failed for any reason, such as microdeposit failure, the status will be verification_failed.
                                  #If a transfer sent to this bank account fails, we’ll set the status to errored and will not continue to send transfers until the bank details are updated.
                                  #For external accounts, possible values are new and errored.
                                  #Validations aren’t run against external accounts because they’re only used for payouts.
                                  #This means the other statuses don’t apply.
                                  #If a transfer fails, the status is set to errored and transfers are stopped until account details are updated.

GET /sessions/ID
POST /sessions                    #
SESSION                           #Checkout session
SESSION.success_url               #string The URL the customer will be directed to after a successful payment.
SESSION.cancel_url                #string The URL the customer will be directed to if they decide to go back to your website.
SESSION.client_reference_id       #string A unique string to reference the Checkout Session.
                                  #This can be a customer ID, a cart ID, or similar.
                                  #It is included in the checkout.session.completed webhook and can be used to fulfill the purchase.
SESSION.customer                  #CUSTOMER.id
SESSION.customer_email            #string The email address used to create the customer object.
SESSION.display_items             #DISPLAY_ITEM_ARR The line items, plans, or SKUs that were purchased by the customer.
DISPLAY_ITEM.amount               #PMONEY
DISPLAY_ITEM.quantity             #NUM
DISPLAY_ITEM.type                 #STR, including 'custom'
DISPLAY_ITEM.custom               #OBJ metadata
SESSION.locale                    #string The IETF language tag of the locale Checkout is displayed in. If blank or auto, the browser’s locale is used.
SESSION.payment_intent            #PINTENT.id Only if SKUs or line items were provided.
SESSION.payment_method_types      #array containing strings The list of payment method types (e.g. card) that this Checkout Session is allowed to use.
SESSION.subscription              #SUBSCRIPTION.id Only if one or more plans were provided.

GET /invoices[/ID]
POST /invoices[/ID]
DELETE /invoices/ID               #
GET /invoices/ID/upcoming         #See INVOICE not created yet.
POST /invoices/ID/finalize        #From INVOICE.status 'draft' to 'open'.
                                  #Payload: invoice, auto_advance.
POST /invoices/ID/send            #Send INVOICE by email. Noop in test mode.
POST /invoices/ID/pay             #Set INVOICE.paid true
                                  #Payload: invoice, source, forgive, paid_out_of_band
PAYLOAD.forgive                   #BOOL. In cases where the source used to pay the invoice has insufficient funds, passing forgive=true controls whether a charge should be attempted for the full amount
                                  #available on the source, up to the amount to fully pay the invoice.
                                  #This effectively forgives the difference between the amount available on the source and the amount due.
                                  #Passing forgive=false will fail the charge if the source hasn’t been pre-funded with the right amount.
                                  #An example for this case is with ACH Credit Transfers and wires: if the amount wired is less than the amount due by a small amount, you might want to forgive the
                                  #difference.
PAYLOAD.paid_out_of_band          #BOOL. representing whether an invoice is paid outside of Stripe. This will result in no charge being made.
POST /invoices/ID/void            #Set INVOICE.status to 'void'
POST /invoices/ID/
 mark_uncollectible               #Set INVOICE.status from 'open' to 'uncollectible'
INVOICE                           #Invoice, i.e. details of what a CUSTOMER should pay.
INVOICE.amount_due                #integer Final amount due at this time for this invoice.
                                  #If the invoice’s total is smaller than the minimum charge amount, for example, or if there is account credit that can be applied to the invoice, the amount_due may be 0.
                                  #If there is a positive starting_balance for the invoice (the customer owes money), the amount_due will also take that into account.
                                  #The charge that gets generated for the invoice will be for the amount specified in amount_due.
INVOICE.amount_paid               #integer The amount, in cents, that was paid.
INVOICE.amount_remaining          #integer The amount remaining, in cents, that is due.
INVOICE.application_fee_amount    #integer The fee in cents that will be applied to the invoice and transferred to the application owner’s Stripe account when the invoice is paid.
INVOICE.attempt_count             #positive integer or zero Number of payment attempts made for this invoice, from the perspective of the payment retry schedule.
                                  #Any payment attempt counts as the first attempt, and subsequently only automatic retries increment the attempt count.
                                  #In other words, manual payment attempts after the first attempt do not affect the retry schedule.
INVOICE.attempted                 #boolean Whether an attempt has been made to pay the invoice.
                                  #An invoice is not attempted until 1 hour after the invoice.created webhook, for example, so you might not want to display that invoice as unpaid to your users.
INVOICE.auto_advance              #boolean Controls whether Stripe will perform automatic collection of the invoice.
                                  #When false, the invoice’s state will not automatically advance without an explicit action.
INVOICE.billing                   #string Either charge_automatically, or send_invoice.
                                  #When charging automatically, Stripe will attempt to pay this invoice using the default source attached to the customer.
                                  #When sending an invoice, Stripe will email this invoice to the customer with payment instructions.
INVOICE.billing_reason            #string Indicates the reason why the invoice was created.
                                  #subscription_cycle indicates an invoice created by a subscription advancing into a new period.
                                  #subscription_create indicates an invoice created due to creating a subscription.
                                  #subscription_update indicates an invoice created due to updating a subscription.
                                  #subscription is set for all old invoices to indicate either a change to a subscription or a period advancement.
                                  #manual is set for all invoices unrelated to a subscription (for example: created via the invoice editor).
                                  #The upcoming value is reserved for simulated invoices per the upcoming invoice endpoint.
                                  #subscription_threshold indicates an invoice created due to a billing threshold being reached.
INVOICE.charge                    #CHARGE.id
INVOICE.custom_fields             #CUSTOM_FIELD_ARR. Custom fields displayed on the invoice.
CUSTOM_FIELD.name                 #string The name of the custom field.
CUSTOM_FIELD.value                #string The value of the custom field.
INVOICE.customer                  #CUSTOMER.id
INVOICE.default_source            #SOURCE.id ID of the default payment source for the invoice.
                                  #It must belong to the customer associated with the invoice and be in a chargeable state.
                                  #If not set, defaults to the subscription’s default source, if any, or to the customer’s default source.
INVOICE.description               #string An arbitrary string attached to the object. Often useful for displaying to users. Referenced as ‘memo’ in the Dashboard.
INVOICE.discount                  #DISCOUNT
INVOICE.due_date                  #timestamp The date on which payment for this invoice is due. This value will be null for invoices where billing=charge_automatically.
INVOICE.ending_balance            #integer Ending customer balance after the invoice is finalized.
                                  #Invoices are finalized approximately an hour after successful webhook delivery or when payment collection is attempted for the invoice.
                                  #If the invoice has not been finalized yet, this will be null.
INVOICE.footer                    #string Footer displayed on the invoice.
INVOICE.hosted_invoice_url        #string The URL for the hosted invoice page, which allows customers to view and pay an invoice. If the invoice has not been finalized yet, this will be null.
INVOICE.invoice_pdf               #string The link to download the PDF for the invoice. If the invoice has not been finalized yet, this will be null.
INVOICE.lines                     #LINE_ITEM_LIST The individual line items that make up the invoice.
                                  #lines is sorted as follows: invoice items in reverse chronological order, followed by the subscription, if any.
INVOICE.next_payment_attempt      #timestamp The time at which payment will next be attempted. This value will be null for invoices where billing=send_invoice.
INVOICE.number                    #string A unique, identifying string that appears on emails sent to the customer for this invoice.
                                  #This starts with the customer’s unique invoice_prefix if it is specified.
INVOICE.paid                      #boolean Whether payment was successfully collected for this invoice.
                                  #An invoice can be paid (most commonly) with a charge or with credit from the customer’s account balance.
INVOICE.payment_intent            #PINTENT. The PaymentIntent is generated when the invoice is finalized, and can then be used to pay the invoice.
                                  #Note that voiding an invoice will cancel the PaymentIntent.
INVOICE.period_end                #timestamp End of the usage period during which invoice items were added to this invoice.
INVOICE.period_start              #timestamp Start of the usage period during which invoice items were added to this invoice.
INVOICE.receipt_number            #string This is the transaction number that appears on email receipts sent for this invoice.
INVOICE.starting_balance          #integer Starting customer balance before the invoice is finalized. If the invoice has not been finalized yet, this will be the current customer balance.
INVOICE.statement_descriptor      #string Extra information about an invoice for the customer’s credit card statement.
INVOICE.status                    #string The status of the invoice, one of draft, open, paid, uncollectible, or void.
INVOICE.status_transitions        #STATUS_TRANSITIONS
STATUS_TRANSITIONS.finalized_at   #timestamp The time that the invoice draft was finalized.
STATUS_TRANSITIONS.
 marked_uncollectible_at          #timestamp The time that the invoice was marked uncollectible.
STATUS_TRANSITIONS.paid_at        #timestamp The time that the invoice was paid.
STATUS_TRANSITIONS.voided_at      #timestamp The time that the invoice was voided.
INVOICE.subscription              #SUBSCRIPTION.id
INVOIC.subscription_proration_date#integer Only set for upcoming invoices that preview prorations. The time used to calculate prorations.
INVOICE.subtotal                  #integer Total of all subscriptions, invoice items, and prorations on the invoice before any discount is applied.
INVOICE.tax                       #integer The amount of tax included in the total, calculated from tax_percent and the subtotal. If no tax_percent is defined, this value will be null.
INVOICE.threshold_reason          #THRESHOLD_REASON. If billing_reason is set to subscription_threshold this returns more information on which threshold rules triggered the invoice.
THRESHOLD_REASON.amount_gte       #integer The total invoice amount threshold boundary if it triggered the threshold invoice.
THRESHOLD_REASON.item_reasons     #ITEM_REASON_ARR. Indicates which line items triggered a threshold invoice.
ITEM_REASON.line_item_ids         #array containing strings The IDs of the line items that triggered the threshold invoice.
ITEM_REASON.usage_gte             #integer The quantity threshold boundary that applied to the given line item.
INVOICE.total                     #integer Total after discount.
INVOICE.webhooks_delivered_at     #timestamp The time at which webhooks for this invoice were successfully delivered (if the invoice had no webhooks to deliver, this will match created).
                                  #Invoice payment is delayed until webhooks are delivered, or until all webhook delivery attempts have been exhausted.

GET /invoices/ID/lines            #
GET /invoices/ID/upcoming/lines   #See LINE_ITEMs of an INVOICE not created yet.
LINE_ITEM                         #Single item in an INVOICE
LINE_ITEM.amount                  #MONEY
LINE_ITEM.description             #string An arbitrary string attached to the object. Often useful for displaying to users.
LINE_ITEM.discountable            #boolean If true, discounts will apply to this line item. Always false for prorations.
LINE_ITEM.invoice_item            #INVOICE_ITEM.id
LINE_ITEM.period                  #LINE_ITEM_PERIOD. The timespan covered by this invoice item.
LINE_ITEM_PERIOD.end              #integer End of the line item’s billing period
LINE_ITEM_PERIOD.start            #integer Start of the line item’s billing period
LINE_ITEM.plan                    #PLAN The plan of the subscription, if the line item is a subscription or a proration.
LINE_ITEM.proration               #boolean Whether the invoice item was created automatically as a proration adjustment when the customer switched plans.
LINE_ITEM.quantity                #integer Quantity of units for the invoice item. If the invoice item is a proration, the quantity of the subscription that the proration was computed for.
LINE_ITEM.subscription            #SUBSCRIPTION.id The subscription that the invoice item pertains to, if any.
LINE_ITEM.subscription_item       #SUBSCRIPTION_ITEM.id The subscription item that generated this invoice item. Left empty if the line item is not an explicit result of a subscription.
LINE_ITEM.type                    #string A string identifying the type of the source of this line item, either an invoiceitem or a subscription.

GET /invoiceitems[/ID]
POST /invoiceitems[/ID]
DELETE /invoiceitems/ID           #
INVOICE_ITEM                      #Like LINE_ITEM, but done in bulk.
INVOICE_ITEM                      #Same properties as LINE_ITEM, with extra fields:
INVOICE_ITEM.invoice              #INVOICE.id
INVOICE_ITEM.customer             #CUSTOMER.id
INVOICE_ITEM.date                 #DATE_NUM
INVOICE_ITEM.unit_amount          #NUM. Unit Amount (in the currency specified) of the invoice item.

GET /subscriptions[/ID]
POST /subscriptions[/ID]
DELETE /subscriptions/ID          #
SUBSCRIPTION                      #Recurring CHARGE, either as a single PLAN, or several (using SUBSCRIPTION_ITEMs)
SUBSCRIPTION.customer
SUBSCRIPTION.default_source
SUBSCRIPTION.discount
SUBSCRIPTION.billing              #Like INVOICE.*
SUBSCRIPTION.items                #SUBSCRIPTION_ITEM_LIST
SUBSCRIPTION.latest_invoice       #INVOICE.id The most recent invoice this subscription has generated.
SUBSCRIPTION.plan                 #PLAN Only set if the subscription contains a single plan.
SUBSCRIPTION.quantity             #integer The quantity of the plan to which the customer is subscribed.
                                  #For example, if your plan is $10/user/month, and your customer has 5 users, you could pass 5 as the quantity to have the customer charged $50 (5 x $10) monthly.
                                  #Only set if the subscription contains a single plan.
SUBSCRIPTION.status               #string Possible values are incomplete, incomplete_expired, trialing, active, past_due, canceled, or unpaid.
                                  #For billing=charge_automatically a subscription moves into incomplete if the initial payment attempt fails.
                                  #A subscription in this state can only have metadata and default_source updated.
                                  #Once the first invoice is paid, the subscription moves into an active state.
                                  #If the first invoice is not paid within 23 hours, the subscription transitions to incomplete_expired.
                                  #This is a terminal state, the open invoice will be voided and no further invoices will be generated.
                                  #A subscription that is currently in a trial period is trialing and moves to active when the trial period is over.
                                  #If subscription billing=charge_automatically it becomes past_due when payment to renew it fails and canceled or unpaid (depending on your subscriptions settings) when
                                  #Stripe has exhausted all payment retry attempts.
                                  #If subscription billing=send_invoice it becomes past_due when its invoice is not paid by the due date, and canceled or unpaid if it is still not paid by an additional
                                  #deadline after that.
                                  #Note that when a subscription has a status of unpaid, no subsequent invoices will be attempted (invoices will be created, but then immediately automatically closed).
                                  #After receiving updated payment information from a customer, you may choose to reopen and pay their closed invoices.
SUBSCRIPTN.application_fee_percent#decimal A non-negative decimal between 0 and 100, with at most two decimal places.
                                  #This represents the percentage of the subscription invoice subtotal that will be transferred to the application owner’s Stripe account.
SUBSCRIPTION.billing_cycle_anchor #timestamp Determines the date of the first full invoice, and, for plans with month or year intervals, the day of the month for subsequent invoices.
SUBSCRIPTION.billing_thresholds   #BILLING_THRESHOLDS. Define thresholds at which an invoice will be sent, and the subscription advanced to a new billing period
BILLING_THRESHOLDS.amount_gte     #integer Monetary threshold that triggers the subscription to create an invoice
BILLING_THRESHOLDS.               #boolean Indicates if the billing_cycle_anchor should be reset when a threshold is reached.
 reset_billing_cycle_anchor       #If true, billing_cycle_anchor will be updated to the date/time the threshold was last reached; otherwise, the value will remain unchanged.
                                  #This value may not be true if the subscription contains items with plans that have aggregate_usage=last_ever.
SUBSCRIPTION.start                #timestamp Date of the last substantial change to this subscription. For example, a change to the items array, or a change of status, will reset this timestamp.
SUBSCRIPTION.ended_at             #timestamp If the subscription has ended, the date the subscription ended.
SUBSCRIPTION.current_period_start #timestamp Start of the current period that the subscription has been invoiced for.
SUBSCRIPTION.current_period_end   #timestamp End of the current period that the subscription has been invoiced for. At the end of this period, a new invoice will be created.
SUBSCRIPTION.trial_start          #timestamp If the subscription has a trial, the beginning of that trial.
SUBSCRIPTION.trial_end            #timestamp If the subscription has a trial, the end of that trial.
SUBSCRIPTION.days_until_due       #integer Number of days a customer has to pay invoices generated by this subscription. This value will be null for subscriptions where billing=charge_automatically.
SUBSCRIPTION.cancel_at_period_end #boolean If the subscription has been canceled with the at_period_end flag set to true, cancel_at_period_end on the subscription will be true.
                                  #You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.
SUBSCRIPTION.canceled_at          #timestamp If the subscription has been canceled, the date of that cancellation.
                                  #If the subscription was canceled with cancel_at_period_end, canceled_at will still reflect the date of the initial cancellation request, not the end of the subscription
                                  #period when the subscription is automatically moved to a canceled state.

GET /subscription_items[/ID]
POST /subscription_items[/ID]
DELETE /subscription_items/ID     #Abstraction of one or several PLANs, used by a complex SUBSCRIPTION.
SUBSCRIPTION_ITEM.subscription    #SUBSCRIPTION.id
SUBSCRIPTION_ITEM.
 plan|quantity|billing_thresholds #Like SUBSCRIPTION.*

GET /plans[/ID]
POST /plans[/ID]
DELETE /plans/ID                  #
PLAN                              #Pricing plan|scheme.
PLAN.active                       #boolean Whether the plan is currently available for new subscriptions.
PLAN.aggregate_usage              #string Specifies a usage aggregation strategy for plans of usage_type=metered.
                                  #Allowed values are sum for summing up all usage during a period, last_during_period for picking the last usage record reported within a period, last_ever for picking
                                  #the last usage record ever (across period bounds) or max which picks the usage record with the maximum reported usage during a period. Defaults to sum.
PLAN.amount                       #PMONEY to be charged on the interval specified.
PLAN.billing_scheme               #string Describes how to compute the price per period.
                                  #Either per_unit or tiered.
                                  #per_unit indicates that the fixed amount (specified in amount) will be charged per unit in quantity (for plans with usage_type=licensed), or per unit of total usage
                                  #(for plans with usage_type=metered).
                                  #tiered indicates that the unit pricing will be computed using a tiering strategy as defined using the tiers and tiers_mode attributes.
PLAN.interval                     #string One of day, week, month or year. The frequency with which a subscription should be billed.
PLAN.interval_count               #positive integer The number of intervals (specified in the interval property) between subscription billings.
                                  #For example, interval=month and interval_count=3 bills every 3 months.
PLAN.nickname                     #string A brief description of the plan, hidden from customers.
PLAN.product                      #PRODUCT.id The product whose pricing this plan determines.
PLAN.tiers                        #TIER_ARR. Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered. See also the documentation for billing_scheme.
TIER.flat_amount                  #integer Price for the entire tier.
TIER.unit_amount                  #integer Per unit price for units relevant to the tier.
TIER.up_to                        #integer Up to and including to this quantity will be contained in the tier.
PLAN.tiers_mode                   #string Defines if the tiering price should be graduated or volume based.
                                  #In volume-based tiering, the maximum quantity within a period determines the per unit price, in graduated tiering pricing can successively change as the quantity grows.
PLAN.transform_usage              #TRANSFORM_USAGE. Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with tiers.
TRANSFORM_USAGE.divide_by         #integer Divide usage by this number.
TRANSFORM_USAGE.round             #string After division, either round the result up or down.
PLAN.trial_period_days            #positive integer Default number of trial days when subscribing a customer to this plan using trial_from_plan=true.
PLAN.usage_type                   #string Configures how the quantity per period should be determined, can be either metered or licensed.
                                  #licensed will automatically bill the quantity set for a plan when adding it to a subscription, metered will aggregate the total usage based on usage records.
                                  #Defaults to licensed.

GET /subscription_items/ID/
 usage_records_summaries
POST /subscription_items/ID/
 usage_records                    #
USAGE_RECORD                      #CUSTOMER's consumption (metered billing).
USAGE_RECORD.quantity             #positive integer or zero The usage quantity for the specified date.
USAGE_RECORD.subscription_item    #SUBSCRIPTION_ITEM.id
USAGE_RECORD.timestamp            #timestamp The timestamp when this usage occurred.

DELETE /customers|subscriptions/
 ID/discount                      #
DISCOUNT                          #Discount|COUPON given to one CUSTOMER
DISCOUNT.coupon                   #COUPON
DISCOUNT.customer                 #CUSTOMER.id
DISCOUNT.start                    #timestamp Date that the coupon was applied.
DISCOUNT.end                      #timestamp If the coupon has a duration of repeating, the date that this discount will end. If the coupon has a duration of once or forever, this attribute will be null.
DISCOUNT.subscription             #SUBSCRIPTION.id

GET /coupons[/ID]
POST /coupons[/ID]
DELETE /coupons/ID                #
COUPON                            #Discount given to many CUSTOMERs
COUPON.amount_off                 #PMONEY that will be taken off the subtotal of any invoices for this customer.
COUPON.duration                   #string One of forever, once, and repeating. Describes how long a customer who applies this coupon will get the discount.
COUPON.duration_in_months         #positive integer If duration is repeating, the number of months the coupon applies. Null if coupon duration is forever or once.
COUPON.max_redemptions            #positive integer Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.
COUPON.name                       #string Name of the coupon displayed to customers on for instance invoices or receipts.
COUPON.percent_off                #decimal Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon.
                                  #For example, a coupon with percent_off of 50 will make a $100 invoice $50 instead.
COUPON.redeem_by                  #timestamp Date after which the coupon can no longer be redeemed.
COUPON.times_redeemed             #positive integer or zero Number of times this coupon has been applied to a customer.
COUPON.valid                      #boolean Taking account of the above properties, whether this coupon can still be applied to a customer.

GET /accounts[/ID]
POST /accounts[/ID]
DELETE /accounts/ID               #
POST /accounts/ID/reject          #Flag CONNECT_ACCOUNT as suspicious by setting payouts_enabled|charges_enabled to false.
                                  #Payload: account, reason
PAYLOAD.reason                    #STR. The reason for rejecting the account. Can be fraud, terms_of_service, or other.
CONNECT_ACCOUNT                   #Connect account.
CONNECT_ACCOUNT.business_profile  #BUSINESS_PROFILE. Optional information related to the business.
BUSINESS_PROFILE.mcc              #string The merchant category code for the account. MCCs are used to classify businesses based on the goods or services they provide.
BUSINESS_PROFILE.name             #string The customer-facing business name.
BUSINESS_PROFL.product_description#string Internal-only description of the product sold or service provided by the business. It’s used by Stripe for risk and underwriting purposes.
BUSINESS_PROFILE.support_address  #ADDRESS A publicly available mailing address for sending support issues to.
BUSINESS_PROFILE.support_email    #string A publicly available email address for sending support issues to.
BUSINESS_PROFILE.support_phone    #string A publicly available phone number to call with support issues.
BUSINESS_PROFILE.support_url      #string A publicly available website for handling support issues.
BUSINESS_PROFILE.url              #string The business’s publicly available website.
CONNECT_ACCOUNT.business_type     #string The business type. Can be individual or company.
CONNECT_ACCOUNT.capabilities      #CAPABILITIES. A hash containing the set of capabilities that was requested for this account and their associated states.
                                  #Keys may be card_payments, legacy_payments, or platform_payments. Values may be active, inactive, or pending.
CAPABILITIES.card_payments        #string The status of the card payments capability of the account, or whether the account can directly process credit and debit card charges.
CAPABILITIES.legacy_payments      #string The status of the legacy payments capability of the account.
CAPABILITIES.platform_payments    #string The status of the platform payments capability of the account, or whether your platform can process charges on behalf of the account.
CONNECT_ACCOUNT.charges_enabled   #boolean Whether the account can create live charges.
CONNECT_ACCOUNT.company           #CONNECT_COMPANY. Information about the company or business. This field is null unless business_type is set to company.
CONNECT_COMPANY.address           #ADDRESS
CONNECT_COMPANY.directors_provided#boolean Whether the company’s directors have been provided.
                                  #This Boolean will be true if you’ve manually indicated that all directors are provided via the directors_provided parameter.
CONNECT_COMPANY.name              #string The company’s legal name.
CONNECT_COMPANY.owners_provided   #boolean Whether the company’s owners have been provided.
                                  #This Boolean will be true if you’ve manually indicated that all owners are provided via the owners_provided parameter, or if Stripe determined that all owners were
                                  #provided.
                                  #Stripe determines ownership requirements using both the number of owners provided and their total percent ownership (calculated by adding the percent_ownership of each
                                  #owner together).
CONNECT_COMPANY.phone             #string The company’s phone number (used for verification).
CONNECT_COMPANY.tax_id_provided   #boolean Whether the company’s business ID number was provided.
CONNECT_COMPANY.tax_id_registrar  #string The jurisdiction in which the tax_id is registered (Germany-based companies only).
CONNECT_COMPANY.vat_id_provided   #boolean Whether the company’s business VAT number was provided.
CONNECT_ACCOUNT.country           #string The account’s country.
CONNECT_ACCOUNT.default_currency  #string Three-letter ISO currency code representing the default currency for the account. This must be a currency that Stripe supports in the account’s country.
CONNECT_ACCOUNT.details_submitted #boolean Whether account details have been submitted. Standard accounts cannot receive payouts before this is true.
CONNECT_ACCOUNT.email             #string The primary user’s email address.
CONNECT_ACCOUNT.external_accounts #CARD|BANK_ACCOUNT_LIST
CONNECT_ACCOUNT.individual        #PERSON Information about the person represented by the account. This field is null unless business_type is set to individual.
CONNECT_ACCOUNT.payouts_enabled   #boolean Whether Stripe can send payouts to this account.
CONNECT_ACCOUNT.requirements      #REQUIREMENTS. Information about the requirements for the account, including what information needs to be collected, and by when.
REQUIREMENTS.current_deadline     #timestamp The date the fields in currently_due must be collected by to keep payouts enabled for the account.
                                  #These fields might block payouts sooner if the next threshold is reached before these fields are collected.
REQUIREMENTS.currently_due        #array containing strings The fields that need to be collected to keep the account enabled.
                                  #If not collected by the current_deadline, these fields will appear in past_due as well, and the account will be disabled.
REQUIREMENTS.disabled_reason      #string If the account is disabled, this string describes why the account can’t create charges or receive payouts.
                                  #Can be requirements.past_due, requirements.pending_verification, rejected.fraud, rejected.terms_of_service, rejected.listed, rejected.other, listed, under_review, or
                                  #other.
REQUIREMENTS.eventually_due       #array containing strings The fields that need to be collected assuming all volume thresholds are reached.
                                  #As they become required, these fields will appear in currently_due as well, and the current_deadline will be set.
REQUIREMENTS.past_due             #array containing strings The fields that weren’t collected by the current_deadline. These fields need to be collected to re-enable the account.
CONNECT_ACCOUNT.settings          #CONNECT_SETTINGS. Account options for customizing how the account functions within Stripe.
CONNECT_SETTINGS.branding         #BRANDING. Settings used to apply the account’s branding to email receipts, invoices, Checkout, and other products.
BRANDING.icon                     #FILE.id An icon for the account. Must be square and at least 128px x 128px.
BRANDING.logo                     #FILE.id A logo for the account that will be used in Checkout instead of the icon and without the account’s name next to it if provided. Must be at least 128px x 128px.
BRANDING.primary_color            #string A CSS hex color value representing the primary branding color for this account
CONNECT_SETTINGS.card_payments    #CARD_SETTINGS. Settings specific to card charging on the account.
CARD_SETTINGS.decline_on          #DECLINE_ON. Automatically declines certain charge types regardless of whether the card issuer accepted or declined the charge.
DECLINE_ON.avs_failure            #boolean Whether Stripe automatically declines charges with an incorrect ZIP or postal code.
                                  #This setting only applies when a ZIP or postal code is provided and they fail bank verification.
DECLINE_ON.cvc_failure            #boolean Whether Stripe automatically declines charges with an incorrect CVC. This setting only applies when a CVC is provided and it fails bank verification.
CARD_SETTINGS.                    #string The default text that appears on credit card statements when a charge is made.
 statement_descriptor_prefix      #This field prefixes any dynamic statement_descriptor specified on the charge.
                                  #statement_descriptor_prefix is useful for maximizing descriptor space for the dynamic portion.
CONNECT_SETTINGS.dashboard        #DASHBOARD_SETTINGS. Settings used to configure the account within the Stripe dashboard.
DASHBOARD_SETTINGS.display_name   #string The display name for this account. This is used on the Stripe Dashboard to differentiate between accounts.
DASHBOARD_SETTINGS.timezone       #string The timezone used in the Stripe Dashboard for this account. A list of possible time zone values is maintained at the IANA Time Zone Database.
CONNECT_SETTINGS.payments         #PAYMENTS_SETTINGS. Settings that apply across payment methods for charging on the account.
PAYMENTS_SETTINGS.
 statement_descriptor             #string The default text that appears on credit card statements when a charge is made. This field prefixes any dynamic statement_descriptor specified on the charge.
CONNECT_SETTINGS.payouts          #PAYOUTS_SETTINGS. Settings specific to the account’s payouts.
PAYOUTS_SETTINGS.                 #boolean A Boolean indicating if Stripe should try to reclaim negative balances from an attached bank account.
 debit_negative_balances          #See our Understanding Connect Account Balances documentation for details. Default value is true for Express accounts and false for Custom accounts.
PAYOUTS_SETTINGS.schedule         #SCHEDULE. Details on when funds from charges are available, and when they are paid out to an external account.
                                  #See our Setting Bank and Debit Card Payouts documentation for details.
SCHEDULE.delay_days               #positive integer or zero The number of days charges for the account will be held before being paid out.
SCHEDULE.interval                 #string How frequently funds will be paid out. One of manual (payouts only created via API call), daily, weekly, or monthly.
SCHEDULE.monthly_anchor           #positive integer or zero The day of the month funds will be paid out.
                                  #Only shown if interval is monthly.
                                  #Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.
SCHEDULE.weekly_anchor            #string The day of the week funds will be paid out, of the style ‘monday’, ‘tuesday’, etc. Only shown if interval is weekly.
PAYOUTS_SETGS.statement_descriptor#string The text that appears on the bank account statement for payouts. If not set, this defaults to the platform’s bank descriptor as set in the Dashboard.
CONNECT_ACCOUNT.tos_acceptance    #TOS_ACCEPTANCE. Details on the acceptance of the Stripe Services Agreement
TOS_ACCEPTANCE.date               #timestamp The Unix timestamp marking when the Stripe Services Agreement was accepted by the account representative
TOS_ACCEPTANCE.ip                 #string The IP address from which the Stripe Services Agreement was accepted by the account representative
TOS_ACCEPTANCE.user_agent         #string The user agent of the browser from which the Stripe Services Agreement was accepted by the account representative
CONNECT_ACCOUNT.type              #string The Stripe account type. Can be standard, express, or custom.

POST /accounts/ID/login_links     #
LOGIN_LINK                        #Single-use login URL for Connect Express.
LOGIN_LINK.url                    #string The URL for the login link.

GET /transfers[/ID]
POST /transfers[/ID]              #
TRANSFER                          #Transfer of money from a CONNECT_ACCOUNT to another one.
TRANSFER.amount                   #MONEY
TRANSFER.amount_reversed          #integer Amount in cents reversed (can be less than the amount attribute on the transfer if a partial reversal was issued).
TRANSFER.balance_transaction      #BALANCE_TRANSACTION.id Balance transaction that describes the impact of this transfer on your account balance.
TRANSFER.description              #string An arbitrary string attached to the object. Often useful for displaying to users.
TRANSFER.destination              #CONNECT_ACCOUNT.id
TRANSFER.destination_payment      #CHARGE.id If the destination is a Stripe account, this will be the ID of the payment that the destination account received for the transfer.
TRANSFER.source_transaction       #CHARGE.id ID of the charge or payment that was used to fund the transfer. If null, the transfer was funded from the available balance.
TRANSFER.reversals                #TRAVERSAL_LIST
TRANSFER.reversed                 #boolean Whether the transfer has been fully reversed. If the transfer is only partially reversed, this attribute will still be false.
TRANSFER.source_type              #string The source balance this transfer came from. One of card or bank_account.
TRANSFER.transfer_group           #string A string that identifies this transaction as part of a group. See the Connect documentation for details.

GET /transfers/ID/reversals[/ID]
POST /transfers/ID/reversals[/ID] #Reverting a TRANSFER.
TRAVERSAL.amount                  #MONEY
TRAVERSAL.balance_transaction     #BALANCE_TRANSACTION.id Balance transaction that describes the impact on your account balance.
TRAVERSAL.
 destination_payment_refund       #CHARGE.id Linked payment refund for the transfer reversal.
TRAVERSAL.source_refund           #REFUND.id
TRAVERSAL.transfer                #TRANSFER.id

GET /application_fees[/ID]        #
FEE                               #Cut taken from CUSTOMER of a CUSTOMER-to-CUSTOMER CHARGE.
FEE.account                       #STRIPE_ACCOUNT.id
FEE.application                   #CONNECT_ACCOUNT.id
FEE.amount                        #PMONEY
FEE.amount_refunded               #PMONEY Amount in cents refunded (can be less than the amount attribute on the fee if a partial refund was issued)
FEE.balance_transaction           #BALANCE_TRANSACTION.id Balance transaction that describes the impact of this collected application fee on your account balance (not including refunds).
FEE.charge                        #CHARGE.id
FEE.originating_transaction       #CHARGE|TRANSFER.id ID of the corresponding charge on the platform account, if this fee was the result of a charge using the destination parameter.
FEE.refunded                      #boolean Whether the fee has been fully refunded. If the fee is only partially refunded, this attribute will still be false.
FEE.refunds                       #FEE_REFUND_LIST

GET /application_feeds/ID/
 refunds[/ID]
POST /application_feeds/ID/
 refunds[/ID]                     #Reverting a FEE.
FEE_REFUND.amount                 #MONEY
FEE_REFUND.balance_transaction    #BALANCE_TRANSACTION.id
FEE_REFUND.fee                    #FEE.id

GET /topups[/ID]
POST /topups[/ID]                 #
POST /topups/ID/cancel            #From TOPUP.status 'pending' to 'canceled'.
TOPUP                             #Money added to CONNECT_ACCOUNT
TOPUP.amount                      #MONEY Amount transferred.
TOPUP.balance_transaction         #BALANCE_TRANSACTION.id. May not be specified depending on status of top-up.
TOPUP.description                 #string An arbitrary string attached to the object. Often useful for displaying to users.
TOPUP.expected_availability_date  #integer Date the funds are expected to arrive in your Stripe account for payouts.
                                  #This factors in delays like weekends or bank holidays.
                                  #May not be specified depending on status of top-up.
TOPUP.failure_code                #string Error code explaining reason for top-up failure if available (see the errors section for a list of codes).
TOPUP.failure_message             #string Message to user further explaining reason for top-up failure if available.
TOPUP.source                      #SOURCE For most Stripe users, the source of every top-up is a bank account. This hash is then the source object describing that bank account.
TOPUP.statement_descriptor        #string Extra information about a top-up. This will appear on your source’s bank statement. It must contain at least one letter.
TOPUP.status                      #string The status of the top-up is either canceled, failed, pending, reversed, or succeeded.
TOPUP.transfer_group              #string A string that identifies this top-up as part of a group.

GET /accounts/ID/persons[/ID]
POST /accounts/ID/persons[/ID]
DELETE /accounts/ID/persons/ID    #
PERSON                            #Person with a CONNECT_ACCOUNT
PERSON.account                    #CONNECT_ACCOUNT.id
PERSON.address                    #ADDRESS
PERSON.dob                        #DOB. The person’s date of birth.
DOB.day                           #positive integer The day of birth, between 1 and 31.
DOB.month                         #positive integer The month of birth, between 1 and 12.
DOB.year                          #positive integer The four-digit year of birth.
PERSON.email                      #string The person’s email address.
PERSON.first_name                 #string The person’s first name.
PERSON.gender                     #string The person’s gender (International regulations require either “male” or “female”).
PERSON.id_number_provided         #boolean Whether the person’s id_number was provided.
PERSON.last_name                  #string The person’s last name.
PERSON.maiden_name                #string The person’s maiden name.
PERSON.phone                      #string The person’s phone number.
PERSON.relationship               #RELATIONSHIP. Describes the person’s relationship to the account.
RELATIONSHIP.account_opener       #boolean Whether the person opened the account. This person provides information about themselves, and general information about the account.
RELATIONSHIP.director             #boolean Whether the person is a director of the account’s legal entity.
                                  #Currently only required for accounts in the EU.
                                  #Directors are typically members of the governing board of the company, or responsible for ensuring the company meets its regulatory obligations.
RELATIONSHIP.owner                #boolean Whether the person is an owner of the account’s legal entity.
RELATIONSHIP.percent_ownership    #decimal The percent owned by the person of the account’s legal entity.
RELATIONSHIP.title                #string The person’s title (e.g., CEO, Support Engineer).
PERSON.requirements               #Like CONNECT_ACCOUNT.requirements.
PERSON.ssn_last_4_provided        #boolean Whether the last 4 digits of this person’s SSN have been provided.
PERSON.verification               #PERSON_VERIF. The persons’s verification status.
PERSON_VERIF.details              #string A user-displayable string describing the verification state for the person. For example, this may say “Provided identity information could not be verified”.
PERSON_VERIF.details_code         #string One of scan_name_mismatch, failed_keyed_identity, or failed_other. A machine-readable code specifying the verification state for the person.
PERSON_VERIF.document             #VERIF_DOC. An identifying document for the person, either a passport or local ID card.
VERIF_DOC.front|back              #FILE.id The front|back of an ID returned by a file upload with a purpose value of identity_document.
VERIF_DOC.details                 #string A user-displayable string describing the verification state of this document.
                                  #For example, if a document is uploaded and the picture is too fuzzy, this may say “Identity document is too unclear to read”.
VERIF_DOC.details_code            #string One of document_corrupt, document_failed_copy, document_not_readable, document_failed_greyscale, document_not_uploaded, document_id_type_not_supported,
                                  #document_id_country_not_supported, document_failed_other, document_fraudulent, document_invalid, document_manipulated, document_missing_back, document_missing_front,
                                  #document_photo_mismatch, document_too_large, or document_failed_test_mode.
                                  #A machine-readable code specifying the verification state for this document.
PERSON_VERIF.status               #string The state of verification for the person. Possible values are unverified, pending, or verified.

GET /country_specs[/ID]           #
COUNTRY_SPEC                      #Country-specific currency and payment information.
COUNTRY_SPEC.id                   #COUNTRY
COUNTRY_SPEC.default_currency     #string The default currency for this country. This applies to both payment methods and bank accounts.
COUNTRY_SPEC.
 supported_bank_account_currencies#OBJ. Currencies that can be accepted in the specific country (for transfers).
COUNTRY_SPEC.
 supported_payment_currencies     #array containing strings Currencies that can be accepted in the specified country (for payments).
COUNTRY_SPEC.                     #array containing strings Payment methods available in the specified country.
 supported_payment_methods        #You may need to enable some payment methods (e.g., ACH) on your account before they appear in this list.
                                  #The stripe payment method refers to charging through your platform.
COUNTRY_SPEC.
 supported_transfer_countries     #array containing strings Countries that can accept transfers from the specified country.
COUNTRY_SPEC.verification_fields  #VERIF_FIELDS. Lists the types of verification data needed to keep an account open.
VERIF_FIELDS.company|individual   #V_FIELDS.
V_FIELDS.additional               #array containing strings Additional fields which are only required for some users.
V_FIELDS.minimum                  #array containing strings Fields which every account must eventually provide.

GET /reviews[/ID]
POST /reviews/ID/approve          #Set REVIEW.open to false.
REVIEW                            #CHARGE pending because flagged as suspicious by Stripe Radar.
REVIEW.billing_zip                #string The ZIP or postal code of the card used, if applicable.
REVIEW.charge                     #CHARGE.id
REVIEW.closed_reason              #string The reason the review was closed, or null if it has not yet been closed. One of approved, refunded, refunded_as_fraud, or disputed.
REVIEW.ip_address                 #string The IP address where the payment originated.
REVIEW.ip_address_location        #IP_LOCATION. Information related to the location of the payment.
                                  #Note that this information is an approximation and attempts to locate the nearest population center - it should not be used to determine a specific address.
IP_LOCATION.city                  #string The city where the payment originated.
IP_LOCATION.country               #string Two-letter ISO code representing the country where the payment originated.
IP_LOCATION.latitude              #decimal The geographic latitude where the payment originated.
IP_LOCATION.longitude             #decimal The geographic longitude where the payment originated.
IP_LOCATION.region                #string The state/county/province/region where the payment originated.
REVIEW.open                       #boolean If true, the review needs action.
REVIEW.opened_reason              #string The reason the review was opened. One of rule or manual.
REVIEW.payment_intent             #PINTENT.id
REVIEW.reason                     #string The reason the review is currently open or closed. One of rule, manual, approved, refunded, refunded_as_fraud, or disputed.
REVIEW.session                    #REVIEW_SESSION. Information related to the browsing session of the user who initiated the payment.
REVIEW_SESSION.browser            #string The browser used in this browser session (e.g., Chrome).
REVIEW_SESSION.device             #string Information about the device used for the browser session (e.g., Samsung SM-G930T).
REVIEW_SESSION.platform           #string The platform for the browser session (e.g., Macintosh).
REVIEW_SESSION.version            #string The version for the browser session (e.g., 61.0.3163.100).

GET /radar/value_lists[/ID]
POST /radar/value_lists[/ID]
DELETE /radar/value_lists/ID      #
REVIEW_VALUES                     #Custom Radar rules
REVIEW_VALUES.alias               #string The name of the value list for use in rules.
REVIEW_VALUES.created_by          #string The name or email address of the user who created this value list.
REVIEW_VALUES.item_type           #string The type of items in the value list. One of card_fingerprint, card_bin, email, ip_address, country, string, or case_sensitive_string.
REVIEW_VALUES.list_items          #REVIEW_VALUE_LIST
REVIEW_VALUES.name                #string The name of the value list.

GET /radar/value_list_items[/ID]
POST /radar/value_list_items[/ID] #REVIEW_VALUES single item
REVIEW_VALUE.created_by           #string The name or email address of the user who added this item to the value list.
REVIEW_VALUE.value                #string The value of the item.
REVIEW_VALUE.value_list           #string The identifier of the value list this item belongs to.

GET /issuing/cards[/ID]
POST /issuing/cards[/ID]          #
ISSUING_CARD                      #User-created credit cards.
ISSUING_CARD.currency
ISSUING_CARD.brand
ISSUING_CARD.exp_month
ISSUING_CARD.exp_year
ISSUING_CARD.last4
ISSUING_CARD.name                 #Same as CARD.*
ISSUING_CARD.cardholder           #CARD_HOLDER
ISSUING_CARD.shipping             #PRECISE_SHIPPING
ISSUING_CRD.authorization_controls#AUTH_CONTROLS. Spending rules that give you some control over how your cards can be used. Refer to our authorizations documentation for more details.
AUTH_CONTROLS.allowed_categories  #array Array of strings containing categories of authorizations permitted on this card.
AUTH_CONTROLS.blocked_categories  #array Array of strings containing categories of authorizations to always decline on this card.
AUTH_CONTROLS.max_amount          #positive integer or zero Maximum amount allowed per authorization on this card, in the currency of the card.
                                  #Authorization amounts in a different currency will be converted to the card’s currency when evaluating this control.
AUTH_CONTROLS.max_approvals       #positive integer or zero Maximum count of approved authorizations on this card. Counts all authorizations retroactively.
ISSUING_CARD.status               #string One of active, inactive, canceled, lost, stolen, or pending.
ISSUING_CARD.type                 #string One of virtual or physical.

GET /issuing/cards/ID/details     #
ISSUING_CARD_DETAILS              #Like ISSUING_CARD (same properties) but with some extra fields:
ISSUING_CARD_DETAILS.card         #ISSUING_CARD
ISSUING_CARD_DETAILS.
 cvc|exp_month|exp_year           #Like CARD.*
ISSUING_CARD_DETAILS.number       #'NUM'

GET /issuing/cardholders[/ID]
POST /issuing/cardholders[/ID]    #
CARD_HOLDER                       #User of a ISSUING_CARD
CARD_HOLDER.authorization_controls#AUTH_CONTROLS, but only allowed|blocked_categories
CARD_HOLDER.billing               #BILL_DETAILS
CARD_HOLDER.email                 #string The cardholder’s email address.
CARD_HOLDER.is_default            #boolean Whether or not this cardholder is the default cardholder.
CARD_HOLDER.name                  #string The cardholder’s name. This will be printed on cards issued to them.
CARD_HOLDER.phone_number          #string The cardholder’s phone number.
CARD_HOLDER.status                #string One of active, inactive, blocked, or pending.
CARD_HOLDER.type                  #string One of individual or business_entity.

GET /issuing/transactions[/ID]
POST /issuing/transactions/ID     #
ISSUING_TRANSACTION               #BALANCE_TRANSACTION made with an ISSUING_CARD
ISSUING_TRANSACTION.amount        #MONEY
ISSUING_TRANSACTION.authorization #AUTHORIZATION.id
ISSUING_TRANSACTION.
 balance_transaction              #BALANCE_TRANSACTION.id
ISSUING_TRANSACTION.card          #ISSUING_CARD.id
ISSUING_TRANSACTION.cardholder    #CARDHOLDER.id
ISSUING_TRANSACTION.dispute       #ISSUING_DISPUTE.id
ISSUING_TRANSACTION.type          #string One of capture, refund, cash_withdrawal, refund_reversal, dispute, or dispute_loss.
ISSUING_TRANSACTION.merchant_data #MERCHANT_DATA

GET /authorizations[/ID]
POST /authorizations/ID           #
POST /authorizations/ID/approve   #Set approved to true.
                                  #PAYLOAD: held_amount
POST /authorizations/ID/decline   #Set approved to false.
AUTHORIZATION                     #Pending ISSUING_TRANSACTION waiting for approval.
AUTHORIZATION.approved            #boolean Whether the authorization has been approved.
AUTHORIZATION.authorization_method#string How the card details were provided. One of keyed_in, swipe, chip, contactless, or online.
AUTHORIZATION.authorized_amount   #integer The amount that has been authorized. This will be 0 when the object is created, and increase after it has been approved.
AUTHORIZATION.authorized_currency #currency The currency that was presented to the cardholder for the authorization. Three-letter ISO currency code, in lowercase. Must be a supported currency.
AUTHORIZATION.
 pending_authorized_amount        #integer The amount the user is requesting to be authorized. This field will only be non-zero during an issuing.authorization.request webhook.
AUTHORIZATION.pending_held_amount #integer The additional amount Stripe will hold if the authorization is approved. This field will only be non-zero during an issuing.authorization.request webhook.
AUTHORIZATION.held_amount         #integer The amount the authorization is expected to be in held_currency.
                                  #When Stripe holds funds from you, this is the amount reserved for the authorization.
                                  #This will be 0 when the object is created, and increase after it has been approved.
                                  #For multi-currency transactions, held_amount can be used to determine the expected exchange rate.
AUTHORIZATION.held_currency       #currency The currency of the held amount. This will always be the card currency.
AUTHORIZATION.
 is_held_amount_controllable      #boolean
AUTHORIZATION.balance_transactions#BALANCE_TRANSACTION_ARR
AUTHORIZATION.card                #ISSUING_CARD
AUTHORIZATION.cardholder          #CARD_HOLDER
AUTHORIZATION.merchant_data       #MERCHANT_DATA. More information about the user involved in the transaction.
MERCHANT_DATA.category            #string A categorization of the seller’s type of business. See our merchant categories guide for a list of possible values.
MERCHANT_DATA.name                #string Name of the seller
MERCHANT_DATA.network_id          #string Identifier assigned to the seller by the card brand
MERCHANT_DATA.*                   #ADDRESS fields, except line1|line2
AUTHORIZATION.request_history     #REQUEST_HISTORY
REQUEST_HISTORY.
 approved|authorized|held*        #Same as AUTHORIZATION.*
REQUEST_HISTORY.reason            #string One of authorization_controls, card_active, card_inactive, insufficient_funds, account_compliance_disabled, account_inactive, suspected_fraud, webhook_approved,
                                  #webhook_declined, or webhook_timeout.
AUTHORIZATION.status              #string One of pending, reversed, or closed.
AUTHORIZATION.transactions        #ISSUING_TRANSACTION_ARR
AUTHORIZATION.verification_data   #A_VERIF_DATA
A_VERIF_DATA.address_line1_check  #string One of match, mismatch, or not_provided.
A_VERIF_DATA.address_zip_check    #string One of match, mismatch, or not_provided.
A_VERIF_DATA.cvc_check            #string One of match, mismatch, or not_provided.
AUTHORIZATION.wallet_provider     #string What, if any, digital wallet was used for this authorization. One of apple_pay, google_pay, or samsung_pay.

GET /issuing/disputes[/ID]
POST /issuing/disputes[/ID]       #
ISSUING_DISPUTE                   #Like DISPUTE but for an ISSUING_TRANSACTION
ISSUING_DISPUTE.amount            #MONEY Disputed amount.
                                  #Usually the amount of the disputed_transaction, but can differ (usually because of currency fluctuation or because only part of the order is disputed).
ISSUING_DISPT.disputed_transaction#ISSUING_TRANSACTION.id
ISSUING_DISPUTE.evidence          #ISSUING_EVIDENCE. Evidence related to the dispute. This hash will contain exactly one non-null value, containing an evidence object that matches its reason
ISSUING_EVIDENCE.fraudulent|other #I_EVIDENCE.
I_EVIDENCE.dispute_explanation    #string Brief freeform text explaining why you are disputing this transaction.
I_EVIDENCE.uncategorized_file     #FILE.id Additional file evidence supporting your dispute.
ISSUING_DISPUTE.reason            #string Reason for this dispute. One of other or fraudulent.
ISSUING_DISPUTE.status            #string Current status of dispute. One of unsubmitted, under_review, won, or lost.

GET /terminal/readers[/ID]
POST /terminal/readers[/ID]
DELETE /terminal/readers/ID       #
READER                            #Physical credit card reader.
READER.device_sw_version          #string The current software version of the reader.
READER.device_type                #string Type of reader, e.g., verifone_P400 or bbpos_chipper2x.
READER.ip_address                 #string The local IP address of the reader.
READER.label                      #string Custom label given to the reader for easier identification.
READER.location                   #LOCATION.id
READER.serial_number              #string Serial number of the reader.
READER.status                     #string The networking status of the reader.

GET /terminal/location[/ID]
POST /terminal/location[/ID]
DELETE /terminal/location/ID      #Group of READERs
LOCATION.address                  #ADDRESS.
LOCATION.display_name             #string The display name of the location.

POST /terminal/connection_tokens  #Token to connect to READER
CONNECTION_TOKEN.secret           #string Your application should pass this token to the Stripe Terminal SDK.

GET /skus[/ID]
POST /skus[/ID]
DELETE /skus/ID                   #
SKU                               #PRODUCT with quantity, price and other attributes.
SKU.active
SKU.package_dimensions
SKU.updated                       #Like PRODUCT.*
SKU.product                       #PRODUCT.id The product must be currently active.
SKU.attributes                    #OBJ. A dictionary of attributes and values for the attributes defined by the product.
                                  #If, for example, a product’s attributes are ["size", "gender"], a valid SKU has the following dictionary of attributes: {"size": "Medium", "gender": "Unisex"}.
SKU.image                         #string The URL of an image for this SKU, meant to be displayable to the customer.
SKU.inventory                     #INVENTORY. Description of the SKU’s inventory.
INVENTORY.quantity                #positive integer or zero The count of inventory available. Will be present if and only if type is finite.
INVENTORY.type                    #string Inventory type. Possible values are finite, bucket (not quantified), and infinite.
INVENTORY.value                   #string An indicator of the inventory available. Possible values are in_stock, limited, and out_of_stock. Will be present if and only if type is bucket.
SKU.price                         #PMONEY. The cost of the item.

GET /orders[/ID]
POST /orders[/ID]                 #
POST /orders/ID/pay               #Add a SOURCE, i.e. initiate payment.
                                  #Payload: customer, application_fee, email, source
PAYLOAD.source                    #A payment source to be charged, such as a credit card.
                                  #If you also pass a customer ID, the source must be the ID of a source belonging to the customer (e.g., a saved card).
                                  #Otherwise, if you do not pass a customer ID, the source you provide must be a token, like the ones returned by Stripe.js.
ORDER                             #SKU sold to a specific CUSTOMER
ORDER.amount                      #PMONEY Total amount for the order.
ORDER.amount_returned             #integer
ORDER.application                 #CONNECT_ACCOUNT.id
ORDER.application_fee             #integer
ORDER.charge                      #CHARGE.id Present if the order status is paid, fulfilled, or refunded.
ORDER.customer                    #CUSTOMER.id
ORDER.email                       #string The email address of the customer placing the order.
ORDER.external_coupon_code        #string
ORDER.items                       #ORDER_ITEM_ARR An order can have up to 25 items.
ORDER.returns                     #RETURN_LIST
ORDER.selected_shipping_method    #string The shipping method that is currently selected for this order, if any.
                                  #If present, it is equal to one of the ids of shipping methods in the shipping_methods array.
                                  #At order creation time, if there are multiple shipping methods, Stripe will automatically selected the first method.
ORDER.shipping                    #SHIPPING Present if the order is for goods to be shipped.
ORDER.shipping_methods            #SHIPPING_METHOD_ARR A list of supported shipping methods for this order. The desired shipping method can be specified either by updating the order, or when paying it.
SHIPPING_METHOD.id                #string Unique identifier for the object.
SHIPPING_METHOD.amount            #PMONEY Total amount for the line item.
SHIPPING_METHOD.delivery_estimate #DELIVERY_ESTIMATE. The estimated delivery date for the given shipping method. Can be either a specific date or a range.
DELIVERY_ESTIMATE.date            #string If type is "exact", date will be the expected delivery date in the format YYYY-MM-DD.
DELIVERY_ESTIMATE.earliest        #string If type is "range", earliest will be be the earliest delivery date in the format YYYY-MM-DD.
DELIVERY_ESTIMATE.latest          #string If type is "range", latest will be the latest delivery date in the format YYYY-MM-DD.
DELIVERY_ESTIMATE.type            #string The type of estimate. Must be either "range" or "exact".
SHIPPING_METHOD.description       #string An arbitrary string attached to the object. Often useful for displaying to users.
ORDER.status                      #string Current order status. One of created, paid, canceled, fulfilled, or returned. More details in the Orders Guide.
ORDER.status_transitions          #STATUS_TRANSITIONS. The timestamps at which the order status was updated.
STATUS_TRANSITIONS.canceled       #timestamp
STATUS_TRANSITIONS.fulfiled       #timestamp
STATUS_TRANSITIONS.paid           #timestamp
STATUS_TRANSITIONS.returned       #timestamp
ORDER.updated                     #timestamp
ORDER.upstream_id                 #string The user’s order ID if it is different from the Stripe order ID.

ORDER_ITEM                        #An ORDER's single item
ORDER_ITEM.amount                 #PMONEY Total amount for the line item.
ORDER_ITEM.description            #string Description of the line item, meant to be displayable to the user (e.g., "Express shipping").
ORDER_ITEM.parent                 #DISCOUNT|SKU.id
ORDER_ITEM.quantity               #positive integer A positive integer representing the number of instances of parent that are included in this order item. Applicable/present only if type is sku.
ORDER_ITEM.type                   #string The type of line item. One of sku, tax, shipping, or discount.

POST /orders/ID/returns
GET /order_returns[/ID]           #
RETURN                            #Reverting an ORDER
RETURN.amount                     #PMONEY Total amount for the returned line item.
RETURN.items                      #ORDER_ITEM_ARR
RETURN.order                      #ORDER.id
RETURN.refund                     #REFUND.id

GET /sigma/scheduled_query_runs
 [/ID]                            #
SCHEDULED_QUERY                   #Stripe Sigma SQL query.
SCHEDULED_QUERY.data_load_time    #timestamp When the query was run, Sigma contained a snapshot of your Stripe data at this time.
SCHEDULED_QUERY.error             #SCHEDULED_QUERY_ERROR. If the query run was not successful, this field contains information about the failure.
SCHEDULED_QUERY_ERROR.message     #string Information about the run failure.
SCHEDULED_QUERY.file              #FILE Results of the query.
SCHEDULED_QUERY.
 result_available_until           #timestamp Time at which the result expires and is no longer available for download.
SCHEDULED_QUERY.sql               #string SQL for the query.
SCHEDULED_QUERY.status            #string The query’s execution status, which will be completed for successful runs, and canceled, failed, or timed_out otherwise.
SCHEDULED_QUERY.title             #string Title of the query.

GET /webhook_endpoints[/ID]
POST /webhook_endpoints[/ID]
DELETE /webhook_endpoints/ID      #
WEBHOOK                           #Webhook notifying of API events
WEBHOOK.api_version               #string The API version events are rendered as for this webhook endpoint.
WEBHOOK.application               #CONNECT_ACCOUNT.id
WEBHOOK.enabled_events            #array containing strings The list of events to enable for this endpoint. You may specify ['*'] to enable all events.
WEBHOOK.secret                    #string The endpoint’s secret, used to generate webhook signatures. Only returned at creation.
WEBHOOK.status                    #string The status of the webhook. It can be enabled or disabled.
WEBHOOK.url                       #string The URL of the webhook endpoint.
