
              
   NODE-WHICH  
              



VERSION ==>                       #1.3.1

WHICH('COMMAND',                  #Finds COMMAND's PATH, cross-browser
 FUNC(ERROR, 'PATH')[, OPTS])     #OPTS:
WHICH.sync('COMMAND'[, OPTS])     #  - path STR: override ENVVAR PATH
 ->'PATH'                         #  - colon STR (def: ':' on Unix, ';' on Windows): ENVVAR PATH delimiter
                                  #  - pathExt STR: override ENVVAR PATHEXT
                                  #  - all BOOL (def: false): return PATH_ARR instead of first match PATH
                                  #  - nothrow BOOL (def: false): with sync(), return null instead of throwing

which COMMAND                     #Same as CLI
-a                                #OPTS.all
-s                                #Silent


Use OS-specific PATH
Prepend $PWD to PATH on Windows


ISEXE('PATH'[,OPTS])->PROMISE_BOOL#Check if file is executable:
ISEXE.sync('PATH'[, OPTS])->BOOL  #  - on Unix:
                                  #     - file type is regular
                                  #     - FS.stat().mode has 'x' permission for:
                                  #        - user if STAT.uid === process.getuid() (or OPTS.uid)
                                  #        - group if STAT.gid === process.getgid() (or OPTS.gid)
                                  #        - others otherwise
                                  #  - on Windows:
                                  #     - file type is regular or symlink
                                  #     - file extension is among ENVVAR PATHEXT (or OPTS.pathExt)
                                  #OPTS:
                                  #  - ignoreErrors BOOL: if true (def: false), return false instead of rejecting|throwing ERROR
                                  #Problems:
                                  #  - should use EUID|EGID instead of UID|GID
                                  #  - should use getgroups()
                                  #  - not maintained
