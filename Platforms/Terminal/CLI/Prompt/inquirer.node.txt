
            
   INQUIRER  
            



ALTERNATIVES ==>                      #  - inquirer (preferred if need features)
                                      #  - node-promptly (preferred if need minimal): minimal
                                      #  - terkelg prompts: not well maintained
                                      #  - enquirer: not maintained
                                      #  - flatiron prompt: not maintained

VERSION ==>                           #3.2.0
                                      #Is a Node module

INQUIRER.prompt(QUESTION_ARR)         #Prompt for a value on the CLI
 ->PROMISE_ANSWERS                    #ANSWERS is OBJ: NAME VAL

QUESTION.type                         #STR. Can be:
                                      #  - "confirm": Yes/No, returns BOOL
                                      #  - "input": returns STR
                                      #  - "password": same but hides input
                                      #  - "list": returns VAL, chooses among choices with an arrow
                                      #  - "rawlist": same but chooses by typing number
                                      #  - "expand": same but chooses by typing letter, which shows the option.
                                      #  - "checkbox": same but multiple choice. Returns STR_ARR
QUESTION.name                         #'NAME'
QUESTION.message                      #STR
QUESTION.default                      #VAL[(STR_ARR)]
QUESTION.validate(STR)->BOOL|'NAME'   #For "checkbox", "input" or "password"
                                      #Whether input is accepted.
                                      #'NAME' is like false, but with a specific error message.
QUESTION.filter(STR)->'NAME'          #For all but "confirm" type.
                                      #Returns 'NAME', which will be the one used in ANSWERS
QUESTION.when(ANSWERS)->BOOL          #Whether question should be prompted.
QUESTION.choices                      #For "checkbox", "expand" or "[raw]list"
                                      #Chooses among choices that can be:
                                      #  - CHOICE_ARR[(ANSWERS)]:
                                      #  - STR_ARR[(ANSWERS)]: same as CHOICE: name+value STR
                                      #  - can be new INQUIRER.Separator([STR]) for a visual separator (def STR "--------")
CHOICE.name                           #STR
CHOICE.value                          #VAL
CHOICE.key                            #STR. For "expand"
                                      #Cannot be "h"
CHOICE.checked                        #BOOL. For "checkbox"
CHOICE.disabled                       #BOOL[(ANSWERS)]. For "checkbox"
                                      #Can also be STR[(ANSWERS)]: like true, but with a specific message

new INQUIRER.ui.BottomBar()           #Returns a INQUIRERLOG
INQUIRERLOG.log                       #IOSTREAM with process.stdin|out
INQUIRERLOG.updateBottomBar(STR)      #Like INQUIRERLOG.log.write(STR), but always put at last line.
                                      #Should only be done after all questions are asked.
