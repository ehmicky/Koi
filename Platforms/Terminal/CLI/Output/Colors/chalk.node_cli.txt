
         
   CHALK  
         



VERSION ==>                           #Node module (4.1.0)

GOAL ==>                              #Terminal colors:
                                      #  - apply them
                                      #  - detects terminal support
                                      #  - string colorization helpers (test, strip, get width)
                                      #  - low-level escape sequences

new Chalk.Instance([OPTS])            #
Chalk[.stderr]                        #Singleton with default options
                                      #OPTS.level is SUPPORTS-COLOR.stdout|stderr

CHALK.STYLE...(STR...)                #Apply STYLE on STR... among:
                                      #  - reset|bold|dim|underline|inverse|hidden
                                      #    (not on all terminals) italic|strikethrough|overline
                                      #  - visible: i.e. hidden if !CHALK.enabled
                                      #  - [bg]black|red|green|yellow|blue|magenta|cyan|white|gray[Bright]
                                      #  - rgb|hsl|hsv|hwb|cmyk|gray|xyz|lab|lch|hcg|apple|hex|keyword|ansi256(...)
                                      #    (see color-convert library)
                                      #Result must be put in a console.log()
                                      #STR can be the result of another CHALK.STYLE()
                                      #Range of colors depends on terminal support (see below)

chalk`... {[~]STYLE... ${STR}} ...`   #Same as `... ${CHALK.STYLE...(STR)} ...`
chalk.STYLE...(STR...)`...`           #~ negates the style
                                      #{...} can be nested
                                      #Spaces inside STYLE are not allowed, e.g. rgb(0,0,0), not rgb(0, 0, 0)

chalk STYLE... STR                   ##Same but as CLI
                                     ##Package chalk-cli (4.1.0)
--template STR                       ##Using syntax '{[~]STYLE... STR}'
--demo                               ##Show all possible styles


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:       TERMINAL SUPPORT        :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


Chalk[.stderr].supportsColor          #Returns SUPPORTS-COLOR.stdout|stderr (see below)
OPTS.level                            #Same as Chalk[.stderr].supportsColor.level, except can be changed

SUPPORTS-COLOR                       ##Package supports-color (8.1.1)
SUPPORTS-COLOR.supportsColor         ##Either:
 (STREAM[, OPTS])->VAL               ##  - false: terminal does not support color
SUPPORTS-COLOR.stdout|stderr         ##  - OBJ:
                                     ##     - level 1|2|3: supports no, 16, 256 or 16 millions colors
                                     ##     - hasBasic|has256|has16m BOOL: same with booleans
                                     ##Use similar logic as core WRITESTREAM.hasColors():
                                     ##  - but based on older code, i.e. not as good
                                     ##  - if STREAM.isTTY false or in browsers: 1 bit
                                     ##If OPTS.sniffFlags true (def), influenced by:
                                     ##  - --no-color[s], --color=false|never, ENVVAR FORCE_COLOR=0: 1 bit
                                     ##  - --color[s], --color=true|always, ENVVAR FORCE_COLOR=1: 4 bits
                                     ##  - --color=256, ENVVAR FORCE_COLOR=2: 8 bits
                                     ##  - --color=16m|full|truecolor, ENVVAR FORCE_COLOR=3: 24 bits
supports-color                       ##Same as CLI, using exit code
                                     ##Package supports-color-cli (2.0.0)
--256|16m
