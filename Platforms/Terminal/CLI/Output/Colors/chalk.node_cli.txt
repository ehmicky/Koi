
         
   CHALK  
         



VERSION ==>                       #4.1.0

GOAL ==>                          #Add ANSI sequences for colors|style
                                  #Detects terminal color support

new Chalk.Instance([OPTS])        #CHALK
Chalk[.stderr]                    #Singleton CHALK with default options

CHALK.STYLE...(STR...)->STR       #Wrap STR with ANSI sequences.
                                  #STYLE can be any MODIFIER|[bg]COLOR from ANSI-STYLES (see its doc):
                                  #  - reset|bold|underline|inverse
                                  #  - (not supported on Windows terminal) dim|italic|hidden|strikethrough|overline
                                  #  - visible: hidden if 1-bit colors
                                  #  - [bg]black|red|green|yellow|blue|magenta|cyan|white|gray[Bright]
                                  #  - [bg]rgb|hex|keyword|hsl|hsv|hwb|ansi|ansi256(...)
                                  #If several STR, join with spaces.

chalk`... {[~]STYL... ${STR}} ...`#Same as `... ${CHALK.STYLE...(STR)} ...`
chalk.STYLE...(STR...)`...`       #~ negates the style
                                  #{...} can be nested
                                  #Spaces inside STYLE are not allowed, e.g. rgb(0,0,0), not rgb(0, 0, 0)

Chalk[.stderr].supportsColor      #SUPPORTS-COLOR.stdout|stderr (see its doc)
CHALK|OPTS.level                  #0|1|2|3 (1|4|8|24-bits color)
                                  #Same as Chalk[.stderr].supportsColor.level, except can be changed

chalk STYLE... STR               ##Same but as CLI
                                 ##Package chalk-cli (4.1.0)
--template STR                   ##Using syntax '{[~]STYLE... STR}'
--demo                           ##Show all possible styles
