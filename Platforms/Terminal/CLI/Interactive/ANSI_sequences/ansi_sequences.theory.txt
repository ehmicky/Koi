
                  
   ANSI_SEQUENCES  
                  




ECMA-48 ==>                       #Standard
ANSI.SYS ==>                      #Old (not recent) Windows-specific ANSI sequences.

SUPPORT ==>                       #Symbols means not supported on:
                                 ~#  - Gnome VTE (this doc does not check for support on other terminals then)
                                 C#  - Windows console
                                  #TODO

CARET NOTATION ==>                #Representation for control characters
                                  #Meant for terminal input with CTRL-CHAR
                                  #  - SHIFT usually optional
                                  #^ followed by character
ESCAPE SEQUENCE ==>               #Representation for control characters
                                  #Meant for source code
                                  #\ followed by character

TODO ==> FINISH /home/Desktop/ao.js to see signals shortcuts

00  NUL  ^@                       #Null
                                  #Noop.
                                  #Ends a C-string.
                                  #Used by some Unix commands to replace newlines.
01  SOH  ^A                       #Start of Header
                                  #Starts input (metadata + data)
02  STX  ^B                       #Start of Text
                                  #Starts input (data)
03  ETX  ^C                       #End of Text
                                  #Ends input (data)
                                  #Sends SIGINT to process, terminating it.
04  EOT  ^D                       #End of Transmission
                                  #Ends input (metadata + data)
                                  #Dans un shell, l'interrompt, ainsi que sa console interactive (si présente). Signifie parfois EOF
05  ENQ  ^E                       #Enquiry
06  ACK  ^F                       #Acknowledgment
07  BEL  ^G   \a                  #Bell
                                  #Produit un son. Désactivé par beaucoup de terminaux
08  BS   ^H   \b                  #Backspace
                                  #Fait que le curseur recule d'une colonne.
                                  #Ainsi, le prochain caractère entré écrasera le dernier (à l'impression pas dans le code : le caractère écrasé existe toujours dans le code, mais ne s'affiche pas)
                                  #Accessible aussi via la touche Backspace.
                                  #Dans une console, écrase en même temps que le curseur recule
09  HT   ^I   \t                  #Horizontal Tab
0A  LF   ^J   \n                  #Line feed.
                                  #Passe à la ligne suivante.  Newline Unix. Sur les imprimantes, reste sur la même colonne
0B  VT   ^K   \v                  #Vertical Tab
                                  #Agit comme \f
0C  FF   ^L   \f                  #Form feed
                                  #Passe à la ligne suivante, mais reste sur la même colonne.
                                  #N'est ni une newline, ni un whitespace, et est considéré comme un caractère normal.
                                  #Dans un terminal, l'efface.
                                  #Sur les imprimantes, va à la page suivante
0D  CR   ^M   \r                  #Carriage return.
                                  #Compris dans une newline Windows CR + LF Sous Unix, retourne à la première colonne sans (la plupart du temps)
                                  #supprimer aucun caractère, mais en ajouter écrasera alors ceux existant (àl'impression, pas dans le code)
0E  SO   ^N                       #Shift Out
0F  SI   ^O                       #Shift In
10  DLE  ^P                       #Data Link Escape
11  DC1  ^Q                       #Device Control 1 (appelé aussi XON)
12  DC2  ^R                       #Device Control 2
13  DC3  ^S                       #Device Control 3 (appelé XOFF)
14  DC4  ^T                       #Device Control 4
                                  #Sends SIGINFO, i.e. ask for information about process
15  NAK  ^U                       #Negative Acknowledgement
16  SYN  ^V                       #Synchronous Idle
17  ETB  ^W                       #End of Transmission Block.
                                  #Ferme parfois un document
18  CAN  ^X                       #Cancel.
                                  #Ferme parfois un document
19  EM   ^Y                       #End of Medium
1A  SUB  ^Z                       #Substitute.
                                  #Sends SIGTSTP to process, i.e. stop
1B  ESC  ^[   \e                  #Escape.
                                  #Quitte parfois l'interface courante.
                                  #Accessible aussi via la touche ESC Commence une séquence d'échappement sur les imprimantes
1C  FS   ^\                       #File Separator
                                  #Sends SIGQUIT to process, i.e. terminate with core dump.
1D  GS   ^]                       #Group Separator
1E  RS   ^^                       #Record Separator
1F  US   ^_                       #Unit Separator
7F  DEL  ^?                       #Delete.
                                  #Supprime le caractère courant Accessible aussi via la touche DEL

CSI SEQUENCE STRUCTURE ==>        #Start byte:
                                  #  - single sequence
                                  #  - either:
                                  #     - \x1b[
                                  #        - i.e. \e[
                                  #     - \x9b (CSI, Control Sequence Introducer)
                                  #  - signals that the next characters are a CSI sequence
                                  #Parameter bytes:
                                  #  - 0-n characters
                                  #  - among \x30-\x3f:
                                  #     - 0-9 : ;
                                  #     - < > = ? are for "private sequences", i.e. mean the characters after can be anything (meant for terminal manufacturers)
                                  #       - ? is often used
                                  #  - often use ;-separated digits
                                  #     - with omitted digits being 0
                                  #  - parameters|arguments
                                  #Intermediate bytes:
                                  #  - 0-n characters
                                  #  - among \x20-\x2f
                                  #     - i.e. space ! " # $ % & ' ( ) * + , - . /
                                  #  - often not used
                                  #Final byte:
                                  #  - single character
                                  #  - among \x40-\x7e:
                                  #     - A–Za-o @ [ ] \ ^ _ `
                                  #     - p-z { } | ~ are for "private sequences", i.e. mean the characters before can be anything (meant for terminal manufacturers)
                                  #  - A-Za-z are often used
                                  #  - main action

~                                 #Represents any number
                                  #Defaults to 0
                                  #  - except CUU|CUD|CUF|CUB|CNL|CPL|CHA|CP|SU|SD, which defaults to 1
SCREEN EDGES ==>                  #Moves stops at edges of screen
                                  #Index is 1-based
CURSOR POSITION ==>               #Unless specified, the cursor position is not changed.

\e[~A
\e[~B
\e[~C                             #Move cursor up|down|right|left by ~ characters
\e[~D                             #Named "Cursor Up|Down|Forward|Back" (CUU|CUD|CUF|CUB)

\e[~E                             #Move cursor up|down by ~ characters then goes to start of line
\e[~F                             #Named "Cursor Next|Previous Line" (CNL|CPL)

\e[~G                             #Move cursor to column ~
                                  #Named "Cursor Horizontal Absolute" (CHA)
\e[~;~H                           #Move cursor to row ~, column ~
                                  #Named "Cursor Position" (CP)

\e[~s                             #Save|restore cursor position
\e[~u                             #Named "Save|Restore Current Cursor Position" (SCOSC|SCORC or SCP|RCP)
                                  #Private sequence

\e[~J                             #Clear lines:
                                  #  - 0: after current line (excluded)
                                  #  - 1: before current line (included)
                                  #  - 2: all lines
                                  #  - 3: all lines, and removes scrollback buffer (previous lines that can be scrolled to)
                                  #     - non-standard
                                  #     - on cmd.exe, also moves cursor position to first line|column
                                  #Named "Erase in Display" (ED)
\e[~K                             #Clear characters in current line:
                                  #  - 0: after cursor (included)
                                  #  - 1: before cursor (included)
                                  #  - 2: whole line
                                  #Named "Erase in Line" (EL)

\e[~S                             #Move all lines ~ up|down
\e[~T                             #Lines going out of screen are gone. Does not actually scroll the terminal GUI.
                                  #Named "Scroll Up|Down" (SU|SD)

\e[?25h                           #Show|hide cursor
\e[?25l                           #Named DECTCEM
                                  #Private sequence

\e[?1049h                         #Enable alternative screen buffer.
                                  #I.e. saves the current screen, then clears it.
                                  #Private sequence
\e[?1049l                         #Restore saved screen.

\e[?2004h                        C#Enable|disable bracketed paste mode.
\e[?2004l                        C#Surround any pasted characters by \e[200~ and \e[201~
                                 C#Some programs (like Vim) will detect these characters to know the text was entered as paste, not input

\e[~;...m                         #Colors|style
                                  #Named "Select Graphic Rendition NUM" (SGR NUM)
                                  #Remains in effect until reset by another SGR

\e[0m                             #Reset SGR
\e[1m                             #Bold
\e[2m                            C#Dim
\e[3m                            C#Italic
\e[4m                             #Underline
\e[5m                            C#Slow blink
\e[6m                            ~#Fast blink. Often shown as slow blink instead.
\e[7m                             #Invert foreground|background color. Named "Reverse|invert video" (as opposed to "true video")
\e[8m                            C#Hidden, i.e. foreground has same color as background
\e[9m                            C#Strikethrough

\e[20m                           ~#Blackletter
\e[21m                           C#Double underline
\e[22m                            #Reset dim|bold
\e[23m                           C#Reset italic|blackletter
\e[24m                            #Reset underline
\e[25m                           C#Reset blink
\e[26m                           ~#Proportional spacing
\e[27m                            #Reset inverted
\e[28m                           C#Reset hide
\e[29m                           C#Reset strikethrough
\e[50m                           ~#Disable proportional spacing

\e[51m                           ~#Framed
\e[52m                           ~#Encircled
\e[53m                           ~#Overlined
\e[54m                           ~#Reset framed|encircled
\e[55m                           ~#Reset overlined

\e[60m                           ~#Ideogram underline
\e[61m                           ~#Ideogram double underline
\e[62m                           ~#Ideogram overline
\e[63m                           ~#Ideogram double overline
\e[64m                           ~#Ideogram stress marking
\e[65m                           ~#Reset ideogram underline|overline

\e[73m                           ~#Superscript
\e[74m                           ~#Subscript

\e[30-37m
\e[40-47m                         #Foreground|background 3-bits color: black|red|green|yellow|blue|magenta|cyan|white
\e[90-97m
\e[100-107m                       #Same for bright foreground|background 4-bits colors
\e[38;5;~m                        #Foreground|background 8-bits colors, using 0-255:
\e[48;5;~m                        #  - 0-15: same as 4-bits colors
                                  #  - 16-231: 216 colors
                                  #  - 232-255: 24 grayscales
\e[38;2;~;~;~m
\e[48;2;~;~;~m                    #Foreground|background 24-bits colors, using reg|green|blue 0-255 ("true color")
\e[39m
\e[49m                            #Reset foreground|background color

\e[58;5;~m
\e[58;2;~;~;~m
\e[59m                           C#Like \e[3*m but for underline color

\e[10-19m                       C~#Choose between 10 user-chosen fonts.
