
                     
   SYSTEMINFORMATION  
                     



VERSION ==>                       #3.54.0


system()->PROMISE_OBJ             #Main device. Uses:
                                  #  - Linux|*BSD: dmidecode --type system (must be root)
                                  #  - Mac: ioreg -c IOPlatformExpertDevice -d 2
                                  #  - Windows:
                                  #     - wmic csproduct get /value
                                  #     - wmic /namespace:\\\\root\\wmi path MS_SystemInformation get /value
system().manufacturer             #STR (e.g. 'PC Specialist LTD')
system().model                    #STR (e.g. 'P7xxTM1')
                                  #(Linux only)
                                  #  - 'Docker Container' if `/.dockerenv|dockerinit` exists
                                  #  - 'Virtual machine' if dmesg | grep -i virtual | grep -iE "vmware|qemu|kvm|xen"
                                  #  - 'BCM*' (Raspberry PI) using `cat /proc/cpuinfo`
system().version                  #STR (e.g. "1.0")
system().serial                   #STR (e.g. "0")
system().uuid                     #STR (e.g. '525BFA80-E4EC-0000-0000-000000000000')
system().sku                      #STR

baseboard()->PROMISE_OBJ          #Motherboard. Uses:
                                  #  - Linux|*BSD:
                                  #     - on non-ARM: dmidecode --type 2 (must be root)
                                  #     - on ARM: cat /proc/cpuinfo | grep Serial
                                  #  - Mac: ioreg -c IOPlatformExpertDevice -d 2
                                  #  - Windows: wmic baseboard get /value
baseboard().manufacturer          #STR (e.g. 'CLEVO')
baseboard().model                 #STR (e.g. 'P7xxTM1')
baseboard().version               #STR
baseboard().serial                #STR
baseboard().assetTag              #STR (e.g. 'Tag 12345')

bios()->PROMISE_OBJ               #BIOS. Uses:
                                  #  - Linux|*BSD:
                                  #     - on non-ARM: dmidecode --type 0 (must be root)
                                  #     - on ARM: cat /proc/cpuinfo | grep Serial
                                  #  - Windows: wmic bios get /value
bios().vendor                     #STR (e.g. 'American Megatrends Inc.')
bios().version                    #STR (e.g. '5.12')
bios().releaseDate                #STR (e.g. '11/23/2017')
bios().revision                   #STR (e.g. '5.12')

time()->PROMISE_OBJ               #Time-related info.
time().current                    #DATE (now)
time().uptime                     #OS.uptime()
time().timezone                   #STR (e.g. 'GMT+0100')
time().timezoneName               #STR (e.g. 'Central European Standard Time')

osInfo()->PROMISE_OBJ             #OS/distribution. Uses:
                                  #  - Linux: cat /etc/*-release
                                  #  - Mac|*BSD: sysctl kern.ostype kern.osrelease kern.osrevision kern.hostuuid
                                  #  - Mac: sw_vers
                                  #  - Solaris: uname -o
                                  #  - Windows: wmic os get /value
osInfo().platform                 #OS.platform()
osInfo().kernel                   #OS.release()
osInfo().arch                     #OS.arch()
osInfo().hostname                 #OS.hostname()
osInfo().distro                   #STR (e.g. 'Ubuntu')
osInfo().logofile                 #STR: normalized distro (e.g. 'ubuntu')
osInfo().release                  #STR (e.g. '18.10')
osInfo().codename                 #STR (e.g. 'cosmic')
osInfo().codepage                 #STR (e.g. 'UTF-8'). Uses:
                                  #  - Linux|Mac|*BSD: $LANG
                                  #  - Windows: chcp
osInfo().serial                   #STR
osInfo().build                    #STR (e.g. '18A391')

versions()->PROMISE_OBJ           #Library versions.
versions().systemOpenSslLib       #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
versions().             #STR
