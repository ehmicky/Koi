
         
   LOGIC  
         



Formal language:
  - set of symbols + formal grammar

Syntax:
  - symbols and rules to combine them, regardless of their semantics

Symbols:
  - also named signs
  - denotes the concept, not the representation|token
  - semantic depends:
     - logical symbol:
        - on formal language
        - same for any interpretation
     - non-logical symbol:
        - on interpretation
        - also named descriptive
  - can have:
     - constant:
        - only one semantic
        - logical symbols are always constants
        - example:
           - logical: true|false, logical operators, quantifiers, punctuation
           - non-logical: 3, e
     - variable:
        - many semantics
        - example: x

Alphabet:
  - list of available unique symbols

String of symbols:
  - 0-n symbols, position-significant, possibly duplicate

Formation rule:
  - rule asserting which string of symbols are synctactically valid

Formal grammar:
  - set of formation rules

Formula:
  - also named well-formed formula (WFF) or expression
  - string of symbols that are valid
  - opposite is nonsense

Semantics:
  - meaning assigned to syntax

Interpretation:
  - assigning semantics to syntax

Deductive system:
  - rules connecting formulas

Inference rule:
  - deductive system rule

Formal system:
  - formal language + deductive system

Statement:
  - formula which interpretation is true

Axiom:
  - statement used as basis to infer other statements

Logical operators:
  - also named sentential|logical operators|connective
  - operator with logical data types, e.g. boolean
  - can be:
     - ∧ &&: and
     - ∨ ||: or
     - ~ !: not

Quantifier:
  - function that asserts trueness of another function for specific variables
  - universal quantifier:
     - noted ∀ VAR[,...]. FUNC
     - means FUNC(VAR,...) = true for all combinations of VAR,...
  - existential quantifier:
     - noted ∃ VAR[,...]. FUNC
     - means FUNC(VAR,...) = true for at least one combination of VAR,...
