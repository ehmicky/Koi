
           
   ALGEBRA  
           



Expression:
  - expression: correct syntax, even if false, e.g. 1 = 0
  - statement: true expression

Absolute value:
  - f(x)->y: if x >= 0, x = y, otherwise x = -y
  - notation: |x|

Summation:
  - [capital-]sigma notation:
     - notation:
        - ∑ [CONDITION,...] [MAX] EXPR
           - CONDITION is below, MAX above, EXPR on the right
           - CONDITION,... is sum of sum
              - like ∑ CONDITION ... ∑ CONDITION2 ...
        - sum([CONDITION,...][; MAX]) EXPR (in my notes)
     - sums EXPR + ... for every EXPR where CONDITION is true, over a set of numbers (def: Z)
     - variables in CONDITION can be re-used in EXPR
     - when CONDITION is VAR = VAL:
        - VAR is index of summation (often noted i)
        - VAL is lower bound of summation (often noted m)
        - MAX can be used:
           - upper bound of summation (often noted n)
           - def: n
           - adds to CONDITION: & VAR <= MAX
     - def CONDITION: i = 1
  - formulas:
     - sum(i = m; n) i = (n^2+n+m-m^2)/2

Product:
  - [capital-]pi notation:
     - ∏ ...
     - like ∑ ... but using * instead of +
     - notation: prod(...) (in my notes)

Division:
  - formulas:
     - xa/ya      = x/y
        - xa/y    = x/(y/a)
        - x/y     = 1/(y/x)
     - x/y * a    = (x * a)/y
        - x/y * a = x * a/y
        - x/y     = x * 1/y
        - x/(y/a) = x * (a/y)
     - x/y * a/b  = xa/yb
     - x/y + a/y  = (x + a)/y
     - x/y + a/b  = (xb + ay)/yb

Exponeniation:
  - notation:
     - xⁿ or x^n or x**n
     - x is base
     - n is exponent|power
  - means if n is:
     - > 0: 1 * x * x * ... n times
     - = 0: 1
     - < 0: 1 / x / x / ... n times
  - signedness of result:
     - if n even -> positive
     - if n odd and x positive|negative -> positive|negative
  - formulas:
     - x^(m + n)      = x^m * x^n
     - x^(m - n)      = x^m / x^n (if x != 0)
     - x^mn           = (x^m)^n
        - (x^n)^m     = (x^m)^n
        - (x^n)^(1/n) = x
     - x^-n           = 1/x^n
     - (xy)^n         = x^n * y^n
        - (x/y)^n     = x^n / y^n
  - specific values:
     - x^0 = 0
     - x^1 = x
     - 1^n = 1
     - 0^+n = 0
     - 0^0 = 1 (sometimes considered indeterminate)
     - 0^-n = Inf
     - Inf^+n = Inf
     - Inf^0 = indeterminate
     - Inf^-n = 0
     - x^Inf = Inf|1|0 if |x| >|=|< 1
     - x^-Inf = 0|1|Inf if |x| >|=|< 1

nth root:
  - notation: ₙ√x
     - called square|cube root for n 2|3
     - √ sign is radical|radix
     - n is index
     - x is radicand
     - def n: 2
  - ₙ√x = x^(1/n)
     - inverse function of x^n
     - ->y so that y^n = x
  - signedness of result:
     - if n even and x positive -> either negative or positive
     - if n even and x negative -> complex
     - if n odd and x positive|negative -> positive|negative
  - since only alternative notation for x^(1/n), follows same rules
  - simplified form: when m * ₙ√x and:
     - no nested root in n|x
     - x,m ∈ Q
     - x as small as possible
  - formulas:
     - x^(m/n) = (ₙ√x)^m

Logarithms:
  - notation:
     - logₙ(x) or log_n(x)
     - n is base
  - meaning:
     - inverse function of n^x
     - ->y so that n^y = x
  - common bases:
     - log_10: decimal
     - log_e|ln: natural
     - log_2|lg: binary
  - signedness of result (for n|x positive):
     - if both n|x > 1: positive
     - if both n|x < 1: positive
     - if only one of n|x < 1: negative
  - formulas:
     - log_n(xy) = log_n(x) + log_n(y)
     - log_n(x/y) = log_n(x) - log_n(y)
     - log_n(x^y) = log_n(x) * y
        - log_n(x^(1/y)) = log_n(x)/y
     - log_n(y) / log_n(x) = log_x(y)
        - log_n(y) / log_n(x) = log_m(y) / log_m(x)
     - x^log_n(y) = y^log_n(x)
  - special values:
     - log_n(1) = 0
     - log_n(n) = 1
     - log_n(0) = -Inf
     - log_n(Inf) = Inf
     - log_1(x) = ±Inf
     - log_0(x) = 0

Expression rationnelle/exponentielle :
  - expression comprenant x^n, par exemple ax^n, ou ax^n/bx^m, etc.
    - forme rationnelle : si n est positif, dont nombre décimal
      - ex: x², √x, 2x²/₃√x
    - forme exponentielle : pour tout n, mais pas de √, ni de division par x^n
      - ex: x⁻¹
    - forme radicale : si n ∈ ℕ
  - en général aussi, rationnelle utilise √, et exponentielle exponents
  - on peut convertir entre les deux
    - ex: x⁻² = 1/x²

Infinity:
  - notations: Inf or Inf
  - deux inconnues :
    - relations entre 0 et Inf dans multiplications/divisions : 0*Inf, 0/0, Inf/Inf (solution pour tous pourrait être 0 ou ±Inf)
    - somme de Inf et -Inf
  - n ± Inf = ±Inf
    - sauf si n = ±Inf -> indeterminate (± est le sens inverse)
  - ±n * ±Inf = ±Inf
    - sauf si n = 0  -> indeterminate
    - ^n√±Inf = Inf
    - ⁻^n√±Inf = 0
      - sauf :
        - ±Inf√±Inf = 1
  - ±n / ±0 = ±Inf
    - sauf si n = 0  -> indeterminate
  - ±n / ±Inf = ±0
    - sauf si n = Inf  -> indeterminate
  - ±Inf / n = ±Inf
  - ±n^Inf = Inf  (dont n = Inf)
    - sauf :
      - ±1^Inf          -> indeterminate
      - ±[-1;1]^Inf = 0 (dont 0)
  - ±n^-Inf = 0 (dont n = Inf)
    - sauf :
      - ±1^-Inf         -> indeterminate
      - ±[-1;1]^-Inf = Inf (dont 0)

± :
  - général :
    - +x ou -x
    - plus mathématique que phrase avec "ou"
  - ± peut être lié à une variable
    - ex : x = ±3
  - lorsque l'on subtitue plusieurs fois x, il y aura plusieurs ± :
    - leur valeur + ou - est la même entre eux (liés)
    - les valeurs de ∓ sont inversées par rapport à celle de ±, pour une variable donnée
  - opérations (si deux ±, sont liés, car sinon irréductible) :
    - x + ±y  = x ± y = irréductible
    - x - ±y  = x ∓ y = irréductible
    - ∓x = ±(-x)
    - ±x + ±y = ±(x + y)
    - ±x + ∓y = ±(x - y)
    - ±x * y  = ±xy
    - ±x * -y = ∓xy
    - ±x * ±y = xy
    - ±x * ∓y = -xy
    - division : comme *
    - (±x)^n   = irréductible si n inconnu
              = x^n si ceil(n) pair, ±(x^n) sinon
    - ±ₙ√x    = irréductible

Nombre complexe :
  - a + bi
    - a et b sont un nombre réel
    - bi est appelé "nombre imaginaire"
      - équivaut à b, sauf qu'au carré, est négatif
  - i est l'imaginary unit :
    - i² = -1
    - sert à résoudre :
      - √-x :
        - √-x = i√x
      - log_n(-x)
      - asin(x) et acos(x), quand x < -1 ou > 1
  - √i = ±(i+1)/√2
  - complexe plane :
    - représentation graphique :
      - abcisse est a
      - ordonnée est bi (i est invariable, b non)
  - il y a des particularités par rapport aux règles de l'exponation et du logarithme
