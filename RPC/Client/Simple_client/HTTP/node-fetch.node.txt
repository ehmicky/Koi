
              
   NODE-FETCH  
              



VERSION ==>                       #2.6.0
                                  #fetch() polyfill for Node.js

FETCH.fetch|Request|Response|     #Like in browsers, but using HTTP[S].request() under the hood (i.e. HTTP/1.1)
 Headers                          #Differences are documented below.

NOT SUPPORTED ==>                 #  - REQ.keepalive
                                  #  - REQ.mode, REQ.credentials, RES.type
                                  #  - REQ.destination|referrer[Policy]
                                  #  - REQ.cache
                                  #  - REQ.integrity
                                  #  - RES.trailer
                                  #  - BODY_VAL formData
                                  #  - Response.error|redirect()
                                  #  - 'URL' must be absolute
                                  #  - only HTTP[S]
                                  #  - as opposed to web browsers, does not handle: caching, cookies, CORS/CSP

DIFFERENCES ==>                   #ISTREAM is a Node.js stream not WHATWG stream.
                                  #ABORT_CONTROLLER must use a ponyfill like the one documented in DOM doc.

REQUEST HEADERS ==>               #Most can be overriden:
                                  #  Connection: close [C] if OPTS.agent null
                                  #  Content-Type [C]
                                  #  Content-Length [C]
                                  #  Accept: */* [C]
                                  #  Accept-Encoding: gzip, deflate, brotli [C] if OPTS.compress true
                                  #  User-Agent: node-fetch/1.0 (+https://github.com/bitinn/node-fetch) [C]

EXTRA FEATURES ==>                #fetch() OPTS:
                                  #  - compress BOOL (def: true): handles gzip|deflate|brotli response body
                                  #  - size NUM (def: 0, i.e. none): max REQ|RES body size
                                  #  - timeout NUM (def: 0, i.e. none): for both the time to parse REQ|RES body,
                                  #    and to receive the response
                                  #  - follow NUM (def: 20): max number of redirects
                                  #  - agent AGENT[(URL)] (def: null)
                                  #BODY_VAL:
                                  #  - can be BUFFER, including usign REQ|RES.buffer()->PROMISE(BUFFER)
                                  #  - REQ|RES.textConverted()->PROMISE(STR):
                                  #     - like REQ|RES.text() but converts to UTF-8 if detects it is not
                                  #     - detects using Content-Type [C|S] or '<meta charset>' in HTML

ERRORS =>                         #fetch() promise's ERROR is either:
                                  #  - TypeError: wrong syntax for URL|headers|body
                                  #  - AbortError: ABORT_CONTROLLER
                                  #  - FETCH.FetchError:
                                  #     - message STR
                                  #     - type|code|errno:
                                  #        - 'system', 'ECONNREFUSED', 'ECONNREFUSED': network failure
                                  #        - 'system', 'ECONNRESET': network error
                                  #        - 'system', 'ENOTFOUND': DNS error
                                  #        - 'system', 'Z_DATA_ERROR': compression error
                                  #        - 'max-size': above OPTS.size
                                  #        - 'request-timeout': above OPTS.timeout
                                  #        - 'body-timeout': above OPTS.timeout, during REQ|RES body parsing
                                  #        - 'max-redirect': above OPTS.follow
                                  #        - 'no-redirect': OPTS.redirect 'error'
                                  #        - 'invalid-redirect': response has 3** status code but no Location [S]
                                  #        - 'invalid-json': JSON parsing error during REQ|RES.json()
