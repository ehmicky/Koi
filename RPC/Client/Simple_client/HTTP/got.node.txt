
       
   GOT  
       



ALTERNATIVES ==>                  #See HTTP client summary

VERSION ==>                       #9.6.0

GOT(['URL'|URL][, OPTS])
                                  #OPTS:
                                  #  - same as HTTP.request()
                                  #  - url URL|'URL'
                                  #  - baseUrl URL|'URL': prepended to OPTS.url
                                  #  - searchParams OBJ|SEARCHPARAMS|'SEARCH'
                                  #  - responseType 'json', 'buffer' or 'text' (def)
                                  #  - body STR|BUFFER|ISTREAM
                                  #  - form OBJ
                                  #  - json OBJ
                                  #  - context OBJ
                                  #  - decompress BOOL (def: true)
                                  #     - sets Accept-Encoding: gzip, deflate, br [C]
                                  #  - stream BOOL (def: false)
                                  #  - encoding 'ENCODING'|null
                                  #  - retry NUM|OBJ:
                                  #     - retries NUM[(NUM2, ERROR)] (def: 2)
                                  #     - methods 'METHOD'_ARR (def: ['get', 'put', 'head', 'delete', 'options', 'trace'])
                                  #     - statusCodes NUM_ARR (def: [408, 413, 429, 500, 502, 503, 504])
                                  #     - errorCodes STR_ARR (def: 'ETIMEDOUT|ECONNRESET|EADDRINUSE|ECONNREFUSED|EPIPE|ENOTFOUND|ENETUNREACH|EAI_AGAIN')
                                  #     - maxRetryAfter NUM
                                  #  - throwHttpErrors BOOL (def: true)
                                  #  - cookieJar(STORE, OPTS): from tough-cookie library
                                  #  - ignoreInvalidCookies BOOL
                                  #  - request FUNC: instead of HTTPS.request()
                                  #  - gotTimeout NUM|OBJ:
                                  #     - lookup|connect|secureConnect|socket|response|send|request NUM
                                  #  - cache 'URI'|STORE|BOOL:
                                  #     - cache responses (HTTP caching)
                                  #     - passed to cacheable-request (see its doc)
                                  #  - dnsCache KEYV|MAP|BOOL (def: false):
                                  #     - cache DNS responses (see keyv doc)
                                  #  - mutableDefaults BOOL (def: false)
                                  #  - resolveBodyOnly BOOL (def: false)
                                  #  - followRedirect BOOL (def: true)
                                  #  - useElectronNet BOOL (def: false)
                                  #  - hooks OBJ:
                                  #     - init ARR of FUNC(OPTS): before each request
                                  #     - beforeRequest ARR of FUNC(OPTS)[->PROMISE]
                                  #     - beforeRedirect ARR of FUNC(OPTS, RES)[->PROMISE]
                                  #     - beforeRetry ARR of FUNC(OPTS, ERROR, NUM)[->PROMISE]
                                  #     - beforeError ARR of FUNC(ERROR)->[PROMISE_]ERROR
                                  #     - afterResponse ARR of FUNC(RES, FUNC2(OPTS)->PROMISE_RES)->[PROMISE_]RES
                                  #URL can be '[PROTO://]unix:/SOCKET_PATH:/URI_PATH' as a shortcut for OPTS.socketPath
                                  #Add User-Agent: got/VERSION (URL) [C] by default

GOT[.stream][.METHOD](...)        #Same with OPTS.method|stream set
GOT.create(OPTS)->GOT             #Override defaults OPTS
GOT.extend(OPTS)->GOT             #Add to defaults OPTS
GOT.mergeInstances(GOT...)->GOT   #
