
                        
   HTTP-CACHE-SEMANTICS  
                        



VERSION ==>                       #4.0.3

new HttpCacheSemantics
 (REQ], RES[, OPTS])              #OPTS:
                                  #  - shared BOOL (def: true): if server cache is shared by other clients
                                  #  - trustServerDate BOOL (def: true): if server can be trusted
                                  #  - immutableMinTimeToLive NUM (def: 1 day, in ms): minimum TTL
                                  #  - cacheHeuristic NUM (def: 0.1): fallback TTL to percentage of response's age
fromObject(OBJ)->SEMANTICS        #
SEMANTICS.toObject(SEMANTICS)->OBJ#
SEMANTICS.revalidatedPolicy(REQ, RES)

SEMANTICS.storable()->BOOL        #Whether response can be cached for later requests.
                                  #false if either:
                                  #  - Cache-Control: no-store [C|S]
                                  #  - Cache-Control: private [S] and OPTS.shared true
                                  #  - not GET|HEAD|POST
                                  #  - POST and:
                                  #     - no Expires [S]
                                  #     - no Cache-Control: maxage [S]
                                  #     - no Cache-Control: s-maxage [S] or OPTS.shared false
                                  #  - not 200|203|204|300|301|302|303|307|308|404|405|410|414|501
                                  #  - 302|303|307|308 and no Expires [S] nor Cache-Control: public|[s-]maxage [C]
                                  #  - Authorization [C] and OPTS.shared true and no Cache-Control: must-revalidate|public|s-maxage [C]
SEMANTICS.date()->'TIMESTAMP'     #Request's timestamp using Date [S]
                                  #Returns current time instead if either:
                                  #  - OPTS.trustServerDate false
                                  #  - more than 8 hours away from current time
SEMANTICS.age()->NUM              #Response's age using max of Age [S] or age using Date [S], in ms
SEMANTICS.maxAge()->NUM           #Response's max age.
                                  #0 if either:
                                  #  - storable() false
                                  #  - Cache-Control: no-cache [C]
                                  #  - OPTS.shared true and either:
                                  #     - Cache-Control: proxy-revalidate [C]
                                  #     - Set-Cookie [S] and no Cache-Control: public|immutable [C]
                                  #  - Vary: * [S]
                                  #Otherwise returns (in ms):
                                  #  - Cache-Control: s-maxage [C] (if OPTS.shared true)
                                  #  - Cache-Control: maxage [C]
                                  #  - Expires [S]
                                  #  - OPTS.cacheHeuristic * age using Last-Modified [S]
                                  #The last two return at least OPTS.immutableMinTimeToLive
SEMANTICS.timeToLive()->NUM       #Max of age() or maxAge() (in sec)
SEMANTICS.stale()->BOOL           #Whether age() > maxAge()

SEMANTICS.                        #Whether REQ can use previously cached request.
 satisfiesWithoutRevalidation     #Return false if either:
 (REQ)->BOOL                      #  - different method, URL, Host [C] and (if Vary [S]) headers
                                  #  - age() > Cache-Control: max-age [C]
                                  #  - age() > maxAge() unless:
                                  #     - Cache-Control: max-stale [C] matches
                                  #     - no Cache-Control: must-revalidate [C]
                                  #  - timeToLive() < Cache-Control: min-fresh [C]
                                  #  - Cache-Control|Pragma: no-cache [C]
SEMANTICS.responseHeaders()->OBJ  #Return response headers but:
                                  #  - without Date|Connection|Keep-Alive|Proxy-Authenticate|Proxy-Authorization|TE|Trailer|Transfer-Encoding|Upgrade [S]
                                  #  - with Age [S] using age()
                                  #  - with Date [S] using current time
SEMANTICS.revalidationHeaders(REQ)#Return request headers but:
 ->OBJ                            #  - without Date|Connection|Keep-Alive|Proxy-Authenticate|Proxy-Authorization|TE|Trailer|Transfer-Encoding|Upgrade [C]
                                  #  - without If-Range [C]
                                  #Also:
                                  #  - if not storable() or different method, URL, Host [C] and (if Vary [S]) headers:
                                  #     - without If-None-Match|If-Modified-Since [C]
                                  #  - otherwise:
                                  #     - if ETag [S], If-None-Match: ETAG [S]
                                  #     - if Last-Modified [S], If-Modified-Since: DATE [S]
