
         
   P-MAP  
         



P-MAP([PROMISE_]VAL_ITERABLE,     #Like Promise.all([...VAL_ITERABLE].map(FUNC))
 FUNC(VAL, INDEX)->[PROMISE_]VAL2 #OPTS:
 [, OPTS])->PROMISE_VAL2_ARR      #  - concurrency NUM (def: Infinity): only run NUM values from ITERABLE at once
                                  #On exception|rejection in FUNC():
                                  #  - if stopOnError true (def):
                                  #     - reject PROMISE right away
                                  #     - reject with that ERROR
                                  #  - if stopOnError false:
                                  #     - reject PROMISE after all FUNC() have ended
                                  #     - reject with ERROR:
                                  #        - name 'AggregateError'
                                  #        - message with all ERROR.stack joined
                                  #           - use clean-stack (see its doc)
                                  #        - ITERABLE of all ERRORs
                                  #           - normalize to ERROR instances if not
                                  #Version 3.0.0
                                  #The following libraries are based on p-map

P-ALL(FUNC_ITERABLE[, OPTS])      #Like P-MAP(...) except using an iterable of FUNC()->[PROMISE_]VAL2
 ->PROMISE_VAL2_ARR               #Version 2.1.0
