Go through "Open source" documentation
  - also see Google note

gulp-shared-tasks (see roadmap)

Check async stack trace in Node 12:
  - CALL.isAsync()
  - try: async/await, promise, Promise.all|race(), setTimeout() and others
  - --async-stack-traces: enabled in v8 7.3

Add ES modules
  - fix .eslintrc
  - add VSCode snippets for it

shrimpit
  - add it and redocument it

@babel/minify
  - @babel-preset-minify

ava-each (see roadmap)

portable-path (see roadmap)

validate-path (see roadmap)

TypeScript

json-schema (see roadmap)

copyconf (see Google notes)

better-cli (see roadmap)

Go through "dependencies" documentation

Try to use Univeral JavaScript:
  - promote once using Universal JavaScript:
     - keep-func-props
  - make test-examples test JavaScript in browsers too

Go through "Code review" documentation

Go through "Git/GitHub/coding" documentation
  - Probot:
     - check documentation
     - check available ones (any GitHub app, not just Probot)
     - use it (unless already available) for after every closed issue/PR:
        - add templated content. For our use case:
           - encourage starring and promoting
           - fill in a survey
        - can use conditions for skipping. For our use case:
           - only the first time a user contributed

finish babel (see roadmap)

Go through documentation of:
  - markdown
  - textlint
  - check for dead links projects
     - including awesome_bot
     - add to all my projects markdown
     - do it as a cron task for portable-node-guide
  - documentation
  - static website generators

Go through Async documentation
  - fix log-process-errors exit issue (see its roadmap)

Go through Functional documentation
  - replace my functional utilities found in most of my projects by a library

autoformat (see roadmap)

extract and complete JSON references tool
  - use it in test-openapi

publish-check (see roadmap)

eslint-plugin-portable (see roadmap)

Fix task.validate in test-openapi (see Google note)

JSON schema v4/v7 v7/v4 converters
  - add support to v7 in test-openapi

sourcemaps (see roadmap)

test-openapi OpenAPI 3.0 support

Go through "testing" documentation

extract logging from autoserver / "autogging"
  - also see Google note

API system information:
  - extract the `serverinfo` part of autoserver
  - goal: host information for API logs
  - check what can be added
     - check `systeminformation` library I documented
     - check if bug error message of `test-openapi` can be improved
