
                     
   ROADMAP-LOCALPACK  
                     




remove() + rmdir() instead of ensureDir() + remove()

Rename opts.cwd to opts.source and return value packageRoot to source

Rename CLI output to "Source" and "Output"

Do not add devChecks for devDependencies that are also prod deps, optional deps or bundle deps

Prevent source destruction:
  - add {output}/.localpack empty file
  - when output is an existing file, error
      - message says that file/folder should be removed first
      - unless {output}/.localpack exists
  - maybe move remove(output) earlier, during output check

localpack should not use/require itself (instead of inside gulp folder) because it creates hard to debug bugs (add comment). instead of requiring "localpack" it should require packageRoot

npm pack:
  - is yarn pack logic different??? If so, how to handle???
  - what if yarn version is different fron npm version???
  - check if "npm-which npm" + requiring it (i.e. libnpm) would be faster than spawning a process
  - check which part of npm pack is slow and if it can be influenced

Output outside packageRoot:
  - still forbid if === packageRoot
  - allow but:
     - run npm install:
         - prod only
         - yarn if there is a yarn lock
             - maybe use a project that does that
         - only show stderr???
         - print warning that doing so is slow, and it's better not to have output outside packageRoot
     - add dev checks afterwards



If PACKAGE.bin[.SYMLINK] or PACKAGE.directories.bin exist:
 - symlink to PACKAGE_ROOT/node_modules/.bin/*
    - how should it work on Windows? or are node_modules/.bin/* working on Windows?
 - overwriting potentially existing files

Check moization of promises with `moize`
  - make sure all current projects use it correctly

Replace by t.snapshot() for return values of `run()` and all tests
  - make sure tests work on Windows and Mac

Test coverage:
  - export (but not document) the temp fix used in my projects
  - do the real solution (sourcemaps):
     - can I avoid re-creating sourcemaps utils?

Add travis, etc.

Add documentation
  Ensure "npm publish" does not break your package
  When if your package works locally, it might still be broken once published to npm if you accidentally:
    - installed a production `dependencies` as a `devDependencies` instead
    - misconfigured the entry points (`package.json`'s `main`, `browser` and `bin` fields)
    - `.npmignore` or `package.json`'s `files` field
  Also say:
    - npm install does not have to and should not be run inside the localpack.
    - output should not be comitted to repo nor published to npm, using .gitignore, .npmignore or PACKAGE.files.

Use in other projects:
  - fix gulp FILES.json for get-versions and validate-path

Add logo
  - use stencil font

Promote

Use validate-path on opts.cwd|output
