
                             
   ROADMAP-GULP-SHARED-TASKS  
                             



gulp unit:
  - should use verbose reporter
     - output is still showing things like spinner:
        - it should instead look like CI=1 run
  - use gulp-watch but with initial "ava", watchTask "ava -w" and no files to watch

gulp-execa:
  - remove default maxConcurrency override

async stack trace:
  - CALL.isAsync()
  - try: async/await, promise, Promise.all|race(), setTimeout() and others
  - --async-stack-traces: enabled in v8 7.3

Check npmjs.io score with new badges https://api.npms.io/v2/package/log-process-errors

Add Open source knowledge

Promote log-process-errors

gulp-execa:
  - remove error message logic
  - remove split.js logic once my PR on execa gets merged
  - make it more like a thin wrapper around `execa`

Babel:
  - gulp unit:
     - improve ju arguments
  - npmii:
     - npmii eslint does not update it in eslint-config-standard-prettier-fp anymore
     - npmii ava update eslint-config-ava in READMEs but should not
  - requiring top:
     - test code getting binary path: then create (and use) project that:
        - unless already exists -> check it does not
        - do:
            - pkg-dir[.sync]()
            - require("ROOT/package.json")
            - get PACKAGE.bin[.NAME] (def NAME is PACKAGE.name)
            - path.posix.relative(ROOT, PATH)
            - return
        - FUNC[.sync(["NAME"])] is main exports
  - pkg-dir opts.cache BOOL:
     - moize() with cache key process.cwd()
     - def false until next major version

Dir structure:
  - make all require() point to files instead of directories
  - remove all index.js except not trivial ones
  - rename all main.js to index.js
  - add file extensions to all require()???

Create repo to do try/catch wrapper (see autoserver code)
  - use keep-func-props
  - keep context
  - make it work with ES decorators proposals too
  - check catch-decorator
  - use in my repos

Separate gulp-cutting-edge
  - gulp wrapping repo:
     - FUNC(FUNC2[, STR])->FUNC2
     - wrap with try {} catch {} so that if throws (sync or async), throw a PluginError() instead
        - plugin name is STR (def: FUNC2.name)
     - keep context
  - `cutting-edge`:
     - validate latest node/npm/yarn
     - opts to throw or not
     - opts to ignore if HTTP request fails (e.g. Node website down) (def: ignore it)
     - opts to only include node or only npm/yarn, etc.
     - document that this should not be production dependency for libraries
     - avoid having to update this module by:
        - using HTTP request instead of node-releases
        - making test not check the actual version string
     - promote on https://github.com/MarkTiedemann/node-latest/issues/2

Separate gulp-watch code into own repository
  - use jest-validate
  - document that gulp.series() should be used instead of `&&` or `;`
  - re-use Gulp logo but dark and eye symbol instead of "Gulp" word

Separate gulp-execa code into own repository
  - if execa PRs get rejected, create a cross-exec repo:
     - for anything in gulp-execa not gulp-specific, i.e.:
        - single string input
        - better error message
     - i.e. wrapper around "execa"
     - promote in Portable Node.js guide
  - use jest-validate
  - "Cross-platform shell commands in Gulp.js"
     - Focus on that the cross-platform since it's the only one being cross-platform
  - warn in README that gulpExeca.stream() should be avoided when command can take several files as input (through globbing, variadic args or dir recursion)
  - document:
      - can only command and args
          - should do several calls instead of ; or &&
          - or gulp.series|parallel()
          - should use opts.std*|input instead of shell pipes and redirections
      - everything escaped, i.e. should not quote nor escape
           - this allows preventing subcommands injections like $(...) as argument
           - no globbing. Alternatives (in preference):
               - callee not caller interpret globbing
               - callee allow directory recursion
               - callee allow multiple files, i.e. caller can perform globbing with tools like minimatch
               - gulpExeca.stream()
           - variable expansion
               - should instead use template string
                   - including process.env
     - should pass envvars with opts.env
     - should use Node.js commands instead of Unix coreutils or Bash commands
     - should use path.normalize()
     - link to Portable Node guide
  - re-use Gulp logo but dark and shell symbol instead of "Gulp" word
  - promote with issue on `execa` repo to add a link

Separate non-Gulp specific coverage utilities:
  - npm install the GitHub URL of codecov-bash instead of fetching it and feading it as a stream
  - see codecov check repository

Add tests
  - test on several Gulp versions?
