
                             
   ROADMAP-GULP-SHARED-TASKS  
                             



When nyc 15 released:
  - use --nycrc-path (https://github.com/istanbuljs/nyc/issues/1073)
  - check if can remove `spawn-wrap` hack in log-process-errors

execa:
  - improve stream error handling (https://github.com/sindresorhus/execa/issues/228)
     - use error.bufferedData
     - including for stdin
        - fix test coverage: https://coveralls.io/builds/23315196/source?filename=index.js#L320
     - fix `cleanup()` too
  - Fix `timeout` and `killSignal` in Node core (https://github.com/nodejs/node/issues/27639)
  - v2:
     - release notes
     - Medium post
     - Tweet/contact each contributor

TypeScript:
  - try to use it for input/options validation (check if library exists)
  - try to use it for CLI handling (check if library exists)

WebAssembly

Finish Stripe (see Stripe doc)

gulp-execa:
  - wait for:
     - new catchphrase of execa, then change description (package.json, README, GitHub, Gitter, repl.it)
     - execa v2
  - create own Medium article
     - link to it in README (like log-process-errors does)

Other projects:
  - Abstract execa + normalization + snapshot logic
     - check all projects that do it right now
     - like in gulp-execa, log-process-errors, unix-permissions
  - Find other common test helpers in log-process-errors and unix-permissions

"Cross-platform Node.js" Medium series
  - once every Wednesday, based on a chapter of cross-platform-node-guide
  - promote on cross-platform-node-guide
  - maybe promote on awesome-cross-platform-nodejs

Travis Buddy not working anymore?

Check spectrum chat vs Gitter

Go through "versioning" documentation
  - add better changelog logic
     - should include contributors names and thank them

Babel:
  - requiring top:
     - test code getting binary path: then create (and use) project that:
        - unless already exists -> check it does not
        - do:
            - pkg-dir[.sync]()
            - require("ROOT/package.json")
            - get PACKAGE.bin[.NAME] (def NAME is PACKAGE.name)
            - path.posix.relative(ROOT, PATH)
            - return
        - FUNC[.sync(["NAME"])] is main exports
  - pkg-dir opts.cache BOOL:
     - moize() with cache key process.cwd()
     - def false until next major version

cutting-edge:
  - check my edl doc for versioning / dependencies first
  - do npm search for similar packages
  - think of better name
  - check for outdated dependencies
  - for any runtime and package manager, using plugins:
     - must be npm libraries writing in Node.js
        - follow naming convention (e.g. `cutting-edge-*`) so they can be found without being declared
     - must export FUNC('ARG'[, OPTS])->PROMISE_OBJ
        - run once for each 'ARG'
        - should resolve PROMISE with OBJ:
           - outdated BOOL
           - current 'VERSION'
           - latest 'VERSION'
           - changelog 'URL'
           - homepage 'URL'
  - create plugins for:
     - Node version
     - npm (itself) version
     - npm package version (either one or all of them)
  - input:
     - use arguments or use config???
  - results:
     - CLI: if any outdated, exit code 1 + messages. Otherwise silent
     - programmatic: if any outdated, PROMISE rejected with info. Otherwise PROMISE resolved with undefined
  - always for latest version, or only for latest version that matches semver (e.g. `package.json` semver)???
  - use instead of gulp checkVersions and gulp outdated in gulp-shared-tasks
  - potential for commercial CI

Separate gulp-watch code into own repository
  - use jest-validate
  - document that gulp.series() should be used instead of `&&` or `;`
  - re-use Gulp logo but dark and eye symbol instead of "Gulp" word

Separate non-Gulp specific coverage utilities:
  - npm install the GitHub URL of codecov-bash instead of fetching it and feading it as a stream
  - see codecov check repository

Add tests
  - test on several Gulp versions?
