
                             
   ROADMAP-GULP-SHARED-TASKS  
                             



When nyc 15 released:
  - use --nycrc-path (https://github.com/istanbuljs/nyc/issues/1073)
  - check if can remove `spawn-wrap` hack in log-process-errors
  - try to remove `caching-transform` dependency in gulp-shared-tasks
     - this should fix `npm audit` not working

execa:
  - https://github.com/sindresorhus/execa/issues/322
     - fix CI tests for autoserver
  - more refactoring splitting into smaller functions
  - break into several files

TypeScript:
  - go through TypeScript projects in to_learn.txt
  - add TypeScript:
     - *.js -> *.ts
     - type every function
     - typescript keyword in package.json and GitHub tags
  - add JSDoc:
     - gulp docs:
        - runs typedoc:
           - --excludeNotExported
           - output to build/src_docs/
        - before typedoc, should transform VINYL.content:
           - // COMMENT to /** COMMENT */
              - if several in a row, merge them
           - this allows keeping using // COMMENT everywhere except for top exports
              - including on top of files to imply @file (make sure it works)
           - this still allows using /** COMMENT */ (since those are not changed) if want to specify additional @TAG
        - part of gulp build only if it's fast
        - document it in CONTRIBUTING.md
     - comment:
        - entry file exported variables with JSDoc tags and description:
           - @param|returns|typeparam (no TYPE)
           - @default|throws
           - @deprecated|todo|ignore
           - @event|fires|listens
           - @external|global
           - @mixin
           - @link|see and [[VARR]]
           - ``` ... ``` for examples
        - make sure VSCode is showing TypeScript TYPEs even if current file is JavaScript and library is transpiled to JavaScript
           - otherwise, entry file exported variables should add more JSDoc tags
        - non-entry file exported variables with only // COMMENT
        - links to README.md and docs/*
        - check if using @module with typedoc-plugin-external-module-name makes sense for bigger repos
     - JSDoc blocks are extracted to *.d.ts by tsc --declaration:
        - should not be stripped by Babel so also available in *.js
     - add eslint-plugin-jsdoc
        - check each rule to see if it works
  - try to use it for input/options validation (check if library exists)
     - check my json-schema roadmap
     - might require separate build step
     - should be a function wrapper
     - checks both input and output
        - this should be skipped when detect that consumer uses tsc too
        - goals:
           - runtime check
           - test that types match implementation, during automated tests
     - apply default values
  - other option for validation:
     - TypeScript to JSON-SCHEMA:
     - also repo for better ajv error messages
     - validation tool:
        - compile-time transform to ajv optimized function
        - @VALIDATE(FILE)(FUNC)
           - using ajv FILE
        - cached (unless ajv cache is enough)
  - try to use it for CLI handling (check if library exists)
     - check my better-cli roadmap

Finish Stripe (see Stripe doc)

"Cross-platform Node.js" Medium series
  - once every Wednesday, based on a chapter of cross-platform-node-guide
  - promote on cross-platform-node-guide
  - maybe promote on awesome-cross-platform-nodejs

Check spectrum chat vs Gitter

Fix `timeout` and `killSignal` in Node core (https://github.com/nodejs/node/issues/27639)

Go through "versioning" documentation
  - add better changelog logic
     - should include contributors names and thank them

Separate gulp-watch code into own repository
  - re-use Gulp logo but dark and eye symbol instead of "Gulp" word

Separate the codecov upload logic into own repository

codecov-check (see roadmap)

Separate the npm publish logic into own repository

Add tests
  - test on several Gulp versions?
