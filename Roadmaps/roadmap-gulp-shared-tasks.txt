
                             
   ROADMAP-GULP-SHARED-TASKS  
                             



When nyc 15 released:
  - use --nycrc-path (https://github.com/istanbuljs/nyc/issues/1073)
  - check if can remove `spawn-wrap` hack in log-process-errors

execa:
  - improve stream error handling (https://github.com/sindresorhus/execa/issues/228)
     - including for stdin
     - fix test coverage: https://coveralls.io/builds/23315196/source?filename=index.js#L320
  - Fix `timeout` and `killSignal` in Node core (https://github.com/nodejs/node/issues/27639)
  - v2:
     - release notes
     - Medium post
     - Tweet/contact each contributor

gulp-execa with opts.env warns

fp-try-catch:
  - Replace all addErrorHandler() by try/catch

TypeScript

WebAssembly

Finish Stripe (see Stripe doc)

gulp-execa:
  - wait for:
     - new catchphrase of execa, then change description (package.json, README, GitHub, Gitter, repl.it)
     - execa v2
  - create own Medium article
     - link to it in README (like log-process-errors does)

Other projects:
  - Abstract execa + normalization + snapshot logic
     - check all projects that do it right now
     - like in gulp-execa, log-process-errors, unix-permissions
  - Find other common test helpers in log-process-errors and unix-permissions

"Cross-platform Node.js" Medium series
  - once every Wednesday, based on a chapter of cross-platform-node-guide
  - promote on cross-platform-node-guide
  - maybe promote on awesome-cross-platform-nodejs

Travis Buddy not working anymore?

Check spectrum chat vs Gitter

Go through "versioning" documentation
  - add better changelog logic
     - should include contributors names and thank them

Babel:
  - requiring top:
     - test code getting binary path: then create (and use) project that:
        - unless already exists -> check it does not
        - do:
            - pkg-dir[.sync]()
            - require("ROOT/package.json")
            - get PACKAGE.bin[.NAME] (def NAME is PACKAGE.name)
            - path.posix.relative(ROOT, PATH)
            - return
        - FUNC[.sync(["NAME"])] is main exports
  - pkg-dir opts.cache BOOL:
     - moize() with cache key process.cwd()
     - def false until next major version

Separate gulp-cutting-edge
  - gulp wrapping repo:
     - FUNC(FUNC2[, STR])->FUNC2
     - wrap with try {} catch {} so that if throws (sync or async), throw a PluginError() instead
        - plugin name is STR (def: FUNC2.name)
     - keep context
  - `cutting-edge`:
     - validate latest node/npm/yarn
     - opts to throw or not
     - opts to ignore if HTTP request fails (e.g. Node website down) (def: ignore it)
     - opts to only include node or only npm/yarn, etc.
     - document that this should not be production dependency for libraries
     - avoid having to update this module by:
        - using HTTP request instead of node-releases
        - making test not check the actual version string
     - promote on https://github.com/MarkTiedemann/node-latest/issues/2

Separate gulp-watch code into own repository
  - use jest-validate
  - document that gulp.series() should be used instead of `&&` or `;`
  - re-use Gulp logo but dark and eye symbol instead of "Gulp" word

Separate non-Gulp specific coverage utilities:
  - npm install the GitHub URL of codecov-bash instead of fetching it and feading it as a stream
  - see codecov check repository

Add tests
  - test on several Gulp versions?
