
                    
   ROADMAP-NEW-GULP  
                    



Goals:
  - no plugins needed
  - imperative approach like Gulp for users logic
  - but declarative approach for common logic like watching, file selection, etc.

Task is either:
  - function
     - can be async
        - allow STREAM|EVENTEMITTER|OBSERVABLE using async-done???
  - string (fired with execa)

Easy to share common tasks:
  - e.g. can fire common tasks if installed package, even if no task file

Source files
  - can be in watch mode:
     - either re-run:
        - all files
        - files whose mtime is more recent than dest files
        - files that have changed since last task run (in-memory)
        - files that have changed since last task run (persistent across calls)
        - files that previously errored (e.g. linting)
  - passed as argument to task:
     - path: only absolute one, or give basename, relpath, etc.?
     - contents: can be passed as BUFFER (def), STR or STREAM
     - FS.stat
  - task is fired repeatedly, i.e. STREAMs are not exposed to users:
     - might still use STREAMs under the hood???
     - maxConcurrency
     - run in separate worker threads

Dest files

Source maps

Task description:
  - nice printing

Series/parallel

Can use -r CLI flag to call register/* (e.g. for esm)

There should be a cli, with a short name
  - should specify task name
     - def: 'default'
  - can specify Node flags

Allow passing arguments to tasks
  - should be easy to consume in tasks, e.g. passed as parameter
  - do some 0-configuration CLI arguments parsing, so that function can use them as OBJ, not as STR_ARR
     - allow configuration optionally???
  - maybe only allow firing a single task, then rest are arguments???

Nice logging
