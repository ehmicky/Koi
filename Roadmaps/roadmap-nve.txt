
               
   ROADMAP-NVE  
               



On new nyc major release, check all the tests TODO related to issues with nyc

Multiple versions:
  - CLI: space-separated VERSION
  - programmatic: runVersions('VERSION'_ARR, ...)->ITERABLE
  - versions order: same as input for both execution and output
  - make version normalization and download happen in parallel, before any child process starts
  - OPTS.parallel BOOL (def: false):
     - in CLI:
        - serial: use execa OPTS.stdio 'inherit' and OPTS.buffer false
        - parallel:
           - stream/buffer each process in turn
           - create a package pipeSeries(STREAM_ARR, STREAM):
              - like Stream.pipeline() but stream each output in order
              - stream first STREAM
              - then when done, write buffer of second STREAM and stream that one, and so on
  - OPTS.wait BOOL (def: false):
     - whether to stop execution on error
        - not only exitCode !== 0 but also termination signals
     - if false:
        - send SIGTERM to all others on error
        - in CLI: print the `all` of the child process that failed
     - if true:
        - exitCode is the highest exitCode (undefined defaults to 1)
  - in CLI: if more than one version, each version output is:
     - prepended with a line showing the "Node VERSION"
        - VERSION is same as input, not normalized
        - in green
     - appended with error message if any:
        - "Node.js VERSION ..." (using Execa error message, without the actual command)
        - "Node.js VERSION aborted" (if killed because OPTS.parallel true and another command failed)
     - nothing printed if killed because OPTS.parellel false and another command failed
  - if command undefined:
     - print each normalized version, but without headers|footers
  - make sure stdin can still be used from CLI
  - issues with process.stdin|stdout|stderr.isTTY:
     - false in child processes unless using 'inherit'
     - when not using 'inherit', should keep colors by setting ENVVAR FORCE_COLOR using parent process.stdout.getColorDepth()

Use the .zip file for Windows

Submit nve to https://github.com/sindresorhus/awesome-nodejs

Add a link to "Related" in Execa

Finish learning GitHub actions

run-github-action:
  - run GitHub action outside GitHub, e.g. locally
  - use cases:
     - re-using in other projects, e.g. netlify/build
     - testing
