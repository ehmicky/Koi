
               
   ROADMAP-NVE  
               



Verify checksums with GPG signature

Add support for BSD, Android, armv6l

Update GitHub actions matrix `include`

preferred-node-version:
  - refactoring:
     - separate nvm alias project
        - refactor, add tests
     - refactor, add tests
  - used by get-node if alias "current":
     - no need for additional normalizeNodeVersion() unless undefined
     - def to "*" or to process.version???
     - remove from normalizeNodeVersion()
  - add new features brought by preferred-node-version to the README of all nve projects
  - update issues:
     - https://github.com/ehmicky/get-node/pull/4
     - https://github.com/ehmicky/normalize-node-version/pull/1
  - caching should be OPTS.mirror scoped?

Try removing core-js from all my projects

Arch:
  - --arch=ARCH option -> VERSION_RANGE/ARCH instead
  - preferred-node-version:
     - when loading nvs, parse suffix '/x64', '/x86', '/32' or '/64' after version
     - return in OBJ: arch "x32" or "x64". Def: current process.arch

Pruning cache:
  - in get-node (and above libraries)
  - OPTS.cache NUM
     - def: 8
     - min: 1
     - max number of cached versions at once
     - 1: no caching
     - high number like 1000: no pruning
 - prune at end of each get-node call:
     - keep track of atime in .cache/nve/all/lastRun.json OBJ.runs OBJ_ARR: timestamp "ATIME", version, arch, major
         - written at end of each get-node call
     - use LRU, but first half must be in different major+CPU combinations
        - "half": Math.floor(), with max number of combinations

.nve.yml:
  - in current dir, any parent dirs or in home dir
  - contains OBJ with common nve options
  - used by all nve libraries
  - will contain OBJ.version for nve-shell
  - memoized per process
  - have own library to load it or to merge to library options
  - add to preferred-node-version, using field CONF.version field
     - NUM|STR
     - optional

uploadCoverage fails randomly
  - example: https://github.com/ehmicky/nvexeca/runs/560883959?check_suite_focus=true
  - bug: https://github.com/codecov/codecov-action/issues/68. Once fixed:
     - fix `shouldCover()` in `dev-tasks`, release to all repos and make sure all uploadCoverage are now passing
     - remove all CODECOV_TOKEN from workflow.yml, and make sure all uploadCoverage are still passing
     - remove all CODECOV_TOKEN from repo settings (GitHub secret)

Check execa question about stdin: https://github.com/sindresorhus/execa/issues/418

get-node should export a way to check if valid alias so nve can use it???

nve src/parse.js might be wrong:
 - when doing --OPT VALUE --OTHEROPT instead of --OPT=VALUE --OTHEROPT, it seems like VALUE would be --OTHEROPT would be skipped?
 - does it work with aliases, e.g. --OPT . .???

Put groupBy function from all-node-versions into own library

Linting:
  - enforce only arrow functions are used, not `function`
     - see https://github.com/eslint/eslint/issues/13141

Learn CLI/Terminal from to_learn
