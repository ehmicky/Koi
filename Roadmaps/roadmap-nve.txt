
               
   ROADMAP-NVE  
               



nve (release/v3 branch):
  - return value???
     - ITERATOR of OBJ:
        - childProcess
        - version
        - index
        - exit PROMISE (must be awaited):
           - code NUM
           - signal STR
     - any simpler return value???
     - do process redirection at programmatic level???
  - stdout|stderr:
     - should await Promise.all([
         promisify(endOfStream)(childProcess.stdout),
         promisify(endOfStream)(childProcess.stderr),
         pEvent(childProcess, "exit"),
       ])
          - only if childProcess.stdout|stderr defined
             - e.g. not when opts.stdio "ignore"
          - make sure childProcess.stdout|stderr:
             - can outlive childProcess???
             - cannot last forever???
  - OPTS.onCreate(CHILD_PROCESS, "VERSION", INDEX)[->PROMISE]:
     - "VERSION" is input, not normalized
     - CLI should use it to pipe output
     - CLI should return PROMISE awaiting child process stdout|stderr
     - PROMISE should be awaited, using Promise.all() for each child process
  - return value should be PROMISE resolved with ARR of { code, signal } or rejected with ERROR when whole run is done
  - fetch-node-website spinner global lock:
     - goal: only show one spinner at most when several in parallel
     - when spinner:
        - starts|updates: acquire lock if available
        - starts|updates: do not print if no lock
        - ends: remove lock if acquired
     - lock is top-level variable
  - Allow running multiple Node versions at once:
     - space-separated VERSION
     - versions order: same as input for both execution and output
     - download and normalize versions should happen in parallel, and finish all before any child process starts
     - execution is serial
        - unless OPTS.parallel true (def: false)
     - output:
        - each output printed as is
        - if parallel, first child process output is piped/streamed, next ones are buffered and printed whole
        - if serial, every child process output is piped/streamed
        - if more than one version, each version output is:
           - prepended with a line showing the "Node.js VERSION"
              - VERSION is same as input, not normalized
              - in green unless OPTS.colors false (def: if stdout supports colors)
          - appended with an empty line
     - OPTS.wait BOOL:
        - false (def):
           - stop on first exit code != 0 and use it
           - done at the programmatic level, not CLI
           - if serial, stop iteration. If parallel, send SIGTERM to other child processes
        - true:
           - wait for all child processes
  - check if `xz --version` exit code is 0, and if so, download *.tar.xz instead of *.tar.gz
     - except for AIX or if Node <0.12.10
  - clean cache:
     - max cache size 10
     - remove last used first
        - not last created
        - which of atime|mtime|ctime is most reliable and relevant???
     - clean when nve called
  - go through whole nve code again
  - update benchmarks
  - fix documentation and examples
     - include the fact that since this is now a full-fledge alternative to nvm, no need to point to it anymore
  - submit nve to https://github.com/sindresorhus/awesome-nodejs
  - spyd --run.node.versions should use nve somehow (instead of get-node), so that child processes use the right Node.js version
