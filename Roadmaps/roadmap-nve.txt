
               
   ROADMAP-NVE  
               



Upgrade my projects to Node 13

On new nyc major release, check all the tests TODO related to issues with nyc

Stdin:
  - if nve binary fired with stdin "ignore":
     - check current code works
     - otherwise try to guess it is "ignore" (not "pipe" who has not sent data yet)
  - stdin "pipe" is supposed to hang, since it could be from a pipe that has not sent data yet, or from parent that has not called childProcess.stdin.end() yet
  - pass stdin "ignore" to runCli() helper by default
  - add different stdin scenarios to get-stdin documentation
  - add tests for stdin ignore and stdin TTY, for both runCli() and runCliSerial()

Add examples and documentation for this

Make minor release

Better download Node by knowing total size in advance:
  - can use Content-Length [S] already???
  - i.e. can do progress bar
  - check where file size information comes from in Node.js download site
  - alternative: dd issue to ask for that HTTP response header
  - alternative: do a prior HTTP request crawling for that information

OPTS.continue BOOL (def: false):
  - whether to stop execution on Execa error
  - if true, exitCode is the highest exitCode (undefined defaults to 1)

OPTS.parallel true (def: false):
  - stream/buffer each process in turn
  - on error, if OPTS.continue false:
     - send SIGTERM to all others on error
     - current command should print "Node VERSION aborted"
     - print the `all` of the child process that failed
  - make sure stdin can still be used from CLI
  - issues with process.stdin|stdout|stderr.isTTY:
     - false in child processes since not using 'inherit'
     - should keep colors by setting ENVVAR FORCE_COLOR using parent process.stdout.getColorDepth()
  - create a package pipeSeries(STREAM_ARR, STREAM):
     - like Stream.pipeline() but stream each output in order
     - stream first STREAM
     - then when done, write buffer of second STREAM and stream that one, and so on

Use the .zip file for Windows

Try using xz (Unix) and 7zip (Windows) archives:
  - maybe forget streaming and use system binary if available

Submit nve to https://github.com/sindresorhus/awesome-nodejs

Add a link to "Related" in Execa

Finish learning GitHub actions

run-github-action:
  - run GitHub action outside GitHub, e.g. locally
  - use cases:
     - re-using in other projects, e.g. netlify/build
     - testing
