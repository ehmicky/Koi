
               
   ROADMAP-NVE  
               



Rethink the return value:
  - problem: cannot return execa return value as is because it is also a promise, so it would be awaited

Allow local binaries:
  - problem: npm-run-path changes node in PATH

Go through whole nve code again

Update benchmarks
  - use nvm exec instead of nvm run

Fix documentation and examples
  - include the fact that since this is now a full-fledge alternative to nvm, no need to point to it anymore

Make major release

spyd --run.node.versions should use nve somehow (instead of get-node), so that child processes use the right Node.js version

Use the .zip file for Windows

Allow command to be undefined programmatically:
  - command execution is then skipped but not version normalization nor download
  - in CLI, also prints normalized version on console

Multiple versions:
  - CLI only
  - space-separated VERSION
  - versions order: same as input for both execution and output
  - steps:
     - first run programmatic with command undefined
     - then run programmatic with actual command
     - reason: make version normalization and download happen in parallel, before any child process starts
  - OPTS.parallel BOOL (def: false):
     - whether execution is serial
     - serial: use execa OPTS.stdio 'inherit' and OPTS.buffer false
     - parallel:
        - buffer each process until all the previous ones have completed
        - do it by getting current buffer, then piping, then canceling buffering, then printing retrieved current buffer
  - OPTS.wait BOOL (def: false):
     - whether to use execa OPTS.reject true
        - i.e. not only exitCode !== 0 but also termination signals
     - whether to stop execution on error
        - if parallel:
           - print the child process stdout|stderr that failed
           - then send SIGTERM to all others
     - is true, exitCode is the highest exitCode
  - if more than one version, each version output is:
     - prepended with a line showing the "Node.js VERSION"
        - VERSION is same as input, not normalized
        - in green unless OPTS.colors false (def: if stdout supports colors)
     - appended with an empty line
  - make sure stdin can still be used from terminal

Submit nve to https://github.com/sindresorhus/awesome-nodejs
