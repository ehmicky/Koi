How:
  - should go through Ava full source code to understand what can/should be done
  - probably need to monkey-patch Ava. Reasons:
     - detecting test failure:
        - for augmenting error
        - Ava assertions do not throw, but thrown errors make test fail
     - detecting test completion:
        - for serial/parallel and bailing
     - detecting if test is parallel
     - manipulating timeout

Interface:
  - AVA-EACH(AVA[, OPTS]):
     - check there is a way with Ava to ensure it is loaded first???
     - mutates AVA to add AVA.each|times()
  - AVA.each(ARR)->AVA
     - then AVA(TITLE, FUNC(t, VAL))
  - AVA.times(NUM)->AVA
  - reasons:
     - allow re-using iterations or combining them
     - friendly to eslint-plugin-ava
     - allows defining tests with same syntax

AVA.times(NUM):
  - repeat the function as is

AVA.times|each()[.times|each()]...:
  - does cartesian product
  - each each() dimension is passed as extra positional argument to test function

On test failure, append iterated data (each()) or index (times()) to error
  - try to use same way of printing/serializing error as Ava source code
  - should work with all reporters

Single test for all iterations, not one test per iteration
  - reason: better reporting on both success and error

Parallelism:
  - each iteration should be run either serially or in parallel depending on whether the test itself is serial or parallel + the test function is async (including using test.cb())

OPTS.bail BOOL:
  - true (def): fails test on first iterated error
  - false: report all errors

Timeout should be increased according to number of iterations

Generating functions:
  - if parameter is a function, it is fired to retrieve iterated datum
  - pass as arguments:
     - iterations parameters:
        - both previous and current iterations
        - function parameters remain functions (not their return value)
     - iteration index
  - fired only inside the test:
     - if throws or reject promise, make test fail
     - can be async, making the test async

Must not modify test FUNC.title|name

Should work with test.only|skip|...

Uncaught exception and unhandled rejection:
  - since it shortcircuits control flow, potential problems with:
     - augmenting error with iterated datum
     - bail on first error
  - current behavior: fails on uncaughtException or unhandledRejection. Cannot attribute to tesr because tests are parallel.
  - there is no real solution for this, so let it be
     - can check if maybe something can be done with unhandledRejection but not sure at all

Fix eslint-config-standard-prettier-fp rules:
  - some rules are test-specific due to extra depth level when doing data-driven testing
  - they can be removed after using ava-each
