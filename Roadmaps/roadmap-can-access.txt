
                      
   ROADMAP-CAN-ACCESS  
                      



canAccess(PATH[, OPTS])[->ERROR]

PATH is STR|BUFFER|URL|FD_NUM
  - make sure Babel handles URL since it does not work with Node.js 6.5.0

Do not normalize PATH
  - reason: caller might not normalize

OPTS:
  - exist, create, read, write, append
     - value is true, false (checked to be false) or undefined (not checked) (default for all OPTs)
  - exist: use fs.stat()
     - not fs.access() so FD_NUM is possible
  - read|write|append:
     - use fs.open()??? or fs.writeFile|appendFile|readFile()???
  - create:
     - noop if exists
     - try to create file then remove it
        - including intermediary dirs
     - also check other permissions with this file

ERROR should include everything that was wrong: "File ...: PATH" (and'd list):
  - "must [not] exist"
  - "must [not] be creatable"
  - "must [not] be readable|writable|appendable [if it were created]"

Check possible system errors on access (2) man page

Check Windows support???

Reasons alternatives do not work:
  - sometimes does not properly check EUID, EGID and additional groups:
     - fs.access() R_OK|W_OK
  - do not work with Windows ACLs and not well with Windows attributes:
     - fs.access() R_OK|W_OK
     - fs.statSync().mode
  - do not work with read-only mount nor Unix root / Windows admin
     - fs.statSync().mode
  - no way to check for file that does not exist yet

Maybe transform file-permissions into project that get|set file permissions cross-OS
  - i.e. might need to remove features, e.g. user classes
  - Linux and Windows could each have own project with more OS-specific features
