
                      
   ROADMAP-CAN-ACCESS  
                      



canAccess("PATH"[, OPTS])[->ERROR]

OPTS:
  - exist, create, read, write, exec
  - value is true, false (checked to be false) or undefined (not checked) (default for all OPTs)

Do not normalize PATH

ERROR should include everything that was wrong: "File ...: PATH" (and'd list):
  - "must [not] exist"
  - "must [not] be creatable"
  - "must [not] be readable|writable|executable"
  - "must [not] be readable|writable|executable after creation or re-creation"

Behavior (parallel):
  - make sure fs.access() covers chmod permissions
  - exist:
      - fs.access("PATH", F_OK) does not throw
  - create:
      - check both (parallel):
          - fs.access(ancestorDir, W_OK | X_OK) does not throw
          - either direct parent or umask allows write + exec
      - does not matter whether file exists or not
  - read|write|exec:
      - check both (parallel):
          - either (parallel) (can it combined? e.g. by checking ENOENT error?)
              - fs.access("PATH", F_OK) throws
              - or fs.access("PATH", R|W|X_OK) does not throw
          - either opts.create !== true or umask allows read|write|exec

Check possible system errors on access (2) man page

Break everything into smaller utils???

Add `canDelete`???
