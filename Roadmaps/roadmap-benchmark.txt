
                     
   ROADMAP-BENCHMARK  
                     



Use cases / features:
  - testing over several browsers + Node
  - regression testing
  - comparing with other tools
  - nice stats
  - nice reporting
  - comparison over time
  - should be very simple

Commercial offer:
  - Dashboard:
     - show time series (i.e. keep history)
     - nice data visualization
  - PR bot
  - notifications
  - user should report benchmark results to our API
     - like Codecov does
     - i.e. we do not pay for infrastructure cost, except simple CRUD API to store benchmark results
     - should be integrated with CI (i.e. use `ci-info`)
  - pricing:
     - free for open source
     - pay per private repo

CLI tool:
  - benchmark file should export OBJ instead of calling BENCHMARK(OBJ, OPTS)
  - CONF is either CLI flags or config file
  - add a Gulp task

TASK.async BOOL:
  - automatically guessed???
  - should use two different `measure()` functions, since checking if return value is a promise takes time, which skews timing
  - OPTS.maxConcurrency NUM
  - use async-done or other abstraction

On errors:
  - if OPTS.strict true (def), exit code 1
  - RESULT.failure OBJ:
     - errors ERROR_ARR: discard ERRORs with same ERROR.type + message (but not stack)

Add more stats in RESULT.duration:
  - mean NUM
  - average NUM
  - deviation NUM
  - variance NUM
  - min|max NUM
  - percentiles NUM_ARR
  - all NUM_ARR

TASK.thresholds OBJ:
  - same members as RESULT.duration
  - if above threshold:
     - exit code 1
     - on RESULT.failure.thresholds OBJ (with actual time that failed)

Reporters:
  - take RESULTS as inputs
  - stream RESULTs, so that can provide progress bar

OPTS.platforms STR (use browserlist and PACKAGE.engines)
  - run in different browsers and Node versions
     - i.e. should probably enforce ESM

RESULT.system OBJ: hardware and software info
