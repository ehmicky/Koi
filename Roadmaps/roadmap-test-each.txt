README
expected values -> expected outputs
test title will be -> tests titles will be
callback can do anything. A common use case is to define tests (using any test runner). -> A common use case for `callback` is to define tests (using any test runner).
Replace `env` examples by colors
Each combination of parameters is stringified as a name. It is available in the callback's first argument. -> Each combination of parameters is stringified as a `name` available in the callback's first argument.
Names should be included in test titles in order to: -> Names should be included in test titles to make them descriptive and unique.
Put truncate sentence, then duplicate sentence in next same paragraph.
Every JavaScript type -> Any JavaScript type
more flexible names -> dynamic names
return it -> returns it
move integers repeat to Fuzz testing section
Remove stateful functions section
  - add comment in code that closures can be used for state, but state will be dimensionless, as opposed to distributed. I.e. not documented because would be wrongly used.

In input functions, reduce() params instead of map() so that previous params are passed

Pass `info` as first arg to input functions:
  - not `name` nor `names`. Don't need to document that they are undefined
  - document example of using info.index as randomness seed, for reproducible fuzz testing

Use in other projects (stopped in log-process-errors)
  - unix-permissions:
     - move helper data to the tests
     - instead of using getCommand(), directly import the method

Finish documentation

Examples
  - uncomment it in the README

Logo

Add keywords

Package it for browsers too

Medium article:
  - "Is Cartesian testing a novel idea?"
  - Answer by No at end
  - Talk about interaction with snapshot testing and fuzz testing
  - Add link to README

Promote
