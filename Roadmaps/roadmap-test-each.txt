Generating FUNCs should be top-level (alongside ARR or NUM) instead of as ARR element

ARR as input instead of iterables
  - in fast-cartesian too

prettyFormat() should be performed:
  - after cartesian for generating functions
  - before cartesian for others

duplication parenthesis should be:
  - after each part (title + titles[index]) instead of all parts (title)
  - performed before cartesian
     - reason: so it can be streamed
  - done on ARRs but not on NUM (repeat) nor FUNCs (generating functions)

fast-cartesian:
  - add example of using Object.entries() on each argument (to remember original index)
  - two main exports:
     - array()->ARR
     - iterable()->ITERABLE
        - document how to use with "for of"
        - document that the goal is lower memory usage if lots of combinations

Use fastCartesian.iterable():
  - callback should iterate incrementally (for of)
  - should return iterator

Package it for browsers too

Logo

Promote on Tuesday

Medium article:
  - only if first promotion (of GitHub repo only) went well
  - go through how to do a data-driven test with also fuzz testing
  - step by step, with `diff` syntax highlighting
  - go through each feature of test-each with vanilla JavaScript, then at the end show that the final code can be written in just few lines with test-each
     - including snapshot testing and fuzz testing
  - use expression "Cartesian testing"
  - add link in README
