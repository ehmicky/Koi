
                   
   ROADMAP-WINDOWS  
                   



Find Windows word in single page Node.js online doc

Lists:
  - https://github.com/bcoe/awesome-cross-platform-nodejs/blob/master/readme.md#libraries
  - https://github.com/Microsoft/nodejs-guidelines/blob/master/README.md

Path:
  - summary:
     - usually use Unix path
     - except when dealing with input|output outside Node (in shell): use PATH.* then
  - differences:
     - delimiter is \ not /
     - root dir is like 'c:'
  - input in Node:
     - Unix path allowed on all OS, but Windows path also allowed in Windows (including mixed)
     - e.g. require(), PATH.*, FS.*, process.chdir()
  - output in Node:
     - OS-specific
        - but it's ok since input in Node in Windows allows mixing Unix/Windows
     - e.g. PATH.*, __dirname, process.argv|execPath|cwd(), OS.userInfo().homedir
     - exceptions:
        - PATH.posix|win32.*
        - output based on input, e.g. createReadStream().path, fs.mkdtemp()
  - input|output outside Node (in shell): OS-specific

UID/GID:
  - process.get|set[e]uid|gid() are not defined
  - os.userInfo().uid|gid is -1

ENVVARs:
  - PATH delimiter is ; not :

Commands spawning:
  - different

Native extensions

Shabang:
  - does not work on Windows
     - must use node FILE

Shell:
  - Windows has no ; but it has &&
  - OS.userInfo().shell is null

Errors:
  - some error types are OS-specific, e.g. errors starting with `W*`
     - ones starting with `E*` are OS-agnostic
  - different NERROR.errno (should use OS.constants.errno to translate)

Signals:
  - only OS-agnostic signals are: SIGHUP, SIGINT, SIGILL, SIGABRT, SIGFPE, SIGKILL, SIGSEGV, SIGBREAK, SIGWINCH
     - can listen but no default handler on Windows: SIGTERM
     - missing on Windows: SIGSTOP|SIGCONT (background, CTRL-Z), SIGQUIT (coredump, CTRL-\)
     - missing ones: SIGTRAP, SIGIOT, SIGBUS, SIGUSR1|2, SIGPIPE, SIGALRM, SIGCHLD, SIGSTKFLT,
       SIGTSTP, SIGTTIN, SIGTTOU, SIGURG, SIGXCPU, SIGXFSZ, SIGVTALARM, SIGPROF, SIGIO, SIGPOLL, SIGPWR, SIGSYS, SIGUNUSED
  - integers are different (should use OS.constants.signals to translate)
  - Windows does not allow terminating a process group
  - SIGHUP is emitted on Windows when terminal windows is closed (handler must complete within 10 secs)
  - CTRL-BREAK does SIGBREAK on Windows (similar to SIGINT)

Newline:
  - OS-independent: '\n' is LF, '\r' is CR
  - OS-dependent (CR+LF on Windows, LF others): terminal|file I/O
  - OS.EOL

Directory locations:
  - os.tmpdir(): `/tmp` on Unix, `C:\Users\USER\AppData\Local\Temp` on Windows
  - os.homedir(): `/home/USER` on Unix, `C:\Users\USER` on Windows

Identification:
  - process.platform: main way to test
  - os.platform|type|release(): more precise

Load:
  - os.loadavg() returns [0, 0, 0] on Windows

IPC:
  - process.*

Envvars names and how to use them in shell

Windows shell font has poor support for unicode chars
  - see npm package figures

Some libraries do not work on Windows
  -  including nvm (see nvm-windows)

ievms
