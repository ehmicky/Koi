
                   
   ROADMAP-WINDOWS  
                   



To do:
  - create a repo with all these explanations for how to write cross-OS node
     - check my Node.js doc file (look for "windows", "linux", "Mac" and "OS" in the file)
     - check nvm doc for their specifics on "windows"
     - check everything under `Iteroperability/OS` in my doc
     - check `cross-os` doc file
     - also check existing GitHub projects for this
  - portable-path (see its roadmap)
  - validate-path:
     - add `opts.portable: BOOL` (def: true): use `portable.path`
     - add tests, README, etc.

portable-node-guide

Errors:
  - Node errors `error.code` NERROR_NAME: most start with E* and are cross-OS. Some start with W* and are Windows-specific.
     - https://nodejs.org/api/errors.html#errors_error_code
     - https://nodejs.org/api/os.html#os_posix_error_constants
     - https://nodejs.org/api/os.html#os_windows_specific_error_constants
  - `error.errno` is OS-specific
     - https://nodejs.org/api/errors.html#errors_error_errno
  - conversions:
     - os.constants.errno[error.code] error.errno
        - https://nodejs.org/api/os.html#os_error_constants
     - util.getSystemErrorName(error.errno)->error.code
        - https://nodejs.org/api/util.html#util_util_getsystemerrorname_err

Native code:
  - on Windows, must first npm install -g windows-build-tools as admin
     - https://nodejs.org/api/addons.html

Networking:
  - cannot use `{ fd: UINT }` on Windows with TCPSERVER.listen()
     - https://nodejs.org/api/net.html#net_server_listen_handle_backlog_callback
  - cross-browser os.networkInterfaces() https://nodejs.org/api/os.html#os_os_networkinterfaces
  - hostname:
     - cross-browser os.hostname() https://nodejs.org/api/os.html#os_os_networkinterfaces

Node versions:
  - nvm-windows
  - nvs
  - npm-windows-upgrade

Continuous integration:
  - Travis
  - AppVeyor

Resources:
  - https://github.com/bcoe/awesome-cross-platform-nodejs
  - https://github.com/Microsoft/nodejs-guidelines
  - https://shapeshed.com/writing-cross-platform-node/

Permissions:
  - UID|GID on Unix, SID on Windows:
     - os.userInfo().uid|gid is 0 on Windows
        - https://nodejs.org/api/os.html#os_os_userinfo_options
  - cross-browser os.userInfo().user
     - https://nodejs.org/api/os.html#os_os_userinfo_options

Shell:
  - Bash (usually) on Unix, `cmd.exe` on Windows:
     - os.userInfo().shell is null on Windows
        - https://nodejs.org/api/os.html#os_os_userinfo_options

Locations:
  - temp dir:
     - cross-browser os.tmpdir() https://nodejs.org/api/os.html#os_os_tmpdir
     - example:
        - Linux: `/tmp`
        - Mac: `/var/folders/RANDOM/T`
        - Windows: `C:\Users\USER\AppData\Local\Temp`
  - home dir:
     - cross-browser os.homedir() https://nodejs.org/api/os.html#os_os_homedir
     - example:
        - Linux: `/home/USER`
        - Mac: `/Users/USER`
        - Windows: `C:\Users\USER`

Machine:
  - os.loadavg() returns [0,0,0] on Windows
     - https://nodejs.org/api/os.html#os_os_loadavg
  - os.cpus()[*].times.nice is always 0 on Windows
     - https://nodejs.org/api/os.html#os_os_cpus
  - cross-browser:
     - os.uptime() https://nodejs.org/api/os.html#os_os_uptime
     - os.freemem() https://nodejs.org/api/os.html#os_os_freemem
     - os.totalmem() https://nodejs.org/api/os.html#os_os_totalmem

Identification:
  - os.platform()->STR:
     - "linux", "darwin", "win32", "android" or "sunos", "aix", "freebsd", "openbsd"
     - https://nodejs.org/api/os.html#os_os_platform
  - os.type()->STR:
     - similar to platform() but slightly more precise.
     - e.g. "Linux", "Darwin", "Windows_NT", "CYGWIN_NT*", ""SunOS", "AIX", "FreeBSD", "OpenBSD"
     - https://nodejs.org/api/os.html#os_os_type
  - os.release()->STR
     - OS version number, e.g. "3.11.0-14-generic" (Linux), "18.0.0" (Mac), "10.0.17763" (Windows)
     - https://nodejs.org/api/os.html#os_os_release
  - os.arch()->STR
     - "arm[64]", "ia32", "x32|x64", "mips[el]", "ppc[64]", "s390[x]"
     - https://nodejs.org/api/os.html#os_os_arch
  - os.endianness()->STR
     - "BE" or "LE"
     - https://nodejs.org/api/os.html#os_os_endianness
