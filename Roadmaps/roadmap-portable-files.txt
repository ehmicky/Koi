
                          
   ROADMAP-PORTABLE-FILES  
                          



Rename to portable-files

Logo: /portable/files with programming font, different colors for slashes, and maybe dark terminal-like background

Link portable-node-guide to this, and vice-versa

Language-agnostic (advertise it)

Supports:
  - Windows: NTFS, ReFS
  - Linux: ext3, ext4, XFS, ZFS, BTRFS
  - Mac: APFS, HFS+
  - use lowest common denominator. No OPTS.filesystem|os

On directory:
  - recursive
  - return array of errors
  - try to find package root up
     - npx example???
  - look for gitignore or npmignore

On file:
  - validate symlink
  - file permissions: on Unix, no special permissions, and must a+rw
  - encoding ascii or utf-8???
      - rest only requires fs.stat()

On path:
  - see my notes
     - tilde should be allowed if not whole filename
  - Return path after path.normalize() applied

test on my root directory to see what is not portable

By default throws, but there is an option to remove that

PORTABLE-PATH('PATH')[->ERROR]
  - is string
  - is not empty (after trimming)
  - strip root on Windows (backslashes can be slashes):
     - LETTER:\
     - \\HOST\
     - \\?[\UNC]\ (can be combined with one of two above)
     - \\.\
  - then path.normalize()
  - allow both / and \ on Windows, but no \ on Unix
  - does not start with `-` -> creates confusion with CLI flags
  - does not end with space or dot -> Windows
  - no tilde on Windows
  - no whitespaces -> uses on CLI to separate arguments
  - no non-ASCII -> it does not work well with cmd.exe (which does not have Unicode support by default)
  - no [ ] # % & { } $ ! ' ` | " < > * ? ; -> special Bash meaning
  - no ^ + @ -> special Windows CLI meaning
  - no `:` -> invalid on Windows|Mac
  - no control chars -> invalid on Windows
  - no * " | < > ? -> invalid on Windows
  - max filename length 255 -> for most filesystems
  - max path 260 -> Windows
  - invalid filenames: com1, com2, com3, com4, com5, com6, com7, com8, com9, lpt1, lpt2, lpt3, lpt4, lpt5, lpt6, lpt7, lpt8,
    lpt9, con, nul, prn -> Windows
  - is lowercase -> NTFS/APFS/HFS+ are case insensitive




README INTRO ==>

Operating systems and file systems have different constraints for file paths and filenames: maximum length, allowed characters, etc.

`portable-path` ensures file paths are valid on any OS (Windows/Mac/Linux/BSD). Files are usually copied to different OS due to:
  - library used by users
  - different environments (development vs production)
  - colleagues/contributors with different machines
  - continuous integration run on multiple OS
  - SaaS/PaaS provider

For both source files and dynamic files
