
                
   NODE-CHARDET  
                



ALTERNATIVES ==>                  #  - node-chardet (preferred)
                                  #  - jschardet: very similar

VERSION ==>                       #0.8.0

SUPPORTED CHARSETS ==>            #  - UTF-8
                                  #  - UTF-16 LE|BE
                                  #  - UTF-32 LE|BE
                                  #  - ISO-8859-1|2|5|6|7|8|9
                                  #  - windows-1250|...|1256
                                  #  - ISO-2022-JP|KR|CN, Shift-JIS, Big5, EUC-JP, EUC-KR, GB18030
                                  #  - KOI8-R

detect(BUFFER[, OPTS])->'ENCODING'#Guesses charset.
                                  #If OPTS.returnAllMatches true (def: false):
                                  #  - returns all possible encodings instead of most likely one.
                                  #  - returned as OBJ_ARR:
                                  #     - name 'ENCODING'
                                  #     - lang STR (e.g. 'fr'): only for ISO-8859-*, windows-* and KOI8-R
                                  #     - confidence 0-100
                                  #  - sorted by likelihood.

detectFile(PATH[, OPTS],          #Same but with fs.readFile()
 FUNC(ERROR, 'ENCODING'))         #OPTS:
                                  #  - sampleSize NUM: only read first NUM chars
detectFileSync(PATH[, OPTS])
  ->'ENCODING'                    #

detect[File[Sync]]All(...)        #Same with OPTS.returnAllMatches true
