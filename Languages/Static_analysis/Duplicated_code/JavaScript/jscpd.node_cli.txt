
         
   JSCPD  
         



ALTERNATIVES ==>                  #  - jscpd (prefered): multi-languages
                                  #  - jsinspect: JavaScript-only, does not always work correctly
                                  #  - synt: less options, TypeScript-oriented, less popular

VERSION ==>                       #3.1.0

GOAL ==>                          #Detect code duplication:
                                  #  - tokenize with Prism.js
                                  #     - support many programming languages
                                  #     - including embedding, e.g. `<script>` in HTML
                                  #  - compare token types (not values/names)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            CONFIG             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CONF ==>                          #Can be:
                                  #  - PACKAGE_ROOT/.jscpd.json
                                  #  - PACKAGE.jscpd OBJ
                                  #  - CONF.config JSON_FILE
                                  #  - JSPCD.run(CONF)
                                  #  - jspcd --CONF_VAR CONF_VAL (dasherized)


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            RUNNING            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


jspcd FILE|DIR...                 #As CLI

new Jscpd.JSCPD(CONF)->JSCPD      #As Node module.
JSCPD.detect(STR, OPTS)           #OPTS:
 ->PROMISE_CLONE_ARR              #  - id STR (anything)
                                  #  - format 'FORMAT'
JSCPD.detectInFiles(FILE|DIR_ARR)
 ->PROMISE_CLONE_ARR              #Cannot use globbing

JSCPD.on
 (MATCH_SOURCE_EVENT,FUNC(source))#Start reading a file
JSCPD.on
 (CLONE_FOUND_EVENT, FUNC(CLONE)) #Found duplication
JSCPD.on
 (SOURCE_SKIPPED_EVENT,FUNC(STAT))#File skipped because of CONF.min|maxLines|maxSize
JSCPD.on
 (END_EVENT, FUNC(CLONE_ARR))     #Finished

CLONE.format                      #'FORMAT'
CLONE.isNew                       #BOOL
CLONE.foundDate                   #DATE_NUM
CLONE.duplicationA|B              #DUP
DUP.sourceId                      #STR
DUP.start|end.line|column         #NUM
DUP.range                         #NUM_ARR
DUP.fragment                      #STR
DUP.blame.rev|author|date|line    #STR



                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             SKIP              :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


/* jscpd:ignore-start|end */
<!-- jscpd:ignore-start|end -->   #

                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:            OPTIONS            :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


CONF.path                         #'DIR'_ARR to include
CONF.ignore                       #'GLOB'_ARR to exclude
                                  #Use minimatch (see its doc)
CONF.gitignore                    #BOOL (def: true). Use .gitignore

CONF.format                       #STR_ARR. Format/languages.
                                  #Def: all. See online doc for list
CONF.formatExts                   #'FORMAT:EXT,...;...'
                                  #Determine the LANGUAGE according to file extension
                                  #Def: see source code

CONF.silent                       #BOOL (def: false)
CONF.debug                        #BOOL (def: false)
CONF.blame                        #BOOL (def: false). Show authors and dates.
                                  #Implies verbose

CONF.reporters                    #STR_ARR
                                  #Among:
                                  #  - console (def)
                                  #  - consoleFull: show code snippets (only of first one for each duplication)
                                  #  - time (always added on CLI): show execution time
                                  #  - verbose
                                  #  - json: to jscpd-report.json
                                  #  - xml
                                  #  - html
CONF.output                       #DIR for json|xml|html reporters (def: ./report)
CONF.absolute                     #BOOL (def: false). Use absolute paths in reports.
CONF.xslHref                      #FILE. Used with XML and XSL

CONF.minTokens                    #Duplication must be at least NUM tokens long to be reported
                                  #Def: 70
                                  #Note: tokens include small things like . ; ( ) { }
CONF.min|maxLines                 #Do not report if file is less|more than NUM lines long
                                  #Def: 5|500
                                  #0 means infinite
CONF.maxSize                      #Do not report if file is more than STR bytes long (uses bytes, see its doc)
                                  #Def: '30kb'
CONF.threshold                    #NUM (0-100). Def: none
                                  #Exit code of 1 if duplicated lines percentage is above NUM
CONF.mode                         #Can be:
                                  #  - strict
                                  #  - mild: skip empty lines and empty symbols
                                  #  - weak: skip empty lines, empty symbols and comments
CONF.ignoreCase                   #BOOL (def: false). Ignore token case.

CONF.noSymlinks                   #BOOL (def: false). Do not follow symlinked directories.

CONF.storeOptions.NAME            #How intermediary values are stored. OBJ:
                                  #  - type:
                                  #     - 'memory':
                                  #        - does not create intermediary .jscpd/ folder
                                  #        - does not work with really huge repos
                                  #     - 'files'
                                  #     - 'level' (def): LevelDB, 33% slower
                                  #  ('files', 'level')
                                  #  - name STR (def: 'level'): filename
                                  #  ('level')
                                  #  - persist BOOL (def: false)
                                  #NAME can be:
                                  #  - '*'
                                  #  - 'statistic' or 'hashes_FORMAT': different states using stores


                                             /=+===============================+=\
                                            /  :                               :  \
                                            )==:             BADGE             :==(
                                            \  :_______________________________:  /
                                             \=+===============================+=/


JSCPD-BADGE-REPORTER ==>         ##Creates a badge with duplication percentage
                                 ##See its doc
